diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..52f7da2
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,27 @@
+# Compiled python modules.
+*.pyc
+
+# Byte-compiled
+_pycache__/
+.cache/
+*__pycache_*
+*.pyc
+
+# Poetry, setuptools, PyPI distribution artifacts.
+/*.egg-info
+.eggs/
+build/
+dist/
+poetry.lock
+
+# Tests
+.pytest_cache/
+
+# Type checking
+.pytype/
+
+# Other
+*.DS_Store
+
+# PyCharm
+.idea
diff --git a/android_env/wrappers/a11y/__init__.py b/android_env/components/a11y/__init__.py
similarity index 100%
rename from android_env/wrappers/a11y/__init__.py
rename to android_env/components/a11y/__init__.py
diff --git a/android_env/wrappers/a11y/a11y_events.py b/android_env/components/a11y/a11y_events.py
similarity index 100%
rename from android_env/wrappers/a11y/a11y_events.py
rename to android_env/components/a11y/a11y_events.py
diff --git a/android_env/wrappers/a11y/a11y_events_test.py b/android_env/components/a11y/a11y_events_test.py
similarity index 99%
rename from android_env/wrappers/a11y/a11y_events_test.py
rename to android_env/components/a11y/a11y_events_test.py
index 400fd80..3b0d036 100644
--- a/android_env/wrappers/a11y/a11y_events_test.py
+++ b/android_env/components/a11y/a11y_events_test.py
@@ -17,8 +17,8 @@
 
 from absl.testing import absltest
 from absl.testing import parameterized
+from android_env.components.a11y import a11y_events
 from android_env.proto.a11y import a11y_pb2
-from android_env.wrappers.a11y import a11y_events
 import numpy as np
 
 from google.protobuf import any_pb2
diff --git a/android_env/wrappers/a11y/a11y_forests.py b/android_env/components/a11y/a11y_forests.py
similarity index 100%
rename from android_env/wrappers/a11y/a11y_forests.py
rename to android_env/components/a11y/a11y_forests.py
diff --git a/android_env/wrappers/a11y/a11y_forests_test.py b/android_env/components/a11y/a11y_forests_test.py
similarity index 99%
rename from android_env/wrappers/a11y/a11y_forests_test.py
rename to android_env/components/a11y/a11y_forests_test.py
index b57f30a..1a4d477 100644
--- a/android_env/wrappers/a11y/a11y_forests_test.py
+++ b/android_env/components/a11y/a11y_forests_test.py
@@ -17,8 +17,8 @@
 
 from absl.testing import absltest
 from absl.testing import parameterized
+from android_env.components.a11y import a11y_forests
 from android_env.proto.a11y import android_accessibility_forest_pb2
-from android_env.wrappers.a11y import a11y_forests
 import numpy as np
 
 from google.protobuf import any_pb2
diff --git a/android_env/wrappers/a11y/a11y_servicer.py b/android_env/components/a11y/a11y_servicer.py
similarity index 99%
rename from android_env/wrappers/a11y/a11y_servicer.py
rename to android_env/components/a11y/a11y_servicer.py
index 82e9e25..f5228f5 100644
--- a/android_env/wrappers/a11y/a11y_servicer.py
+++ b/android_env/components/a11y/a11y_servicer.py
@@ -51,6 +51,8 @@ class A11yServicer(a11y_pb2_grpc.A11yServiceServicer):
       request: android_accessibility_forest_pb2.AndroidAccessibilityForest,
       context: grpc.ServicerContext,
   ) -> a11y_pb2.ForestResponse:
+    # import pdb
+    # pdb.set_trace()
     self._process_forest(request)
     return a11y_pb2.ForestResponse()
 
@@ -190,7 +192,6 @@ class A11yServicer(a11y_pb2_grpc.A11yServiceServicer):
       self, forest: android_accessibility_forest_pb2.AndroidAccessibilityForest
   ) -> None:
     """Adds the given forest to the internal buffer of forests."""
-
     if not self._paused:
       with self._lock_forests:
         if self._latest_forest_only:
diff --git a/android_env/wrappers/a11y/a11y_servicer_test.py b/android_env/components/a11y/a11y_servicer_test.py
similarity index 99%
rename from android_env/wrappers/a11y/a11y_servicer_test.py
rename to android_env/components/a11y/a11y_servicer_test.py
index 91be602..bb1d876 100644
--- a/android_env/wrappers/a11y/a11y_servicer_test.py
+++ b/android_env/components/a11y/a11y_servicer_test.py
@@ -22,9 +22,9 @@ from unittest import IsolatedAsyncioTestCase, mock
 
 from absl.testing import absltest
 from absl.testing import parameterized
+from android_env.components.a11y import a11y_servicer
 from android_env.proto.a11y import a11y_pb2
 from android_env.proto.a11y import android_accessibility_forest_pb2
-from android_env.wrappers.a11y import a11y_servicer
 import grpc
 
 
diff --git a/android_env/components/action_fns.py b/android_env/components/action_fns.py
index e290e9d..97dd86d 100644
--- a/android_env/components/action_fns.py
+++ b/android_env/components/action_fns.py
@@ -21,6 +21,7 @@ from android_env.components import errors
 from android_env.components import pixel_fns
 from android_env.components.simulators import base_simulator
 import numpy as np
+import time
 
 
 def send_action_to_simulator(
@@ -44,26 +45,29 @@ def send_action_to_simulator(
     num_fingers: The number of fingers used in this simulator.
   """
 
-  try:
-    match action['action_type']:
-      # If the action is a TOUCH or LIFT, send a touch event to the simulator.
-      case action_type_lib.ActionType.TOUCH | action_type_lib.ActionType.LIFT:
+  max_retries = 5
+  for attempt in range(max_retries):
+    try:
+      action_type = action['action_type']
+      if action_type in (action_type_lib.ActionType.TOUCH, action_type_lib.ActionType.LIFT):
         prepared_action = _prepare_touch_action(
             action, screen_width, screen_height, num_fingers
         )
         simulator.send_touch(prepared_action)
-      # If the action is a key event, send a key event to the simulator.
-      case action_type_lib.ActionType.KEYDOWN:
+      elif action_type == action_type_lib.ActionType.KEYDOWN:
         simulator.send_key(action['keycode'].item(0), event_type='keydown')
-      case action_type_lib.ActionType.KEYUP:
+      elif action_type == action_type_lib.ActionType.KEYUP:
         simulator.send_key(action['keycode'].item(0), event_type='keyup')
-      case action_type_lib.ActionType.KEYPRESS:
+      elif action_type == action_type_lib.ActionType.KEYPRESS:
         simulator.send_key(action['keycode'].item(0), event_type='keypress')
-  except errors.SendActionError:
-    logging.exception('Unable to execute action: %r', action)
-    return False
-
-  return True
+      return True
+    except errors.SendActionError:
+      logging.exception('Unable to execute action (attempt %d/%d): %r', attempt + 1, max_retries, action)
+      if attempt < max_retries - 1:
+        time.sleep(1)
+      else:
+        raise errors.SendActionError(f"Unable to execute action (attempt {attempt + 1}/{max_retries}): {action}")
+  return False
 
 
 def _prepare_touch_action(
diff --git a/android_env/components/adb_call_parser.py b/android_env/components/adb_call_parser.py
index 53efe47..9e06bff 100644
--- a/android_env/components/adb_call_parser.py
+++ b/android_env/components/adb_call_parser.py
@@ -280,15 +280,7 @@ class AdbCallParser:
             ['install', '-r', '-t', '-g', fpath], timeout=timeout
         )
       case 'blob':
-
-        # `delete_on_close` was only added in Python 3.12 so we add a switch
-        # here to still support previous Python versions.
-        if sys.version_info >= (3, 12):
-          kwargs = {'suffix': '.apk', 'delete_on_close': False}
-        else:
-          kwargs = {'suffix': '.apk'}
-
-        with tempfile.NamedTemporaryFile(**kwargs) as f:
+        with tempfile.NamedTemporaryFile(suffix='.apk') as f:
           fpath = f.name
           f.write(install_apk.blob.contents)
 
diff --git a/android_env/components/adb_call_parser_test.py b/android_env/components/adb_call_parser_test.py
index 7b178d7..30dd893 100644
--- a/android_env/components/adb_call_parser_test.py
+++ b/android_env/components/adb_call_parser_test.py
@@ -98,13 +98,8 @@ class AdbCallParserTest(parameterized.TestCase):
         ['install', '-r', '-t', '-g', '/my/home/test.apk'], None
     )
     # pytype: disable=attribute-error
-    expected_tempfile_kwargs = (
-        {'suffix': '.apk', 'delete_on_close': False}
-        if sys.version_info > (3, 12)
-        else {'suffix': '.apk'}
-    )
     mock_tempfile.assert_has_calls([
-        mock.call(**expected_tempfile_kwargs),  # Constructor
+        mock.call(suffix='.apk'),  # Constructor
         mock.call().__enter__(),  # Enter context
         mock.call().__enter__().write(blob_content),  # Call write function
         mock.call().__exit__(None, None, None),  # Exit context
diff --git a/android_env/components/adb_controller.py b/android_env/components/adb_controller.py
index a8a1b9d..27c3888 100644
--- a/android_env/components/adb_controller.py
+++ b/android_env/components/adb_controller.py
@@ -16,6 +16,7 @@
 """A class to manage and control an external ADB process."""
 
 import os
+import socket
 import subprocess
 import time
 
@@ -31,6 +32,7 @@ class AdbController:
     """Instantiates an AdbController object."""
 
     self._config = config
+    # logging.set_verbosity('debug')
     logging.info('config: %r', self._config)
 
     # Unset problematic environment variables. ADB commands will fail if these
@@ -110,39 +112,69 @@ class AdbController:
       The output of running such command as a binary string.
     """
     timeout = self._config.default_timeout if timeout is None else timeout
-    command = self.command_prefix(include_device_name=device_specific) + args
+    command = self.command_prefix(include_device_name=True)[0].split(' ') + self.command_prefix(include_device_name=True)[1:] + args
+    #command = self.command_prefix(include_device_name=False)[0].split(' ') + args
+    #command = command[0].split(' ') + args
     command_str = 'adb ' + ' '.join(command[1:])
 
-    n_retries = 2
+    n_retries = 5
     n_tries = 1
     latest_error = None
     while n_tries <= n_retries:
       try:
         logging.info('Executing ADB command: [%s]', command_str)
-        cmd_output = subprocess.check_output(
+        emulator_host = self._os_env_vars.get('EMULATOR_HOST', 'localhost')
+        emulator_token = self._os_env_vars.get('EMULATOR_TOKEN')
+        if args[0] == 'emu' and emulator_host not in ['localhost', '127.0.0.1', '::1'] and emulator_token:
+          # requires socket communication to the emulator console
+          emulator_port = int(self._config.device_name.split('-')[-1])
+
+          def recv_response(s):
+            buffer = b''
+            while b'OK\r\n' not in buffer and b'KO:' not in buffer:
+              chunk = s.recv(4096)
+              if not chunk:
+                raise RuntimeError('Socket closed before expected data received.')
+              buffer += chunk
+            return buffer
+
+          with socket.create_connection((emulator_host, emulator_port), timeout=timeout) as s:
+            recv_response(s)  # receive banner
+            s.sendall(f'auth {emulator_token}\r\n'.encode('utf-8'))
+            auth_response = recv_response(s)
+            if b'OK\r\n' not in auth_response:
+              raise RuntimeError(f'Failed to authenticate with emulator: {auth_response.decode("utf-8")}')
+            s.sendall(f'{" ".join(args[1:]).strip()}\r\n'.encode('utf-8'))
+            response = recv_response(s)
+            if b'OK\r\n' not in response:
+              raise RuntimeError(f'Unexpected response from emulator: {response.decode("utf-8")}')
+            return response[:-4]  # Exclude the trailing 'OK\r\n'
+        else:
+          cmd_output = subprocess.check_output(
             command,
             stderr=subprocess.STDOUT,
             timeout=timeout,
             env=self._os_env_vars,
-        )
+          )
         logging.debug('ADB command output: %s', cmd_output)
         return cmd_output
-      except (subprocess.CalledProcessError, subprocess.TimeoutExpired) as e:
+      except Exception as e:
+        latest_error = e
+        if n_tries <= n_retries:
+          time.sleep(10)
+          n_tries += 1
+
         logging.exception(
-            'Failed to execute ADB command (try %r of 3): [%s]',
-            n_tries, command_str)
-        if e.stdout is not None:
+          'Failed to execute ADB command (try %r of 5): [%s]',
+          n_tries, command_str)
+        if hasattr(e, 'stdout') and e.stdout is not None:
           logging.error('**stdout**:')
           for line in e.stdout.splitlines():
             logging.error('    %s', line)
-        if e.stderr is not None:
+        if hasattr(e, 'stderr') and e.stderr is not None:
           logging.error('**stderr**:')
           for line in e.stderr.splitlines():
             logging.error('    %s', line)
-        n_tries += 1
-        latest_error = e
-        if device_specific and n_tries <= n_retries:
-          self._restart_server(timeout=timeout)
 
     raise errors.AdbControllerError(
         f'Error executing adb command: [{command_str}]\n'
diff --git a/android_env/components/adb_log_stream.py b/android_env/components/adb_log_stream.py
index 17ad4eb..5436952 100644
--- a/android_env/components/adb_log_stream.py
+++ b/android_env/components/adb_log_stream.py
@@ -29,7 +29,7 @@ class AdbLogStream(log_stream.LogStream):
 
   def __init__(self, adb_command_prefix: list[str], verbose: bool = False):
     super().__init__(verbose=verbose)
-    self._adb_command_prefix = adb_command_prefix
+    self._adb_command_prefix = adb_command_prefix[0].split(' ') + adb_command_prefix[1:]
 
   def _get_stream_output(self):
 
diff --git a/android_env/components/simulators/emulator/emulator_simulator.py b/android_env/components/simulators/emulator/emulator_simulator.py
index d7f6187..231f3bd 100644
--- a/android_env/components/simulators/emulator/emulator_simulator.py
+++ b/android_env/components/simulators/emulator/emulator_simulator.py
@@ -187,6 +187,7 @@ class EmulatorSimulator(base_simulator.BaseSimulator):
       return f'Logfile does not exist: {self._logfile_path}.'
 
   def adb_device_name(self) -> str:
+    #return 'localhost:%s' % (self._config.emulator_launcher.adb_port - 1)
     return 'emulator-%s' % (self._config.emulator_launcher.adb_port - 1)
 
   def create_adb_controller(self):
@@ -339,13 +340,14 @@ class EmulatorSimulator(base_simulator.BaseSimulator):
     """Connects to an emulator and returns a corresponsing stub."""
 
     logging.info('Creating gRPC channel to the emulator on port %r', grpc_port)
-    port = f'localhost:{grpc_port}'
+    port = f'{os.environ.get("EMULATOR_HOST", "localhost")}:{grpc_port}'
     options = [('grpc.max_send_message_length', -1),
                ('grpc.max_receive_message_length', -1)]
     creds = grpc.local_channel_credentials()
 
     try:
-      self._channel = grpc.secure_channel(port, creds, options=options)
+      # self._channel = grpc.secure_channel(port, creds, options=options)
+      self._channel = grpc.insecure_channel(port, options=options)
       grpc.channel_ready_future(self._channel).result(timeout=timeout_sec)
     except (grpc.RpcError, grpc.FutureTimeoutError) as grpc_error:
       logging.exception('Failed to connect to the emulator.')
diff --git a/android_env/proto/a11y/a11y_pb2.py b/android_env/proto/a11y/a11y_pb2.py
new file mode 100644
index 0000000..88d6c93
--- /dev/null
+++ b/android_env/proto/a11y/a11y_pb2.py
@@ -0,0 +1,54 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/a11y.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/a11y.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto.a11y import android_accessibility_forest_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__forest__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!android_env/proto/a11y/a11y.proto\x12\x0b\x61ndroid_env\x1a\x39\x61ndroid_env/proto/a11y/android_accessibility_forest.proto\"\x1f\n\x0e\x46orestResponse\x12\r\n\x05\x65rror\x18\x01 \x01(\t\"q\n\x0c\x45ventRequest\x12\x33\n\x05\x65vent\x18\x01 \x03(\x0b\x32$.android_env.EventRequest.EventEntry\x1a,\n\nEventEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1e\n\rEventResponse\x12\r\n\x05\x65rror\x18\x01 \x01(\t\"\x82\x01\n\x0e\x43lientToServer\x12*\n\x05\x65vent\x18\x01 \x01(\x0b\x32\x19.android_env.EventRequestH\x00\x12\x39\n\x06\x66orest\x18\x02 \x01(\x0b\x32\'.android_env.AndroidAccessibilityForestH\x00\x42\t\n\x07payload\"m\n\x0eServerToClient\x12?\n\nget_forest\x18\x01 \x01(\x0b\x32).android_env.ServerToClient.GetA11yForestH\x00\x1a\x0f\n\rGetA11yForestB\t\n\x07payload2\xf1\x01\n\x0b\x41\x31\x31yService\x12T\n\nSendForest\x12\'.android_env.AndroidAccessibilityForest\x1a\x1b.android_env.ForestResponse\"\x00\x12\x44\n\tSendEvent\x12\x19.android_env.EventRequest\x1a\x1a.android_env.EventResponse\"\x00\x12\x46\n\x04\x42idi\x12\x1b.android_env.ClientToServer\x1a\x1b.android_env.ServerToClient\"\x00(\x01\x30\x01\x42\x30\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.a11y_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_EVENTREQUEST_EVENTENTRY']._loaded_options = None
+  _globals['_EVENTREQUEST_EVENTENTRY']._serialized_options = b'8\001'
+  _globals['_FORESTRESPONSE']._serialized_start=109
+  _globals['_FORESTRESPONSE']._serialized_end=140
+  _globals['_EVENTREQUEST']._serialized_start=142
+  _globals['_EVENTREQUEST']._serialized_end=255
+  _globals['_EVENTREQUEST_EVENTENTRY']._serialized_start=211
+  _globals['_EVENTREQUEST_EVENTENTRY']._serialized_end=255
+  _globals['_EVENTRESPONSE']._serialized_start=257
+  _globals['_EVENTRESPONSE']._serialized_end=287
+  _globals['_CLIENTTOSERVER']._serialized_start=290
+  _globals['_CLIENTTOSERVER']._serialized_end=420
+  _globals['_SERVERTOCLIENT']._serialized_start=422
+  _globals['_SERVERTOCLIENT']._serialized_end=531
+  _globals['_SERVERTOCLIENT_GETA11YFOREST']._serialized_start=505
+  _globals['_SERVERTOCLIENT_GETA11YFOREST']._serialized_end=520
+  _globals['_A11YSERVICE']._serialized_start=534
+  _globals['_A11YSERVICE']._serialized_end=775
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/a11y_pb2.pyi b/android_env/proto/a11y/a11y_pb2.pyi
new file mode 100644
index 0000000..d1db3d8
--- /dev/null
+++ b/android_env/proto/a11y/a11y_pb2.pyi
@@ -0,0 +1,50 @@
+from android_env.proto.a11y import android_accessibility_forest_pb2 as _android_accessibility_forest_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class ForestResponse(_message.Message):
+    __slots__ = ("error",)
+    ERROR_FIELD_NUMBER: _ClassVar[int]
+    error: str
+    def __init__(self, error: _Optional[str] = ...) -> None: ...
+
+class EventRequest(_message.Message):
+    __slots__ = ("event",)
+    class EventEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: str
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+    EVENT_FIELD_NUMBER: _ClassVar[int]
+    event: _containers.ScalarMap[str, str]
+    def __init__(self, event: _Optional[_Mapping[str, str]] = ...) -> None: ...
+
+class EventResponse(_message.Message):
+    __slots__ = ("error",)
+    ERROR_FIELD_NUMBER: _ClassVar[int]
+    error: str
+    def __init__(self, error: _Optional[str] = ...) -> None: ...
+
+class ClientToServer(_message.Message):
+    __slots__ = ("event", "forest")
+    EVENT_FIELD_NUMBER: _ClassVar[int]
+    FOREST_FIELD_NUMBER: _ClassVar[int]
+    event: EventRequest
+    forest: _android_accessibility_forest_pb2.AndroidAccessibilityForest
+    def __init__(self, event: _Optional[_Union[EventRequest, _Mapping]] = ..., forest: _Optional[_Union[_android_accessibility_forest_pb2.AndroidAccessibilityForest, _Mapping]] = ...) -> None: ...
+
+class ServerToClient(_message.Message):
+    __slots__ = ("get_forest",)
+    class GetA11yForest(_message.Message):
+        __slots__ = ()
+        def __init__(self) -> None: ...
+    GET_FOREST_FIELD_NUMBER: _ClassVar[int]
+    get_forest: ServerToClient.GetA11yForest
+    def __init__(self, get_forest: _Optional[_Union[ServerToClient.GetA11yForest, _Mapping]] = ...) -> None: ...
diff --git a/android_env/proto/a11y/a11y_pb2_grpc.py b/android_env/proto/a11y/a11y_pb2_grpc.py
new file mode 100644
index 0000000..eb9b0ba
--- /dev/null
+++ b/android_env/proto/a11y/a11y_pb2_grpc.py
@@ -0,0 +1,202 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+from android_env.proto.a11y import a11y_pb2 as android__env_dot_proto_dot_a11y_dot_a11y__pb2
+from android_env.proto.a11y import android_accessibility_forest_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__forest__pb2
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/a11y_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
+
+
+class A11yServiceStub(object):
+    """A service to send Accessibility information to a remote server.
+
+    The client is assumed to be running inside an Android device (e.g. emulator
+    or real device) while the server is assumed to be running outside (e.g. in a
+    Python process).
+    """
+
+    def __init__(self, channel):
+        """Constructor.
+
+        Args:
+            channel: A grpc.Channel.
+        """
+        self.SendForest = channel.unary_unary(
+                '/android_env.A11yService/SendForest',
+                request_serializer=android__env_dot_proto_dot_a11y_dot_android__accessibility__forest__pb2.AndroidAccessibilityForest.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ForestResponse.FromString,
+                _registered_method=True)
+        self.SendEvent = channel.unary_unary(
+                '/android_env.A11yService/SendEvent',
+                request_serializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventRequest.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventResponse.FromString,
+                _registered_method=True)
+        self.Bidi = channel.stream_stream(
+                '/android_env.A11yService/Bidi',
+                request_serializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ClientToServer.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ServerToClient.FromString,
+                _registered_method=True)
+
+
+class A11yServiceServicer(object):
+    """A service to send Accessibility information to a remote server.
+
+    The client is assumed to be running inside an Android device (e.g. emulator
+    or real device) while the server is assumed to be running outside (e.g. in a
+    Python process).
+    """
+
+    def SendForest(self, request, context):
+        """Sends a forest of Accessibility trees to a server.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def SendEvent(self, request, context):
+        """Sends an a11y event to a server.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def Bidi(self, request_iterator, context):
+        """Long-lived bidirection communication between the client and the server.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+
+def add_A11yServiceServicer_to_server(servicer, server):
+    rpc_method_handlers = {
+            'SendForest': grpc.unary_unary_rpc_method_handler(
+                    servicer.SendForest,
+                    request_deserializer=android__env_dot_proto_dot_a11y_dot_android__accessibility__forest__pb2.AndroidAccessibilityForest.FromString,
+                    response_serializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ForestResponse.SerializeToString,
+            ),
+            'SendEvent': grpc.unary_unary_rpc_method_handler(
+                    servicer.SendEvent,
+                    request_deserializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventRequest.FromString,
+                    response_serializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventResponse.SerializeToString,
+            ),
+            'Bidi': grpc.stream_stream_rpc_method_handler(
+                    servicer.Bidi,
+                    request_deserializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ClientToServer.FromString,
+                    response_serializer=android__env_dot_proto_dot_a11y_dot_a11y__pb2.ServerToClient.SerializeToString,
+            ),
+    }
+    generic_handler = grpc.method_handlers_generic_handler(
+            'android_env.A11yService', rpc_method_handlers)
+    server.add_generic_rpc_handlers((generic_handler,))
+    server.add_registered_method_handlers('android_env.A11yService', rpc_method_handlers)
+
+
+ # This class is part of an EXPERIMENTAL API.
+class A11yService(object):
+    """A service to send Accessibility information to a remote server.
+
+    The client is assumed to be running inside an Android device (e.g. emulator
+    or real device) while the server is assumed to be running outside (e.g. in a
+    Python process).
+    """
+
+    @staticmethod
+    def SendForest(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android_env.A11yService/SendForest',
+            android__env_dot_proto_dot_a11y_dot_android__accessibility__forest__pb2.AndroidAccessibilityForest.SerializeToString,
+            android__env_dot_proto_dot_a11y_dot_a11y__pb2.ForestResponse.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def SendEvent(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android_env.A11yService/SendEvent',
+            android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventRequest.SerializeToString,
+            android__env_dot_proto_dot_a11y_dot_a11y__pb2.EventResponse.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def Bidi(request_iterator,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.stream_stream(
+            request_iterator,
+            target,
+            '/android_env.A11yService/Bidi',
+            android__env_dot_proto_dot_a11y_dot_a11y__pb2.ClientToServer.SerializeToString,
+            android__env_dot_proto_dot_a11y_dot_a11y__pb2.ServerToClient.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
diff --git a/android_env/proto/a11y/android_accessibility_action_pb2.py b/android_env/proto/a11y/android_accessibility_action_pb2.py
new file mode 100644
index 0000000..3abfe2e
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_action_pb2.py
@@ -0,0 +1,37 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_action.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_action.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n9android_env/proto/a11y/android_accessibility_action.proto\x12\x0b\x61ndroid_env\"7\n\x1a\x41ndroidAccessibilityAction\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05label\x18\x02 \x01(\tB0\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_action_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYACTION']._serialized_start=74
+  _globals['_ANDROIDACCESSIBILITYACTION']._serialized_end=129
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_action_pb2.pyi b/android_env/proto/a11y/android_accessibility_action_pb2.pyi
new file mode 100644
index 0000000..9844b78
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_action_pb2.pyi
@@ -0,0 +1,13 @@
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from typing import ClassVar as _ClassVar, Optional as _Optional
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityAction(_message.Message):
+    __slots__ = ("id", "label")
+    ID_FIELD_NUMBER: _ClassVar[int]
+    LABEL_FIELD_NUMBER: _ClassVar[int]
+    id: int
+    label: str
+    def __init__(self, id: _Optional[int] = ..., label: _Optional[str] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_action_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_action_pb2_grpc.py
new file mode 100644
index 0000000..9d054c0
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_action_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_action_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/android_accessibility_forest_pb2.py b/android_env/proto/a11y/android_accessibility_forest_pb2.py
new file mode 100644
index 0000000..8b1d3b7
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_forest_pb2.py
@@ -0,0 +1,38 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_forest.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_forest.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto.a11y import android_accessibility_window_info_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__window__info__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n9android_env/proto/a11y/android_accessibility_forest.proto\x12\x0b\x61ndroid_env\x1a>android_env/proto/a11y/android_accessibility_window_info.proto\"Z\n\x1a\x41ndroidAccessibilityForest\x12<\n\x07windows\x18\x01 \x03(\x0b\x32+.android_env.AndroidAccessibilityWindowInfoB0\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_forest_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYFOREST']._serialized_start=138
+  _globals['_ANDROIDACCESSIBILITYFOREST']._serialized_end=228
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_forest_pb2.pyi b/android_env/proto/a11y/android_accessibility_forest_pb2.pyi
new file mode 100644
index 0000000..2152f60
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_forest_pb2.pyi
@@ -0,0 +1,14 @@
+from android_env.proto.a11y import android_accessibility_window_info_pb2 as _android_accessibility_window_info_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityForest(_message.Message):
+    __slots__ = ("windows",)
+    WINDOWS_FIELD_NUMBER: _ClassVar[int]
+    windows: _containers.RepeatedCompositeFieldContainer[_android_accessibility_window_info_pb2.AndroidAccessibilityWindowInfo]
+    def __init__(self, windows: _Optional[_Iterable[_Union[_android_accessibility_window_info_pb2.AndroidAccessibilityWindowInfo, _Mapping]]] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_forest_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_forest_pb2_grpc.py
new file mode 100644
index 0000000..668d15e
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_forest_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_forest_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.py b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.py
new file mode 100644
index 0000000..23674b7
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.py
@@ -0,0 +1,39 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_node_info_clickable_span.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_node_info_clickable_span.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\nKandroid_env/proto/a11y/android_accessibility_node_info_clickable_span.proto\x12\x0b\x61ndroid_env\"\xfc\x01\n)AndroidAccessibilityNodeInfoClickableSpan\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x0b\n\x03url\x18\x02 \x01(\t\x12Q\n\x06source\x18\x03 \x01(\x0e\x32\x41.android_env.AndroidAccessibilityNodeInfoClickableSpan.SpanSource\x12\r\n\x05start\x18\x04 \x01(\x05\x12\x0f\n\x07node_id\x18\x05 \x01(\x05\"A\n\nSpanSource\x12\x10\n\x0cUNKNOWN_TYPE\x10\x00\x12\x08\n\x04TEXT\x10\x01\x12\x17\n\x13\x43ONTENT_DESCRIPTION\x10\x02\x42\x30\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_node_info_clickable_span_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYNODEINFOCLICKABLESPAN']._serialized_start=93
+  _globals['_ANDROIDACCESSIBILITYNODEINFOCLICKABLESPAN']._serialized_end=345
+  _globals['_ANDROIDACCESSIBILITYNODEINFOCLICKABLESPAN_SPANSOURCE']._serialized_start=280
+  _globals['_ANDROIDACCESSIBILITYNODEINFOCLICKABLESPAN_SPANSOURCE']._serialized_end=345
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.pyi b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.pyi
new file mode 100644
index 0000000..11fb3b3
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2.pyi
@@ -0,0 +1,28 @@
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityNodeInfoClickableSpan(_message.Message):
+    __slots__ = ("text", "url", "source", "start", "node_id")
+    class SpanSource(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN_TYPE: _ClassVar[AndroidAccessibilityNodeInfoClickableSpan.SpanSource]
+        TEXT: _ClassVar[AndroidAccessibilityNodeInfoClickableSpan.SpanSource]
+        CONTENT_DESCRIPTION: _ClassVar[AndroidAccessibilityNodeInfoClickableSpan.SpanSource]
+    UNKNOWN_TYPE: AndroidAccessibilityNodeInfoClickableSpan.SpanSource
+    TEXT: AndroidAccessibilityNodeInfoClickableSpan.SpanSource
+    CONTENT_DESCRIPTION: AndroidAccessibilityNodeInfoClickableSpan.SpanSource
+    TEXT_FIELD_NUMBER: _ClassVar[int]
+    URL_FIELD_NUMBER: _ClassVar[int]
+    SOURCE_FIELD_NUMBER: _ClassVar[int]
+    START_FIELD_NUMBER: _ClassVar[int]
+    NODE_ID_FIELD_NUMBER: _ClassVar[int]
+    text: str
+    url: str
+    source: AndroidAccessibilityNodeInfoClickableSpan.SpanSource
+    start: int
+    node_id: int
+    def __init__(self, text: _Optional[str] = ..., url: _Optional[str] = ..., source: _Optional[_Union[AndroidAccessibilityNodeInfoClickableSpan.SpanSource, str]] = ..., start: _Optional[int] = ..., node_id: _Optional[int] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2_grpc.py
new file mode 100644
index 0000000..e4757d9
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_node_info_clickable_span_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/android_accessibility_node_info_pb2.py b/android_env/proto/a11y/android_accessibility_node_info_pb2.py
new file mode 100644
index 0000000..5b3ee97
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_pb2.py
@@ -0,0 +1,42 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_node_info.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_node_info.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto.a11y import android_accessibility_action_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__action__pb2
+from android_env.proto.a11y import android_accessibility_node_info_clickable_span_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__node__info__clickable__span__pb2
+from android_env.proto.a11y import rect_pb2 as android__env_dot_proto_dot_a11y_dot_rect__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n<android_env/proto/a11y/android_accessibility_node_info.proto\x12\x0b\x61ndroid_env\x1a\x39\x61ndroid_env/proto/a11y/android_accessibility_action.proto\x1aKandroid_env/proto/a11y/android_accessibility_node_info_clickable_span.proto\x1a!android_env/proto/a11y/rect.proto\"\xcd\x06\n\x1c\x41ndroidAccessibilityNodeInfo\x12\x11\n\tunique_id\x18\x01 \x01(\x05\x12\x30\n\x10\x62ounds_in_screen\x18\x02 \x01(\x0b\x32\x16.android_env.ProtoRect\x12\x12\n\nclass_name\x18\x03 \x01(\t\x12\x1b\n\x13\x63ontent_description\x18\x04 \x01(\t\x12\x11\n\thint_text\x18\x05 \x01(\t\x12\x14\n\x0cpackage_name\x18\x06 \x01(\t\x12\x0c\n\x04text\x18\x07 \x01(\t\x12\x1c\n\x14text_selection_start\x18\x08 \x01(\x03\x12\x1a\n\x12text_selection_end\x18\t \x01(\x03\x12\x1d\n\x15view_id_resource_name\x18\n \x01(\t\x12\x11\n\twindow_id\x18\x0b \x01(\x05\x12\x14\n\x0cis_checkable\x18\x0c \x01(\x08\x12\x12\n\nis_checked\x18\r \x01(\x08\x12\x14\n\x0cis_clickable\x18\x0e \x01(\x08\x12\x13\n\x0bis_editable\x18\x0f \x01(\x08\x12\x12\n\nis_enabled\x18\x10 \x01(\x08\x12\x14\n\x0cis_focusable\x18\x11 \x01(\x08\x12\x12\n\nis_focused\x18\x12 \x01(\x08\x12\x19\n\x11is_long_clickable\x18\x13 \x01(\x08\x12\x13\n\x0bis_password\x18\x14 \x01(\x08\x12\x15\n\ris_scrollable\x18\x15 \x01(\x08\x12\x13\n\x0bis_selected\x18\x16 \x01(\x08\x12\x1a\n\x12is_visible_to_user\x18\x17 \x01(\x08\x12\x38\n\x07\x61\x63tions\x18\x18 \x03(\x0b\x32\'.android_env.AndroidAccessibilityAction\x12\x15\n\tchild_ids\x18\x19 \x03(\x05\x42\x02\x10\x01\x12O\n\x0f\x63lickable_spans\x18\x1a \x03(\x0b\x32\x36.android_env.AndroidAccessibilityNodeInfoClickableSpan\x12\r\n\x05\x64\x65pth\x18\x1b \x01(\x05\x12\x15\n\rlabeled_by_id\x18\x1c \x01(\x05\x12\x14\n\x0clabel_for_id\x18\x1d \x01(\x05\x12\x15\n\rdrawing_order\x18\x1e \x01(\x05\x12\x14\n\x0ctooltip_text\x18\x1f \x01(\tB0\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_node_info_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYNODEINFO'].fields_by_name['child_ids']._loaded_options = None
+  _globals['_ANDROIDACCESSIBILITYNODEINFO'].fields_by_name['child_ids']._serialized_options = b'\020\001'
+  _globals['_ANDROIDACCESSIBILITYNODEINFO']._serialized_start=249
+  _globals['_ANDROIDACCESSIBILITYNODEINFO']._serialized_end=1094
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_node_info_pb2.pyi b/android_env/proto/a11y/android_accessibility_node_info_pb2.pyi
new file mode 100644
index 0000000..47aae46
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_pb2.pyi
@@ -0,0 +1,76 @@
+from android_env.proto.a11y import android_accessibility_action_pb2 as _android_accessibility_action_pb2
+from android_env.proto.a11y import android_accessibility_node_info_clickable_span_pb2 as _android_accessibility_node_info_clickable_span_pb2
+from android_env.proto.a11y import rect_pb2 as _rect_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityNodeInfo(_message.Message):
+    __slots__ = ("unique_id", "bounds_in_screen", "class_name", "content_description", "hint_text", "package_name", "text", "text_selection_start", "text_selection_end", "view_id_resource_name", "window_id", "is_checkable", "is_checked", "is_clickable", "is_editable", "is_enabled", "is_focusable", "is_focused", "is_long_clickable", "is_password", "is_scrollable", "is_selected", "is_visible_to_user", "actions", "child_ids", "clickable_spans", "depth", "labeled_by_id", "label_for_id", "drawing_order", "tooltip_text")
+    UNIQUE_ID_FIELD_NUMBER: _ClassVar[int]
+    BOUNDS_IN_SCREEN_FIELD_NUMBER: _ClassVar[int]
+    CLASS_NAME_FIELD_NUMBER: _ClassVar[int]
+    CONTENT_DESCRIPTION_FIELD_NUMBER: _ClassVar[int]
+    HINT_TEXT_FIELD_NUMBER: _ClassVar[int]
+    PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+    TEXT_FIELD_NUMBER: _ClassVar[int]
+    TEXT_SELECTION_START_FIELD_NUMBER: _ClassVar[int]
+    TEXT_SELECTION_END_FIELD_NUMBER: _ClassVar[int]
+    VIEW_ID_RESOURCE_NAME_FIELD_NUMBER: _ClassVar[int]
+    WINDOW_ID_FIELD_NUMBER: _ClassVar[int]
+    IS_CHECKABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_CHECKED_FIELD_NUMBER: _ClassVar[int]
+    IS_CLICKABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_EDITABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_ENABLED_FIELD_NUMBER: _ClassVar[int]
+    IS_FOCUSABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_FOCUSED_FIELD_NUMBER: _ClassVar[int]
+    IS_LONG_CLICKABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_PASSWORD_FIELD_NUMBER: _ClassVar[int]
+    IS_SCROLLABLE_FIELD_NUMBER: _ClassVar[int]
+    IS_SELECTED_FIELD_NUMBER: _ClassVar[int]
+    IS_VISIBLE_TO_USER_FIELD_NUMBER: _ClassVar[int]
+    ACTIONS_FIELD_NUMBER: _ClassVar[int]
+    CHILD_IDS_FIELD_NUMBER: _ClassVar[int]
+    CLICKABLE_SPANS_FIELD_NUMBER: _ClassVar[int]
+    DEPTH_FIELD_NUMBER: _ClassVar[int]
+    LABELED_BY_ID_FIELD_NUMBER: _ClassVar[int]
+    LABEL_FOR_ID_FIELD_NUMBER: _ClassVar[int]
+    DRAWING_ORDER_FIELD_NUMBER: _ClassVar[int]
+    TOOLTIP_TEXT_FIELD_NUMBER: _ClassVar[int]
+    unique_id: int
+    bounds_in_screen: _rect_pb2.ProtoRect
+    class_name: str
+    content_description: str
+    hint_text: str
+    package_name: str
+    text: str
+    text_selection_start: int
+    text_selection_end: int
+    view_id_resource_name: str
+    window_id: int
+    is_checkable: bool
+    is_checked: bool
+    is_clickable: bool
+    is_editable: bool
+    is_enabled: bool
+    is_focusable: bool
+    is_focused: bool
+    is_long_clickable: bool
+    is_password: bool
+    is_scrollable: bool
+    is_selected: bool
+    is_visible_to_user: bool
+    actions: _containers.RepeatedCompositeFieldContainer[_android_accessibility_action_pb2.AndroidAccessibilityAction]
+    child_ids: _containers.RepeatedScalarFieldContainer[int]
+    clickable_spans: _containers.RepeatedCompositeFieldContainer[_android_accessibility_node_info_clickable_span_pb2.AndroidAccessibilityNodeInfoClickableSpan]
+    depth: int
+    labeled_by_id: int
+    label_for_id: int
+    drawing_order: int
+    tooltip_text: str
+    def __init__(self, unique_id: _Optional[int] = ..., bounds_in_screen: _Optional[_Union[_rect_pb2.ProtoRect, _Mapping]] = ..., class_name: _Optional[str] = ..., content_description: _Optional[str] = ..., hint_text: _Optional[str] = ..., package_name: _Optional[str] = ..., text: _Optional[str] = ..., text_selection_start: _Optional[int] = ..., text_selection_end: _Optional[int] = ..., view_id_resource_name: _Optional[str] = ..., window_id: _Optional[int] = ..., is_checkable: bool = ..., is_checked: bool = ..., is_clickable: bool = ..., is_editable: bool = ..., is_enabled: bool = ..., is_focusable: bool = ..., is_focused: bool = ..., is_long_clickable: bool = ..., is_password: bool = ..., is_scrollable: bool = ..., is_selected: bool = ..., is_visible_to_user: bool = ..., actions: _Optional[_Iterable[_Union[_android_accessibility_action_pb2.AndroidAccessibilityAction, _Mapping]]] = ..., child_ids: _Optional[_Iterable[int]] = ..., clickable_spans: _Optional[_Iterable[_Union[_android_accessibility_node_info_clickable_span_pb2.AndroidAccessibilityNodeInfoClickableSpan, _Mapping]]] = ..., depth: _Optional[int] = ..., labeled_by_id: _Optional[int] = ..., label_for_id: _Optional[int] = ..., drawing_order: _Optional[int] = ..., tooltip_text: _Optional[str] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_node_info_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_node_info_pb2_grpc.py
new file mode 100644
index 0000000..62ab002
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_node_info_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_node_info_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/android_accessibility_tree_pb2.py b/android_env/proto/a11y/android_accessibility_tree_pb2.py
new file mode 100644
index 0000000..3502075
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_tree_pb2.py
@@ -0,0 +1,38 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_tree.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_tree.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto.a11y import android_accessibility_node_info_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__node__info__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n7android_env/proto/a11y/android_accessibility_tree.proto\x12\x0b\x61ndroid_env\x1a<android_env/proto/a11y/android_accessibility_node_info.proto\"T\n\x18\x41ndroidAccessibilityTree\x12\x38\n\x05nodes\x18\x01 \x03(\x0b\x32).android_env.AndroidAccessibilityNodeInfoB0\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_tree_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYTREE']._serialized_start=134
+  _globals['_ANDROIDACCESSIBILITYTREE']._serialized_end=218
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_tree_pb2.pyi b/android_env/proto/a11y/android_accessibility_tree_pb2.pyi
new file mode 100644
index 0000000..880cf78
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_tree_pb2.pyi
@@ -0,0 +1,14 @@
+from android_env.proto.a11y import android_accessibility_node_info_pb2 as _android_accessibility_node_info_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityTree(_message.Message):
+    __slots__ = ("nodes",)
+    NODES_FIELD_NUMBER: _ClassVar[int]
+    nodes: _containers.RepeatedCompositeFieldContainer[_android_accessibility_node_info_pb2.AndroidAccessibilityNodeInfo]
+    def __init__(self, nodes: _Optional[_Iterable[_Union[_android_accessibility_node_info_pb2.AndroidAccessibilityNodeInfo, _Mapping]]] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_tree_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_tree_pb2_grpc.py
new file mode 100644
index 0000000..4129982
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_tree_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_tree_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/android_accessibility_window_info_pb2.py b/android_env/proto/a11y/android_accessibility_window_info_pb2.py
new file mode 100644
index 0000000..7dea30a
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_window_info_pb2.py
@@ -0,0 +1,41 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/android_accessibility_window_info.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/android_accessibility_window_info.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto.a11y import android_accessibility_tree_pb2 as android__env_dot_proto_dot_a11y_dot_android__accessibility__tree__pb2
+from android_env.proto.a11y import rect_pb2 as android__env_dot_proto_dot_a11y_dot_rect__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n>android_env/proto/a11y/android_accessibility_window_info.proto\x12\x0b\x61ndroid_env\x1a\x37\x61ndroid_env/proto/a11y/android_accessibility_tree.proto\x1a!android_env/proto/a11y/rect.proto\"\xa0\x04\n\x1e\x41ndroidAccessibilityWindowInfo\x12\x30\n\x10\x62ounds_in_screen\x18\x01 \x01(\x0b\x32\x16.android_env.ProtoRect\x12\x12\n\ndisplay_id\x18\x02 \x01(\x05\x12\n\n\x02id\x18\x03 \x01(\x05\x12\r\n\x05layer\x18\x04 \x01(\x05\x12\r\n\x05title\x18\x05 \x01(\t\x12K\n\x0bwindow_type\x18\x06 \x01(\x0e\x32\x36.android_env.AndroidAccessibilityWindowInfo.WindowType\x12 \n\x18is_accessibility_focused\x18\x07 \x01(\x08\x12\x11\n\tis_active\x18\x08 \x01(\x08\x12\x12\n\nis_focused\x18\t \x01(\x08\x12%\n\x1dis_in_picture_in_picture_mode\x18\n \x01(\x08\x12\x33\n\x04tree\x18\x0b \x01(\x0b\x32%.android_env.AndroidAccessibilityTree\"\x9b\x01\n\nWindowType\x12\x10\n\x0cUNKNOWN_TYPE\x10\x00\x12\x14\n\x10TYPE_APPLICATION\x10\x01\x12\x15\n\x11TYPE_INPUT_METHOD\x10\x02\x12\x0f\n\x0bTYPE_SYSTEM\x10\x03\x12\x1e\n\x1aTYPE_ACCESSIBILITY_OVERLAY\x10\x04\x12\x1d\n\x19TYPE_SPLIT_SCREEN_DIVIDER\x10\x05\x42\x30\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.android_accessibility_window_info_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_ANDROIDACCESSIBILITYWINDOWINFO']._serialized_start=172
+  _globals['_ANDROIDACCESSIBILITYWINDOWINFO']._serialized_end=716
+  _globals['_ANDROIDACCESSIBILITYWINDOWINFO_WINDOWTYPE']._serialized_start=561
+  _globals['_ANDROIDACCESSIBILITYWINDOWINFO_WINDOWTYPE']._serialized_end=716
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/android_accessibility_window_info_pb2.pyi b/android_env/proto/a11y/android_accessibility_window_info_pb2.pyi
new file mode 100644
index 0000000..d8cb034
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_window_info_pb2.pyi
@@ -0,0 +1,49 @@
+from android_env.proto.a11y import android_accessibility_tree_pb2 as _android_accessibility_tree_pb2
+from android_env.proto.a11y import rect_pb2 as _rect_pb2
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AndroidAccessibilityWindowInfo(_message.Message):
+    __slots__ = ("bounds_in_screen", "display_id", "id", "layer", "title", "window_type", "is_accessibility_focused", "is_active", "is_focused", "is_in_picture_in_picture_mode", "tree")
+    class WindowType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN_TYPE: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+        TYPE_APPLICATION: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+        TYPE_INPUT_METHOD: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+        TYPE_SYSTEM: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+        TYPE_ACCESSIBILITY_OVERLAY: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+        TYPE_SPLIT_SCREEN_DIVIDER: _ClassVar[AndroidAccessibilityWindowInfo.WindowType]
+    UNKNOWN_TYPE: AndroidAccessibilityWindowInfo.WindowType
+    TYPE_APPLICATION: AndroidAccessibilityWindowInfo.WindowType
+    TYPE_INPUT_METHOD: AndroidAccessibilityWindowInfo.WindowType
+    TYPE_SYSTEM: AndroidAccessibilityWindowInfo.WindowType
+    TYPE_ACCESSIBILITY_OVERLAY: AndroidAccessibilityWindowInfo.WindowType
+    TYPE_SPLIT_SCREEN_DIVIDER: AndroidAccessibilityWindowInfo.WindowType
+    BOUNDS_IN_SCREEN_FIELD_NUMBER: _ClassVar[int]
+    DISPLAY_ID_FIELD_NUMBER: _ClassVar[int]
+    ID_FIELD_NUMBER: _ClassVar[int]
+    LAYER_FIELD_NUMBER: _ClassVar[int]
+    TITLE_FIELD_NUMBER: _ClassVar[int]
+    WINDOW_TYPE_FIELD_NUMBER: _ClassVar[int]
+    IS_ACCESSIBILITY_FOCUSED_FIELD_NUMBER: _ClassVar[int]
+    IS_ACTIVE_FIELD_NUMBER: _ClassVar[int]
+    IS_FOCUSED_FIELD_NUMBER: _ClassVar[int]
+    IS_IN_PICTURE_IN_PICTURE_MODE_FIELD_NUMBER: _ClassVar[int]
+    TREE_FIELD_NUMBER: _ClassVar[int]
+    bounds_in_screen: _rect_pb2.ProtoRect
+    display_id: int
+    id: int
+    layer: int
+    title: str
+    window_type: AndroidAccessibilityWindowInfo.WindowType
+    is_accessibility_focused: bool
+    is_active: bool
+    is_focused: bool
+    is_in_picture_in_picture_mode: bool
+    tree: _android_accessibility_tree_pb2.AndroidAccessibilityTree
+    def __init__(self, bounds_in_screen: _Optional[_Union[_rect_pb2.ProtoRect, _Mapping]] = ..., display_id: _Optional[int] = ..., id: _Optional[int] = ..., layer: _Optional[int] = ..., title: _Optional[str] = ..., window_type: _Optional[_Union[AndroidAccessibilityWindowInfo.WindowType, str]] = ..., is_accessibility_focused: bool = ..., is_active: bool = ..., is_focused: bool = ..., is_in_picture_in_picture_mode: bool = ..., tree: _Optional[_Union[_android_accessibility_tree_pb2.AndroidAccessibilityTree, _Mapping]] = ...) -> None: ...
diff --git a/android_env/proto/a11y/android_accessibility_window_info_pb2_grpc.py b/android_env/proto/a11y/android_accessibility_window_info_pb2_grpc.py
new file mode 100644
index 0000000..800c598
--- /dev/null
+++ b/android_env/proto/a11y/android_accessibility_window_info_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/android_accessibility_window_info_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/a11y/rect_pb2.py b/android_env/proto/a11y/rect_pb2.py
new file mode 100644
index 0000000..88999c5
--- /dev/null
+++ b/android_env/proto/a11y/rect_pb2.py
@@ -0,0 +1,37 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/a11y/rect.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/a11y/rect.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!android_env/proto/a11y/rect.proto\x12\x0b\x61ndroid_env\"E\n\tProtoRect\x12\x0c\n\x04left\x18\x01 \x01(\x05\x12\x0b\n\x03top\x18\x02 \x01(\x05\x12\r\n\x05right\x18\x03 \x01(\x05\x12\x0e\n\x06\x62ottom\x18\x04 \x01(\x05\x42\x30\n,com.google.androidenv.accessibilityforwarderP\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.a11y.rect_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n,com.google.androidenv.accessibilityforwarderP\001'
+  _globals['_PROTORECT']._serialized_start=50
+  _globals['_PROTORECT']._serialized_end=119
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/a11y/rect_pb2.pyi b/android_env/proto/a11y/rect_pb2.pyi
new file mode 100644
index 0000000..bad5987
--- /dev/null
+++ b/android_env/proto/a11y/rect_pb2.pyi
@@ -0,0 +1,17 @@
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from typing import ClassVar as _ClassVar, Optional as _Optional
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class ProtoRect(_message.Message):
+    __slots__ = ("left", "top", "right", "bottom")
+    LEFT_FIELD_NUMBER: _ClassVar[int]
+    TOP_FIELD_NUMBER: _ClassVar[int]
+    RIGHT_FIELD_NUMBER: _ClassVar[int]
+    BOTTOM_FIELD_NUMBER: _ClassVar[int]
+    left: int
+    top: int
+    right: int
+    bottom: int
+    def __init__(self, left: _Optional[int] = ..., top: _Optional[int] = ..., right: _Optional[int] = ..., bottom: _Optional[int] = ...) -> None: ...
diff --git a/android_env/proto/a11y/rect_pb2_grpc.py b/android_env/proto/a11y/rect_pb2_grpc.py
new file mode 100644
index 0000000..9f19173
--- /dev/null
+++ b/android_env/proto/a11y/rect_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/a11y/rect_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/adb_pb2.py b/android_env/proto/adb_pb2.py
new file mode 100644
index 0000000..57d994a
--- /dev/null
+++ b/android_env/proto/adb_pb2.py
@@ -0,0 +1,136 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/adb.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/adb.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1b\x61ndroid_env/proto/adb.proto\x12\x0b\x61ndroid_env\"\x83\x1c\n\nAdbRequest\x12\x39\n\x0binstall_apk\x18\x01 \x01(\x0b\x32\".android_env.AdbRequest.InstallApkH\x00\x12?\n\x0estart_activity\x18\x02 \x01(\x0b\x32%.android_env.AdbRequest.StartActivityH\x00\x12\x37\n\nforce_stop\x18\x03 \x01(\x0b\x32!.android_env.AdbRequest.ForceStopH\x00\x12*\n\x03tap\x18\x06 \x01(\x0b\x32\x1b.android_env.AdbRequest.TapH\x00\x12;\n\x0cpress_button\x18\x07 \x01(\x0b\x32#.android_env.AdbRequest.PressButtonH\x00\x12J\n\x14start_screen_pinning\x18\n \x01(\x0b\x32*.android_env.AdbRequest.StartScreenPinningH\x00\x12\x45\n\x11uninstall_package\x18\x10 \x01(\x0b\x32(.android_env.AdbRequest.UninstallPackageH\x00\x12J\n\x14get_current_activity\x18\x11 \x01(\x0b\x32*.android_env.AdbRequest.GetCurrentActivityH\x00\x12H\n\x0fget_orientation\x18\x18 \x01(\x0b\x32-.android_env.AdbRequest.GetOrientationRequestH\x00\x12,\n\x04push\x18\x12 \x01(\x0b\x32\x1c.android_env.AdbRequest.PushH\x00\x12,\n\x04pull\x18\x13 \x01(\x0b\x32\x1c.android_env.AdbRequest.PullH\x00\x12\x37\n\ninput_text\x18\x14 \x01(\x0b\x32!.android_env.AdbRequest.InputTextH\x00\x12;\n\x08settings\x18\x15 \x01(\x0b\x32\'.android_env.AdbRequest.SettingsRequestH\x00\x12\x39\n\x07generic\x18\x16 \x01(\x0b\x32&.android_env.AdbRequest.GenericRequestH\x00\x12H\n\x0fpackage_manager\x18\x17 \x01(\x0b\x32-.android_env.AdbRequest.PackageManagerRequestH\x00\x12\x39\n\x07\x64umpsys\x18\x1a \x01(\x0b\x32&.android_env.AdbRequest.DumpsysRequestH\x00\x12?\n\x0esend_broadcast\x18\x19 \x01(\x0b\x32%.android_env.AdbRequest.SendBroadcastH\x00\x12\x13\n\x0btimeout_sec\x18\x64 \x01(\x02\x1a\xcc\x01\n\nInstallApk\x12\x43\n\nfilesystem\x18\x02 \x01(\x0b\x32-.android_env.AdbRequest.InstallApk.FilesystemH\x00\x12\x37\n\x04\x62lob\x18\x06 \x01(\x0b\x32\'.android_env.AdbRequest.InstallApk.BlobH\x00\x1a\x1a\n\nFilesystem\x12\x0c\n\x04path\x18\x01 \x01(\t\x1a\x18\n\x04\x42lob\x12\x10\n\x08\x63ontents\x18\x01 \x01(\x0c\x42\n\n\x08location\x1aN\n\rStartActivity\x12\x15\n\rfull_activity\x18\x01 \x01(\t\x12\x12\n\nextra_args\x18\x02 \x03(\t\x12\x12\n\nforce_stop\x18\x03 \x01(\x08\x1a\x32\n\rSendBroadcast\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12\x11\n\tcomponent\x18\x02 \x01(\t\x1a(\n\x10UninstallPackage\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x1a!\n\tForceStop\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x1a\x1b\n\x03Tap\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x1ar\n\x0bPressButton\x12:\n\x06\x62utton\x18\x01 \x01(\x0e\x32*.android_env.AdbRequest.PressButton.Button\"\'\n\x06\x42utton\x12\x08\n\x04HOME\x10\x00\x12\x08\n\x04\x42\x41\x43K\x10\x01\x12\t\n\x05\x45NTER\x10\x02\x1a+\n\x12StartScreenPinning\x12\x15\n\rfull_activity\x18\x01 \x01(\t\x1a\x14\n\x12GetCurrentActivity\x1a\x17\n\x15GetOrientationRequest\x1a%\n\x04Push\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x12\x0c\n\x04path\x18\x02 \x01(\t\x1a\x14\n\x04Pull\x12\x0c\n\x04path\x18\x01 \x01(\t\x1a\x19\n\tInputText\x12\x0c\n\x04text\x18\x01 \x01(\t\x1a\xea\x05\n\x0fSettingsRequest\x12\x45\n\nname_space\x18\x01 \x01(\x0e\x32\x31.android_env.AdbRequest.SettingsRequest.Namespace\x12:\n\x03get\x18\x02 \x01(\x0b\x32+.android_env.AdbRequest.SettingsRequest.GetH\x00\x12:\n\x03put\x18\x03 \x01(\x0b\x32+.android_env.AdbRequest.SettingsRequest.PutH\x00\x12\x44\n\ndelete_key\x18\x04 \x01(\x0b\x32..android_env.AdbRequest.SettingsRequest.DeleteH\x00\x12>\n\x05reset\x18\x05 \x01(\x0b\x32-.android_env.AdbRequest.SettingsRequest.ResetH\x00\x12<\n\x04list\x18\x06 \x01(\x0b\x32,.android_env.AdbRequest.SettingsRequest.ListH\x00\x1a\x12\n\x03Get\x12\x0b\n\x03key\x18\x01 \x01(\t\x1a!\n\x03Put\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1a\x15\n\x06\x44\x65lete\x12\x0b\n\x03key\x18\x01 \x01(\t\x1a\xb7\x01\n\x05Reset\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12@\n\x04mode\x18\x02 \x01(\x0e\x32\x32.android_env.AdbRequest.SettingsRequest.Reset.Mode\"V\n\x04Mode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12UNTRUSTED_DEFAULTS\x10\x01\x12\x13\n\x0fUNTRUSTED_CLEAR\x10\x02\x12\x14\n\x10TRUSTED_DEFAULTS\x10\x03\x1a\x06\n\x04List\"<\n\tNamespace\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06SYSTEM\x10\x01\x12\n\n\x06SECURE\x10\x02\x12\n\n\x06GLOBAL\x10\x03\x42\x06\n\x04verb\x1a\x1e\n\x0eGenericRequest\x12\x0c\n\x04\x61rgs\x18\x01 \x03(\t\x1a\x9f\x05\n\x15PackageManagerRequest\x12\x42\n\x04list\x18\x01 \x01(\x0b\x32\x32.android_env.AdbRequest.PackageManagerRequest.ListH\x00\x12\x44\n\x05\x63lear\x18\x02 \x01(\x0b\x32\x33.android_env.AdbRequest.PackageManagerRequest.ClearH\x00\x12\x44\n\x05grant\x18\x03 \x01(\x0b\x32\x33.android_env.AdbRequest.PackageManagerRequest.GrantH\x00\x1a\xc9\x02\n\x04List\x12O\n\x08\x66\x65\x61tures\x18\x01 \x01(\x0b\x32;.android_env.AdbRequest.PackageManagerRequest.List.FeaturesH\x00\x12Q\n\tlibraries\x18\x02 \x01(\x0b\x32<.android_env.AdbRequest.PackageManagerRequest.List.LibrariesH\x00\x12O\n\x08packages\x18\x03 \x01(\x0b\x32;.android_env.AdbRequest.PackageManagerRequest.List.PackagesH\x00\x1a\n\n\x08\x46\x65\x61tures\x1a\x0b\n\tLibraries\x1a+\n\x08Packages\x12\x0e\n\x06\x66ilter\x18\x01 \x01(\t\x12\x0f\n\x07options\x18\x02 \x03(\tB\x06\n\x04what\x1a.\n\x05\x43lear\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x1a\x32\n\x05Grant\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x13\n\x0bpermissions\x18\x02 \x03(\tB\x06\n\x04verb\x1a\xa6\x02\n\x0e\x44umpsysRequest\x12\x0f\n\x07service\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\x12\x11\n\tlist_only\x18\x03 \x01(\x08\x12\x13\n\x0btimeout_sec\x18\x04 \x01(\x05\x12\x12\n\ntimeout_ms\x18\x05 \x01(\x05\x12\x0b\n\x03pid\x18\x06 \x01(\x08\x12\r\n\x05proto\x18\x07 \x01(\x08\x12\x46\n\x08priority\x18\x08 \x01(\x0e\x32\x34.android_env.AdbRequest.DumpsysRequest.PriorityLevel\x12\x15\n\rskip_services\x18\t \x03(\t\">\n\rPriorityLevel\x12\t\n\x05UNSET\x10\x00\x12\n\n\x06NORMAL\x10\x01\x12\x08\n\x04HIGH\x10\x02\x12\x0c\n\x08\x43RITICAL\x10\x03\x42\t\n\x07\x63ommand\"\xb2\x0c\n\x0b\x41\x64\x62Response\x12/\n\x06status\x18\x01 \x01(\x0e\x32\x1f.android_env.AdbResponse.Status\x12\x15\n\rerror_message\x18\x02 \x01(\t\x12\x32\n\x05stats\x18\x03 \x03(\x0b\x32#.android_env.AdbResponse.StatsEntry\x12S\n\x14get_current_activity\x18\n \x01(\x0b\x32\x33.android_env.AdbResponse.GetCurrentActivityResponseH\x00\x12H\n\x0estart_activity\x18\x0b \x01(\x0b\x32..android_env.AdbResponse.StartActivityResponseH\x00\x12\x44\n\x0cpress_button\x18\x0c \x01(\x0b\x32,.android_env.AdbResponse.PressButtonResponseH\x00\x12\x35\n\x04push\x18\r \x01(\x0b\x32%.android_env.AdbResponse.PushResponseH\x00\x12\x35\n\x04pull\x18\x0e \x01(\x0b\x32%.android_env.AdbResponse.PullResponseH\x00\x12@\n\ninput_text\x18\x0f \x01(\x0b\x32*.android_env.AdbResponse.InputTextResponseH\x00\x12=\n\x08settings\x18\x10 \x01(\x0b\x32).android_env.AdbResponse.SettingsResponseH\x00\x12;\n\x07generic\x18\x11 \x01(\x0b\x32(.android_env.AdbResponse.GenericResponseH\x00\x12J\n\x0fpackage_manager\x18\x12 \x01(\x0b\x32/.android_env.AdbResponse.PackageManagerResponseH\x00\x12J\n\x0fget_orientation\x18\x13 \x01(\x0b\x32/.android_env.AdbResponse.GetOrientationResponseH\x00\x12;\n\x07\x64umpsys\x18\x15 \x01(\x0b\x32(.android_env.AdbResponse.DumpsysResponseH\x00\x1a,\n\nStatsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\x1a\x33\n\x1aGetCurrentActivityResponse\x12\x15\n\rfull_activity\x18\x01 \x01(\t\x1a-\n\x16GetOrientationResponse\x12\x13\n\x0borientation\x18\x01 \x01(\x05\x1a>\n\x15StartActivityResponse\x12\x15\n\rfull_activity\x18\x01 \x01(\t\x12\x0e\n\x06output\x18\x02 \x01(\x0c\x1a%\n\x13PressButtonResponse\x12\x0e\n\x06output\x18\x01 \x01(\x0c\x1a\x0e\n\x0cPushResponse\x1a\x1f\n\x0cPullResponse\x12\x0f\n\x07\x63ontent\x18\x01 \x01(\x0c\x1a\x13\n\x11InputTextResponse\x1a\"\n\x10SettingsResponse\x12\x0e\n\x06output\x18\x01 \x01(\x0c\x1a!\n\x0fGenericResponse\x12\x0e\n\x06output\x18\x01 \x01(\x0c\x1a\x8d\x01\n\x16PackageManagerResponse\x12\x0e\n\x06output\x18\x01 \x01(\x0c\x12\x44\n\x04list\x18\x02 \x01(\x0b\x32\x34.android_env.AdbResponse.PackageManagerResponse.ListH\x00\x1a\x15\n\x04List\x12\r\n\x05items\x18\x01 \x03(\tB\x06\n\x04verb\x1a!\n\x0f\x44umpsysResponse\x12\x0e\n\x06output\x18\x01 \x01(\x0c\"}\n\x06Status\x12\r\n\tUNDEFINED\x10\x00\x12\x06\n\x02OK\x10\x01\x12\x13\n\x0fUNKNOWN_COMMAND\x10\x02\x12\x17\n\x13\x46\x41ILED_PRECONDITION\x10\x03\x12\x12\n\x0eINTERNAL_ERROR\x10\x04\x12\r\n\tADB_ERROR\x10\x05\x12\x0b\n\x07TIMEOUT\x10\x06\x42\t\n\x07payloadb\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.adb_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  DESCRIPTOR._loaded_options = None
+  _globals['_ADBRESPONSE_STATSENTRY']._loaded_options = None
+  _globals['_ADBRESPONSE_STATSENTRY']._serialized_options = b'8\001'
+  _globals['_ADBREQUEST']._serialized_start=45
+  _globals['_ADBREQUEST']._serialized_end=3632
+  _globals['_ADBREQUEST_INSTALLAPK']._serialized_start=1131
+  _globals['_ADBREQUEST_INSTALLAPK']._serialized_end=1335
+  _globals['_ADBREQUEST_INSTALLAPK_FILESYSTEM']._serialized_start=1271
+  _globals['_ADBREQUEST_INSTALLAPK_FILESYSTEM']._serialized_end=1297
+  _globals['_ADBREQUEST_INSTALLAPK_BLOB']._serialized_start=1299
+  _globals['_ADBREQUEST_INSTALLAPK_BLOB']._serialized_end=1323
+  _globals['_ADBREQUEST_STARTACTIVITY']._serialized_start=1337
+  _globals['_ADBREQUEST_STARTACTIVITY']._serialized_end=1415
+  _globals['_ADBREQUEST_SENDBROADCAST']._serialized_start=1417
+  _globals['_ADBREQUEST_SENDBROADCAST']._serialized_end=1467
+  _globals['_ADBREQUEST_UNINSTALLPACKAGE']._serialized_start=1469
+  _globals['_ADBREQUEST_UNINSTALLPACKAGE']._serialized_end=1509
+  _globals['_ADBREQUEST_FORCESTOP']._serialized_start=1511
+  _globals['_ADBREQUEST_FORCESTOP']._serialized_end=1544
+  _globals['_ADBREQUEST_TAP']._serialized_start=1546
+  _globals['_ADBREQUEST_TAP']._serialized_end=1573
+  _globals['_ADBREQUEST_PRESSBUTTON']._serialized_start=1575
+  _globals['_ADBREQUEST_PRESSBUTTON']._serialized_end=1689
+  _globals['_ADBREQUEST_PRESSBUTTON_BUTTON']._serialized_start=1650
+  _globals['_ADBREQUEST_PRESSBUTTON_BUTTON']._serialized_end=1689
+  _globals['_ADBREQUEST_STARTSCREENPINNING']._serialized_start=1691
+  _globals['_ADBREQUEST_STARTSCREENPINNING']._serialized_end=1734
+  _globals['_ADBREQUEST_GETCURRENTACTIVITY']._serialized_start=1736
+  _globals['_ADBREQUEST_GETCURRENTACTIVITY']._serialized_end=1756
+  _globals['_ADBREQUEST_GETORIENTATIONREQUEST']._serialized_start=1758
+  _globals['_ADBREQUEST_GETORIENTATIONREQUEST']._serialized_end=1781
+  _globals['_ADBREQUEST_PUSH']._serialized_start=1783
+  _globals['_ADBREQUEST_PUSH']._serialized_end=1820
+  _globals['_ADBREQUEST_PULL']._serialized_start=1822
+  _globals['_ADBREQUEST_PULL']._serialized_end=1842
+  _globals['_ADBREQUEST_INPUTTEXT']._serialized_start=1844
+  _globals['_ADBREQUEST_INPUTTEXT']._serialized_end=1869
+  _globals['_ADBREQUEST_SETTINGSREQUEST']._serialized_start=1872
+  _globals['_ADBREQUEST_SETTINGSREQUEST']._serialized_end=2618
+  _globals['_ADBREQUEST_SETTINGSREQUEST_GET']._serialized_start=2278
+  _globals['_ADBREQUEST_SETTINGSREQUEST_GET']._serialized_end=2296
+  _globals['_ADBREQUEST_SETTINGSREQUEST_PUT']._serialized_start=2298
+  _globals['_ADBREQUEST_SETTINGSREQUEST_PUT']._serialized_end=2331
+  _globals['_ADBREQUEST_SETTINGSREQUEST_DELETE']._serialized_start=2333
+  _globals['_ADBREQUEST_SETTINGSREQUEST_DELETE']._serialized_end=2354
+  _globals['_ADBREQUEST_SETTINGSREQUEST_RESET']._serialized_start=2357
+  _globals['_ADBREQUEST_SETTINGSREQUEST_RESET']._serialized_end=2540
+  _globals['_ADBREQUEST_SETTINGSREQUEST_RESET_MODE']._serialized_start=2454
+  _globals['_ADBREQUEST_SETTINGSREQUEST_RESET_MODE']._serialized_end=2540
+  _globals['_ADBREQUEST_SETTINGSREQUEST_LIST']._serialized_start=2542
+  _globals['_ADBREQUEST_SETTINGSREQUEST_LIST']._serialized_end=2548
+  _globals['_ADBREQUEST_SETTINGSREQUEST_NAMESPACE']._serialized_start=2550
+  _globals['_ADBREQUEST_SETTINGSREQUEST_NAMESPACE']._serialized_end=2610
+  _globals['_ADBREQUEST_GENERICREQUEST']._serialized_start=2620
+  _globals['_ADBREQUEST_GENERICREQUEST']._serialized_end=2650
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST']._serialized_start=2653
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST']._serialized_end=3324
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST']._serialized_start=2887
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST']._serialized_end=3216
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_FEATURES']._serialized_start=3140
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_FEATURES']._serialized_end=3150
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_LIBRARIES']._serialized_start=3152
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_LIBRARIES']._serialized_end=3163
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_PACKAGES']._serialized_start=3165
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_LIST_PACKAGES']._serialized_end=3208
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_CLEAR']._serialized_start=3218
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_CLEAR']._serialized_end=3264
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_GRANT']._serialized_start=3266
+  _globals['_ADBREQUEST_PACKAGEMANAGERREQUEST_GRANT']._serialized_end=3316
+  _globals['_ADBREQUEST_DUMPSYSREQUEST']._serialized_start=3327
+  _globals['_ADBREQUEST_DUMPSYSREQUEST']._serialized_end=3621
+  _globals['_ADBREQUEST_DUMPSYSREQUEST_PRIORITYLEVEL']._serialized_start=3559
+  _globals['_ADBREQUEST_DUMPSYSREQUEST_PRIORITYLEVEL']._serialized_end=3621
+  _globals['_ADBRESPONSE']._serialized_start=3635
+  _globals['_ADBRESPONSE']._serialized_end=5221
+  _globals['_ADBRESPONSE_STATSENTRY']._serialized_start=4516
+  _globals['_ADBRESPONSE_STATSENTRY']._serialized_end=4560
+  _globals['_ADBRESPONSE_GETCURRENTACTIVITYRESPONSE']._serialized_start=4562
+  _globals['_ADBRESPONSE_GETCURRENTACTIVITYRESPONSE']._serialized_end=4613
+  _globals['_ADBRESPONSE_GETORIENTATIONRESPONSE']._serialized_start=4615
+  _globals['_ADBRESPONSE_GETORIENTATIONRESPONSE']._serialized_end=4660
+  _globals['_ADBRESPONSE_STARTACTIVITYRESPONSE']._serialized_start=4662
+  _globals['_ADBRESPONSE_STARTACTIVITYRESPONSE']._serialized_end=4724
+  _globals['_ADBRESPONSE_PRESSBUTTONRESPONSE']._serialized_start=4726
+  _globals['_ADBRESPONSE_PRESSBUTTONRESPONSE']._serialized_end=4763
+  _globals['_ADBRESPONSE_PUSHRESPONSE']._serialized_start=4765
+  _globals['_ADBRESPONSE_PUSHRESPONSE']._serialized_end=4779
+  _globals['_ADBRESPONSE_PULLRESPONSE']._serialized_start=4781
+  _globals['_ADBRESPONSE_PULLRESPONSE']._serialized_end=4812
+  _globals['_ADBRESPONSE_INPUTTEXTRESPONSE']._serialized_start=4814
+  _globals['_ADBRESPONSE_INPUTTEXTRESPONSE']._serialized_end=4833
+  _globals['_ADBRESPONSE_SETTINGSRESPONSE']._serialized_start=4835
+  _globals['_ADBRESPONSE_SETTINGSRESPONSE']._serialized_end=4869
+  _globals['_ADBRESPONSE_GENERICRESPONSE']._serialized_start=4871
+  _globals['_ADBRESPONSE_GENERICRESPONSE']._serialized_end=4904
+  _globals['_ADBRESPONSE_PACKAGEMANAGERRESPONSE']._serialized_start=4907
+  _globals['_ADBRESPONSE_PACKAGEMANAGERRESPONSE']._serialized_end=5048
+  _globals['_ADBRESPONSE_PACKAGEMANAGERRESPONSE_LIST']._serialized_start=5019
+  _globals['_ADBRESPONSE_PACKAGEMANAGERRESPONSE_LIST']._serialized_end=5040
+  _globals['_ADBRESPONSE_DUMPSYSRESPONSE']._serialized_start=5050
+  _globals['_ADBRESPONSE_DUMPSYSRESPONSE']._serialized_end=5083
+  _globals['_ADBRESPONSE_STATUS']._serialized_start=5085
+  _globals['_ADBRESPONSE_STATUS']._serialized_end=5210
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/adb_pb2.pyi b/android_env/proto/adb_pb2.pyi
new file mode 100644
index 0000000..dd12d9c
--- /dev/null
+++ b/android_env/proto/adb_pb2.pyi
@@ -0,0 +1,397 @@
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AdbRequest(_message.Message):
+    __slots__ = ("install_apk", "start_activity", "force_stop", "tap", "press_button", "start_screen_pinning", "uninstall_package", "get_current_activity", "get_orientation", "push", "pull", "input_text", "settings", "generic", "package_manager", "dumpsys", "send_broadcast", "timeout_sec")
+    class InstallApk(_message.Message):
+        __slots__ = ("filesystem", "blob")
+        class Filesystem(_message.Message):
+            __slots__ = ("path",)
+            PATH_FIELD_NUMBER: _ClassVar[int]
+            path: str
+            def __init__(self, path: _Optional[str] = ...) -> None: ...
+        class Blob(_message.Message):
+            __slots__ = ("contents",)
+            CONTENTS_FIELD_NUMBER: _ClassVar[int]
+            contents: bytes
+            def __init__(self, contents: _Optional[bytes] = ...) -> None: ...
+        FILESYSTEM_FIELD_NUMBER: _ClassVar[int]
+        BLOB_FIELD_NUMBER: _ClassVar[int]
+        filesystem: AdbRequest.InstallApk.Filesystem
+        blob: AdbRequest.InstallApk.Blob
+        def __init__(self, filesystem: _Optional[_Union[AdbRequest.InstallApk.Filesystem, _Mapping]] = ..., blob: _Optional[_Union[AdbRequest.InstallApk.Blob, _Mapping]] = ...) -> None: ...
+    class StartActivity(_message.Message):
+        __slots__ = ("full_activity", "extra_args", "force_stop")
+        FULL_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+        EXTRA_ARGS_FIELD_NUMBER: _ClassVar[int]
+        FORCE_STOP_FIELD_NUMBER: _ClassVar[int]
+        full_activity: str
+        extra_args: _containers.RepeatedScalarFieldContainer[str]
+        force_stop: bool
+        def __init__(self, full_activity: _Optional[str] = ..., extra_args: _Optional[_Iterable[str]] = ..., force_stop: bool = ...) -> None: ...
+    class SendBroadcast(_message.Message):
+        __slots__ = ("action", "component")
+        ACTION_FIELD_NUMBER: _ClassVar[int]
+        COMPONENT_FIELD_NUMBER: _ClassVar[int]
+        action: str
+        component: str
+        def __init__(self, action: _Optional[str] = ..., component: _Optional[str] = ...) -> None: ...
+    class UninstallPackage(_message.Message):
+        __slots__ = ("package_name",)
+        PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+        package_name: str
+        def __init__(self, package_name: _Optional[str] = ...) -> None: ...
+    class ForceStop(_message.Message):
+        __slots__ = ("package_name",)
+        PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+        package_name: str
+        def __init__(self, package_name: _Optional[str] = ...) -> None: ...
+    class Tap(_message.Message):
+        __slots__ = ("x", "y")
+        X_FIELD_NUMBER: _ClassVar[int]
+        Y_FIELD_NUMBER: _ClassVar[int]
+        x: int
+        y: int
+        def __init__(self, x: _Optional[int] = ..., y: _Optional[int] = ...) -> None: ...
+    class PressButton(_message.Message):
+        __slots__ = ("button",)
+        class Button(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+            __slots__ = ()
+            HOME: _ClassVar[AdbRequest.PressButton.Button]
+            BACK: _ClassVar[AdbRequest.PressButton.Button]
+            ENTER: _ClassVar[AdbRequest.PressButton.Button]
+        HOME: AdbRequest.PressButton.Button
+        BACK: AdbRequest.PressButton.Button
+        ENTER: AdbRequest.PressButton.Button
+        BUTTON_FIELD_NUMBER: _ClassVar[int]
+        button: AdbRequest.PressButton.Button
+        def __init__(self, button: _Optional[_Union[AdbRequest.PressButton.Button, str]] = ...) -> None: ...
+    class StartScreenPinning(_message.Message):
+        __slots__ = ("full_activity",)
+        FULL_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+        full_activity: str
+        def __init__(self, full_activity: _Optional[str] = ...) -> None: ...
+    class GetCurrentActivity(_message.Message):
+        __slots__ = ()
+        def __init__(self) -> None: ...
+    class GetOrientationRequest(_message.Message):
+        __slots__ = ()
+        def __init__(self) -> None: ...
+    class Push(_message.Message):
+        __slots__ = ("content", "path")
+        CONTENT_FIELD_NUMBER: _ClassVar[int]
+        PATH_FIELD_NUMBER: _ClassVar[int]
+        content: bytes
+        path: str
+        def __init__(self, content: _Optional[bytes] = ..., path: _Optional[str] = ...) -> None: ...
+    class Pull(_message.Message):
+        __slots__ = ("path",)
+        PATH_FIELD_NUMBER: _ClassVar[int]
+        path: str
+        def __init__(self, path: _Optional[str] = ...) -> None: ...
+    class InputText(_message.Message):
+        __slots__ = ("text",)
+        TEXT_FIELD_NUMBER: _ClassVar[int]
+        text: str
+        def __init__(self, text: _Optional[str] = ...) -> None: ...
+    class SettingsRequest(_message.Message):
+        __slots__ = ("name_space", "get", "put", "delete_key", "reset", "list")
+        class Namespace(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+            __slots__ = ()
+            UNKNOWN: _ClassVar[AdbRequest.SettingsRequest.Namespace]
+            SYSTEM: _ClassVar[AdbRequest.SettingsRequest.Namespace]
+            SECURE: _ClassVar[AdbRequest.SettingsRequest.Namespace]
+            GLOBAL: _ClassVar[AdbRequest.SettingsRequest.Namespace]
+        UNKNOWN: AdbRequest.SettingsRequest.Namespace
+        SYSTEM: AdbRequest.SettingsRequest.Namespace
+        SECURE: AdbRequest.SettingsRequest.Namespace
+        GLOBAL: AdbRequest.SettingsRequest.Namespace
+        class Get(_message.Message):
+            __slots__ = ("key",)
+            KEY_FIELD_NUMBER: _ClassVar[int]
+            key: str
+            def __init__(self, key: _Optional[str] = ...) -> None: ...
+        class Put(_message.Message):
+            __slots__ = ("key", "value")
+            KEY_FIELD_NUMBER: _ClassVar[int]
+            VALUE_FIELD_NUMBER: _ClassVar[int]
+            key: str
+            value: str
+            def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+        class Delete(_message.Message):
+            __slots__ = ("key",)
+            KEY_FIELD_NUMBER: _ClassVar[int]
+            key: str
+            def __init__(self, key: _Optional[str] = ...) -> None: ...
+        class Reset(_message.Message):
+            __slots__ = ("package_name", "mode")
+            class Mode(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+                __slots__ = ()
+                UNKNOWN: _ClassVar[AdbRequest.SettingsRequest.Reset.Mode]
+                UNTRUSTED_DEFAULTS: _ClassVar[AdbRequest.SettingsRequest.Reset.Mode]
+                UNTRUSTED_CLEAR: _ClassVar[AdbRequest.SettingsRequest.Reset.Mode]
+                TRUSTED_DEFAULTS: _ClassVar[AdbRequest.SettingsRequest.Reset.Mode]
+            UNKNOWN: AdbRequest.SettingsRequest.Reset.Mode
+            UNTRUSTED_DEFAULTS: AdbRequest.SettingsRequest.Reset.Mode
+            UNTRUSTED_CLEAR: AdbRequest.SettingsRequest.Reset.Mode
+            TRUSTED_DEFAULTS: AdbRequest.SettingsRequest.Reset.Mode
+            PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+            MODE_FIELD_NUMBER: _ClassVar[int]
+            package_name: str
+            mode: AdbRequest.SettingsRequest.Reset.Mode
+            def __init__(self, package_name: _Optional[str] = ..., mode: _Optional[_Union[AdbRequest.SettingsRequest.Reset.Mode, str]] = ...) -> None: ...
+        class List(_message.Message):
+            __slots__ = ()
+            def __init__(self) -> None: ...
+        NAME_SPACE_FIELD_NUMBER: _ClassVar[int]
+        GET_FIELD_NUMBER: _ClassVar[int]
+        PUT_FIELD_NUMBER: _ClassVar[int]
+        DELETE_KEY_FIELD_NUMBER: _ClassVar[int]
+        RESET_FIELD_NUMBER: _ClassVar[int]
+        LIST_FIELD_NUMBER: _ClassVar[int]
+        name_space: AdbRequest.SettingsRequest.Namespace
+        get: AdbRequest.SettingsRequest.Get
+        put: AdbRequest.SettingsRequest.Put
+        delete_key: AdbRequest.SettingsRequest.Delete
+        reset: AdbRequest.SettingsRequest.Reset
+        list: AdbRequest.SettingsRequest.List
+        def __init__(self, name_space: _Optional[_Union[AdbRequest.SettingsRequest.Namespace, str]] = ..., get: _Optional[_Union[AdbRequest.SettingsRequest.Get, _Mapping]] = ..., put: _Optional[_Union[AdbRequest.SettingsRequest.Put, _Mapping]] = ..., delete_key: _Optional[_Union[AdbRequest.SettingsRequest.Delete, _Mapping]] = ..., reset: _Optional[_Union[AdbRequest.SettingsRequest.Reset, _Mapping]] = ..., list: _Optional[_Union[AdbRequest.SettingsRequest.List, _Mapping]] = ...) -> None: ...
+    class GenericRequest(_message.Message):
+        __slots__ = ("args",)
+        ARGS_FIELD_NUMBER: _ClassVar[int]
+        args: _containers.RepeatedScalarFieldContainer[str]
+        def __init__(self, args: _Optional[_Iterable[str]] = ...) -> None: ...
+    class PackageManagerRequest(_message.Message):
+        __slots__ = ("list", "clear", "grant")
+        class List(_message.Message):
+            __slots__ = ("features", "libraries", "packages")
+            class Features(_message.Message):
+                __slots__ = ()
+                def __init__(self) -> None: ...
+            class Libraries(_message.Message):
+                __slots__ = ()
+                def __init__(self) -> None: ...
+            class Packages(_message.Message):
+                __slots__ = ("filter", "options")
+                FILTER_FIELD_NUMBER: _ClassVar[int]
+                OPTIONS_FIELD_NUMBER: _ClassVar[int]
+                filter: str
+                options: _containers.RepeatedScalarFieldContainer[str]
+                def __init__(self, filter: _Optional[str] = ..., options: _Optional[_Iterable[str]] = ...) -> None: ...
+            FEATURES_FIELD_NUMBER: _ClassVar[int]
+            LIBRARIES_FIELD_NUMBER: _ClassVar[int]
+            PACKAGES_FIELD_NUMBER: _ClassVar[int]
+            features: AdbRequest.PackageManagerRequest.List.Features
+            libraries: AdbRequest.PackageManagerRequest.List.Libraries
+            packages: AdbRequest.PackageManagerRequest.List.Packages
+            def __init__(self, features: _Optional[_Union[AdbRequest.PackageManagerRequest.List.Features, _Mapping]] = ..., libraries: _Optional[_Union[AdbRequest.PackageManagerRequest.List.Libraries, _Mapping]] = ..., packages: _Optional[_Union[AdbRequest.PackageManagerRequest.List.Packages, _Mapping]] = ...) -> None: ...
+        class Clear(_message.Message):
+            __slots__ = ("package_name", "user_id")
+            PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+            USER_ID_FIELD_NUMBER: _ClassVar[int]
+            package_name: str
+            user_id: str
+            def __init__(self, package_name: _Optional[str] = ..., user_id: _Optional[str] = ...) -> None: ...
+        class Grant(_message.Message):
+            __slots__ = ("package_name", "permissions")
+            PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+            PERMISSIONS_FIELD_NUMBER: _ClassVar[int]
+            package_name: str
+            permissions: _containers.RepeatedScalarFieldContainer[str]
+            def __init__(self, package_name: _Optional[str] = ..., permissions: _Optional[_Iterable[str]] = ...) -> None: ...
+        LIST_FIELD_NUMBER: _ClassVar[int]
+        CLEAR_FIELD_NUMBER: _ClassVar[int]
+        GRANT_FIELD_NUMBER: _ClassVar[int]
+        list: AdbRequest.PackageManagerRequest.List
+        clear: AdbRequest.PackageManagerRequest.Clear
+        grant: AdbRequest.PackageManagerRequest.Grant
+        def __init__(self, list: _Optional[_Union[AdbRequest.PackageManagerRequest.List, _Mapping]] = ..., clear: _Optional[_Union[AdbRequest.PackageManagerRequest.Clear, _Mapping]] = ..., grant: _Optional[_Union[AdbRequest.PackageManagerRequest.Grant, _Mapping]] = ...) -> None: ...
+    class DumpsysRequest(_message.Message):
+        __slots__ = ("service", "args", "list_only", "timeout_sec", "timeout_ms", "pid", "proto", "priority", "skip_services")
+        class PriorityLevel(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+            __slots__ = ()
+            UNSET: _ClassVar[AdbRequest.DumpsysRequest.PriorityLevel]
+            NORMAL: _ClassVar[AdbRequest.DumpsysRequest.PriorityLevel]
+            HIGH: _ClassVar[AdbRequest.DumpsysRequest.PriorityLevel]
+            CRITICAL: _ClassVar[AdbRequest.DumpsysRequest.PriorityLevel]
+        UNSET: AdbRequest.DumpsysRequest.PriorityLevel
+        NORMAL: AdbRequest.DumpsysRequest.PriorityLevel
+        HIGH: AdbRequest.DumpsysRequest.PriorityLevel
+        CRITICAL: AdbRequest.DumpsysRequest.PriorityLevel
+        SERVICE_FIELD_NUMBER: _ClassVar[int]
+        ARGS_FIELD_NUMBER: _ClassVar[int]
+        LIST_ONLY_FIELD_NUMBER: _ClassVar[int]
+        TIMEOUT_SEC_FIELD_NUMBER: _ClassVar[int]
+        TIMEOUT_MS_FIELD_NUMBER: _ClassVar[int]
+        PID_FIELD_NUMBER: _ClassVar[int]
+        PROTO_FIELD_NUMBER: _ClassVar[int]
+        PRIORITY_FIELD_NUMBER: _ClassVar[int]
+        SKIP_SERVICES_FIELD_NUMBER: _ClassVar[int]
+        service: str
+        args: _containers.RepeatedScalarFieldContainer[str]
+        list_only: bool
+        timeout_sec: int
+        timeout_ms: int
+        pid: bool
+        proto: bool
+        priority: AdbRequest.DumpsysRequest.PriorityLevel
+        skip_services: _containers.RepeatedScalarFieldContainer[str]
+        def __init__(self, service: _Optional[str] = ..., args: _Optional[_Iterable[str]] = ..., list_only: bool = ..., timeout_sec: _Optional[int] = ..., timeout_ms: _Optional[int] = ..., pid: bool = ..., proto: bool = ..., priority: _Optional[_Union[AdbRequest.DumpsysRequest.PriorityLevel, str]] = ..., skip_services: _Optional[_Iterable[str]] = ...) -> None: ...
+    INSTALL_APK_FIELD_NUMBER: _ClassVar[int]
+    START_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+    FORCE_STOP_FIELD_NUMBER: _ClassVar[int]
+    TAP_FIELD_NUMBER: _ClassVar[int]
+    PRESS_BUTTON_FIELD_NUMBER: _ClassVar[int]
+    START_SCREEN_PINNING_FIELD_NUMBER: _ClassVar[int]
+    UNINSTALL_PACKAGE_FIELD_NUMBER: _ClassVar[int]
+    GET_CURRENT_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+    GET_ORIENTATION_FIELD_NUMBER: _ClassVar[int]
+    PUSH_FIELD_NUMBER: _ClassVar[int]
+    PULL_FIELD_NUMBER: _ClassVar[int]
+    INPUT_TEXT_FIELD_NUMBER: _ClassVar[int]
+    SETTINGS_FIELD_NUMBER: _ClassVar[int]
+    GENERIC_FIELD_NUMBER: _ClassVar[int]
+    PACKAGE_MANAGER_FIELD_NUMBER: _ClassVar[int]
+    DUMPSYS_FIELD_NUMBER: _ClassVar[int]
+    SEND_BROADCAST_FIELD_NUMBER: _ClassVar[int]
+    TIMEOUT_SEC_FIELD_NUMBER: _ClassVar[int]
+    install_apk: AdbRequest.InstallApk
+    start_activity: AdbRequest.StartActivity
+    force_stop: AdbRequest.ForceStop
+    tap: AdbRequest.Tap
+    press_button: AdbRequest.PressButton
+    start_screen_pinning: AdbRequest.StartScreenPinning
+    uninstall_package: AdbRequest.UninstallPackage
+    get_current_activity: AdbRequest.GetCurrentActivity
+    get_orientation: AdbRequest.GetOrientationRequest
+    push: AdbRequest.Push
+    pull: AdbRequest.Pull
+    input_text: AdbRequest.InputText
+    settings: AdbRequest.SettingsRequest
+    generic: AdbRequest.GenericRequest
+    package_manager: AdbRequest.PackageManagerRequest
+    dumpsys: AdbRequest.DumpsysRequest
+    send_broadcast: AdbRequest.SendBroadcast
+    timeout_sec: float
+    def __init__(self, install_apk: _Optional[_Union[AdbRequest.InstallApk, _Mapping]] = ..., start_activity: _Optional[_Union[AdbRequest.StartActivity, _Mapping]] = ..., force_stop: _Optional[_Union[AdbRequest.ForceStop, _Mapping]] = ..., tap: _Optional[_Union[AdbRequest.Tap, _Mapping]] = ..., press_button: _Optional[_Union[AdbRequest.PressButton, _Mapping]] = ..., start_screen_pinning: _Optional[_Union[AdbRequest.StartScreenPinning, _Mapping]] = ..., uninstall_package: _Optional[_Union[AdbRequest.UninstallPackage, _Mapping]] = ..., get_current_activity: _Optional[_Union[AdbRequest.GetCurrentActivity, _Mapping]] = ..., get_orientation: _Optional[_Union[AdbRequest.GetOrientationRequest, _Mapping]] = ..., push: _Optional[_Union[AdbRequest.Push, _Mapping]] = ..., pull: _Optional[_Union[AdbRequest.Pull, _Mapping]] = ..., input_text: _Optional[_Union[AdbRequest.InputText, _Mapping]] = ..., settings: _Optional[_Union[AdbRequest.SettingsRequest, _Mapping]] = ..., generic: _Optional[_Union[AdbRequest.GenericRequest, _Mapping]] = ..., package_manager: _Optional[_Union[AdbRequest.PackageManagerRequest, _Mapping]] = ..., dumpsys: _Optional[_Union[AdbRequest.DumpsysRequest, _Mapping]] = ..., send_broadcast: _Optional[_Union[AdbRequest.SendBroadcast, _Mapping]] = ..., timeout_sec: _Optional[float] = ...) -> None: ...
+
+class AdbResponse(_message.Message):
+    __slots__ = ("status", "error_message", "stats", "get_current_activity", "start_activity", "press_button", "push", "pull", "input_text", "settings", "generic", "package_manager", "get_orientation", "dumpsys")
+    class Status(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNDEFINED: _ClassVar[AdbResponse.Status]
+        OK: _ClassVar[AdbResponse.Status]
+        UNKNOWN_COMMAND: _ClassVar[AdbResponse.Status]
+        FAILED_PRECONDITION: _ClassVar[AdbResponse.Status]
+        INTERNAL_ERROR: _ClassVar[AdbResponse.Status]
+        ADB_ERROR: _ClassVar[AdbResponse.Status]
+        TIMEOUT: _ClassVar[AdbResponse.Status]
+    UNDEFINED: AdbResponse.Status
+    OK: AdbResponse.Status
+    UNKNOWN_COMMAND: AdbResponse.Status
+    FAILED_PRECONDITION: AdbResponse.Status
+    INTERNAL_ERROR: AdbResponse.Status
+    ADB_ERROR: AdbResponse.Status
+    TIMEOUT: AdbResponse.Status
+    class StatsEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: float
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[float] = ...) -> None: ...
+    class GetCurrentActivityResponse(_message.Message):
+        __slots__ = ("full_activity",)
+        FULL_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+        full_activity: str
+        def __init__(self, full_activity: _Optional[str] = ...) -> None: ...
+    class GetOrientationResponse(_message.Message):
+        __slots__ = ("orientation",)
+        ORIENTATION_FIELD_NUMBER: _ClassVar[int]
+        orientation: int
+        def __init__(self, orientation: _Optional[int] = ...) -> None: ...
+    class StartActivityResponse(_message.Message):
+        __slots__ = ("full_activity", "output")
+        FULL_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        full_activity: str
+        output: bytes
+        def __init__(self, full_activity: _Optional[str] = ..., output: _Optional[bytes] = ...) -> None: ...
+    class PressButtonResponse(_message.Message):
+        __slots__ = ("output",)
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        output: bytes
+        def __init__(self, output: _Optional[bytes] = ...) -> None: ...
+    class PushResponse(_message.Message):
+        __slots__ = ()
+        def __init__(self) -> None: ...
+    class PullResponse(_message.Message):
+        __slots__ = ("content",)
+        CONTENT_FIELD_NUMBER: _ClassVar[int]
+        content: bytes
+        def __init__(self, content: _Optional[bytes] = ...) -> None: ...
+    class InputTextResponse(_message.Message):
+        __slots__ = ()
+        def __init__(self) -> None: ...
+    class SettingsResponse(_message.Message):
+        __slots__ = ("output",)
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        output: bytes
+        def __init__(self, output: _Optional[bytes] = ...) -> None: ...
+    class GenericResponse(_message.Message):
+        __slots__ = ("output",)
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        output: bytes
+        def __init__(self, output: _Optional[bytes] = ...) -> None: ...
+    class PackageManagerResponse(_message.Message):
+        __slots__ = ("output", "list")
+        class List(_message.Message):
+            __slots__ = ("items",)
+            ITEMS_FIELD_NUMBER: _ClassVar[int]
+            items: _containers.RepeatedScalarFieldContainer[str]
+            def __init__(self, items: _Optional[_Iterable[str]] = ...) -> None: ...
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        LIST_FIELD_NUMBER: _ClassVar[int]
+        output: bytes
+        list: AdbResponse.PackageManagerResponse.List
+        def __init__(self, output: _Optional[bytes] = ..., list: _Optional[_Union[AdbResponse.PackageManagerResponse.List, _Mapping]] = ...) -> None: ...
+    class DumpsysResponse(_message.Message):
+        __slots__ = ("output",)
+        OUTPUT_FIELD_NUMBER: _ClassVar[int]
+        output: bytes
+        def __init__(self, output: _Optional[bytes] = ...) -> None: ...
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    ERROR_MESSAGE_FIELD_NUMBER: _ClassVar[int]
+    STATS_FIELD_NUMBER: _ClassVar[int]
+    GET_CURRENT_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+    START_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+    PRESS_BUTTON_FIELD_NUMBER: _ClassVar[int]
+    PUSH_FIELD_NUMBER: _ClassVar[int]
+    PULL_FIELD_NUMBER: _ClassVar[int]
+    INPUT_TEXT_FIELD_NUMBER: _ClassVar[int]
+    SETTINGS_FIELD_NUMBER: _ClassVar[int]
+    GENERIC_FIELD_NUMBER: _ClassVar[int]
+    PACKAGE_MANAGER_FIELD_NUMBER: _ClassVar[int]
+    GET_ORIENTATION_FIELD_NUMBER: _ClassVar[int]
+    DUMPSYS_FIELD_NUMBER: _ClassVar[int]
+    status: AdbResponse.Status
+    error_message: str
+    stats: _containers.ScalarMap[str, float]
+    get_current_activity: AdbResponse.GetCurrentActivityResponse
+    start_activity: AdbResponse.StartActivityResponse
+    press_button: AdbResponse.PressButtonResponse
+    push: AdbResponse.PushResponse
+    pull: AdbResponse.PullResponse
+    input_text: AdbResponse.InputTextResponse
+    settings: AdbResponse.SettingsResponse
+    generic: AdbResponse.GenericResponse
+    package_manager: AdbResponse.PackageManagerResponse
+    get_orientation: AdbResponse.GetOrientationResponse
+    dumpsys: AdbResponse.DumpsysResponse
+    def __init__(self, status: _Optional[_Union[AdbResponse.Status, str]] = ..., error_message: _Optional[str] = ..., stats: _Optional[_Mapping[str, float]] = ..., get_current_activity: _Optional[_Union[AdbResponse.GetCurrentActivityResponse, _Mapping]] = ..., start_activity: _Optional[_Union[AdbResponse.StartActivityResponse, _Mapping]] = ..., press_button: _Optional[_Union[AdbResponse.PressButtonResponse, _Mapping]] = ..., push: _Optional[_Union[AdbResponse.PushResponse, _Mapping]] = ..., pull: _Optional[_Union[AdbResponse.PullResponse, _Mapping]] = ..., input_text: _Optional[_Union[AdbResponse.InputTextResponse, _Mapping]] = ..., settings: _Optional[_Union[AdbResponse.SettingsResponse, _Mapping]] = ..., generic: _Optional[_Union[AdbResponse.GenericResponse, _Mapping]] = ..., package_manager: _Optional[_Union[AdbResponse.PackageManagerResponse, _Mapping]] = ..., get_orientation: _Optional[_Union[AdbResponse.GetOrientationResponse, _Mapping]] = ..., dumpsys: _Optional[_Union[AdbResponse.DumpsysResponse, _Mapping]] = ...) -> None: ...
diff --git a/android_env/proto/adb_pb2_grpc.py b/android_env/proto/adb_pb2_grpc.py
new file mode 100644
index 0000000..fabb71d
--- /dev/null
+++ b/android_env/proto/adb_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/adb_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/emulator_controller_pb2.py b/android_env/proto/emulator_controller_pb2.py
new file mode 100644
index 0000000..3dd14e7
--- /dev/null
+++ b/android_env/proto/emulator_controller_pb2.py
@@ -0,0 +1,160 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/emulator_controller.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/emulator_controller.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n+android_env/proto/emulator_controller.proto\x12\x19\x61ndroid.emulation.control\x1a\x1bgoogle/protobuf/empty.proto\"\xd7\x01\n\nVmRunState\x12=\n\x05state\x18\x01 \x01(\x0e\x32..android.emulation.control.VmRunState.RunState\"\x89\x01\n\x08RunState\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07RUNNING\x10\x01\x12\x0e\n\nRESTORE_VM\x10\x02\x12\n\n\x06PAUSED\x10\x03\x12\x0b\n\x07SAVE_VM\x10\x04\x12\x0c\n\x08SHUTDOWN\x10\x05\x12\r\n\tTERMINATE\x10\x07\x12\t\n\x05RESET\x10\t\x12\x12\n\x0eINTERNAL_ERROR\x10\n\"\"\n\x0eParameterValue\x12\x10\n\x04\x64\x61ta\x18\x01 \x03(\x02\x42\x02\x10\x01\"\xc3\x04\n\x12PhysicalModelValue\x12J\n\x06target\x18\x01 \x01(\x0e\x32:.android.emulation.control.PhysicalModelValue.PhysicalType\x12\x43\n\x06status\x18\x02 \x01(\x0e\x32\x33.android.emulation.control.PhysicalModelValue.State\x12\x38\n\x05value\x18\x03 \x01(\x0b\x32).android.emulation.control.ParameterValue\"U\n\x05State\x12\x06\n\x02OK\x10\x00\x12\x17\n\nNO_SERVICE\x10\xfd\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x15\n\x08\x44ISABLED\x10\xfe\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x14\n\x07UNKNOWN\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\"\x8a\x02\n\x0cPhysicalType\x12\x0c\n\x08POSITION\x10\x00\x12\x0c\n\x08ROTATION\x10\x01\x12\x12\n\x0eMAGNETIC_FIELD\x10\x02\x12\x0f\n\x0bTEMPERATURE\x10\x03\x12\r\n\tPROXIMITY\x10\x04\x12\t\n\x05LIGHT\x10\x05\x12\x0c\n\x08PRESSURE\x10\x06\x12\x0c\n\x08HUMIDITY\x10\x07\x12\x0c\n\x08VELOCITY\x10\x08\x12\x12\n\x0e\x41MBIENT_MOTION\x10\t\x12\x10\n\x0cHINGE_ANGLE0\x10\n\x12\x10\n\x0cHINGE_ANGLE1\x10\x0b\x12\x10\n\x0cHINGE_ANGLE2\x10\x0c\x12\r\n\tROLLABLE0\x10\r\x12\r\n\tROLLABLE1\x10\x0e\x12\r\n\tROLLABLE2\x10\x0f\"\xf8\x03\n\x0bSensorValue\x12\x41\n\x06target\x18\x01 \x01(\x0e\x32\x31.android.emulation.control.SensorValue.SensorType\x12<\n\x06status\x18\x02 \x01(\x0e\x32,.android.emulation.control.SensorValue.State\x12\x38\n\x05value\x18\x03 \x01(\x0b\x32).android.emulation.control.ParameterValue\"U\n\x05State\x12\x06\n\x02OK\x10\x00\x12\x17\n\nNO_SERVICE\x10\xfd\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x15\n\x08\x44ISABLED\x10\xfe\xff\xff\xff\xff\xff\xff\xff\xff\x01\x12\x14\n\x07UNKNOWN\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\"\xd6\x01\n\nSensorType\x12\x10\n\x0c\x41\x43\x43\x45LERATION\x10\x00\x12\r\n\tGYROSCOPE\x10\x01\x12\x12\n\x0eMAGNETIC_FIELD\x10\x02\x12\x0f\n\x0bORIENTATION\x10\x03\x12\x0f\n\x0bTEMPERATURE\x10\x04\x12\r\n\tPROXIMITY\x10\x05\x12\t\n\x05LIGHT\x10\x06\x12\x0c\n\x08PRESSURE\x10\x07\x12\x0c\n\x08HUMIDITY\x10\x08\x12\x1f\n\x1bMAGNETIC_FIELD_UNCALIBRATED\x10\t\x12\x1a\n\x16GYROSCOPE_UNCALIBRATED\x10\n\"\xd2\x01\n\nLogMessage\x12\x10\n\x08\x63ontents\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\x03\x12\x0c\n\x04next\x18\x03 \x01(\x03\x12;\n\x04sort\x18\x04 \x01(\x0e\x32-.android.emulation.control.LogMessage.LogType\x12\x37\n\x07\x65ntries\x18\x05 \x03(\x0b\x32&.android.emulation.control.LogcatEntry\"\x1f\n\x07LogType\x12\x08\n\x04Text\x10\x00\x12\n\n\x06Parsed\x10\x01\"\x86\x02\n\x0bLogcatEntry\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12\x0b\n\x03pid\x18\x02 \x01(\r\x12\x0b\n\x03tid\x18\x03 \x01(\r\x12>\n\x05level\x18\x04 \x01(\x0e\x32/.android.emulation.control.LogcatEntry.LogLevel\x12\x0b\n\x03tag\x18\x05 \x01(\t\x12\x0b\n\x03msg\x18\x06 \x01(\t\"p\n\x08LogLevel\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x01\x12\x0b\n\x07VERBOSE\x10\x02\x12\t\n\x05\x44\x45\x42UG\x10\x03\x12\x08\n\x04INFO\x10\x04\x12\x08\n\x04WARN\x10\x05\x12\x07\n\x03\x45RR\x10\x06\x12\t\n\x05\x46\x41TAL\x10\x07\x12\n\n\x06SILENT\x10\x08\"\xf0\x01\n\x0fVmConfiguration\x12S\n\x0ehypervisorType\x18\x01 \x01(\x0e\x32;.android.emulation.control.VmConfiguration.VmHypervisorType\x12\x18\n\x10numberOfCpuCores\x18\x02 \x01(\x05\x12\x14\n\x0cramSizeBytes\x18\x03 \x01(\x03\"X\n\x10VmHypervisorType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04NONE\x10\x01\x12\x07\n\x03KVM\x10\x02\x12\x08\n\x04HAXM\x10\x03\x12\x07\n\x03HVF\x10\x04\x12\x08\n\x04WHPX\x10\x05\x12\x07\n\x03GVM\x10\x06\"\x18\n\x08\x43lipData\x12\x0c\n\x04text\x18\x01 \x01(\t\"\xfa\x01\n\x05Touch\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\x12\n\nidentifier\x18\x03 \x01(\x05\x12\x10\n\x08pressure\x18\x04 \x01(\x05\x12\x13\n\x0btouch_major\x18\x05 \x01(\x05\x12\x13\n\x0btouch_minor\x18\x06 \x01(\x05\x12\x44\n\nexpiration\x18\x07 \x01(\x0e\x32\x30.android.emulation.control.Touch.EventExpiration\"E\n\x0f\x45ventExpiration\x12 \n\x1c\x45VENT_EXPIRATION_UNSPECIFIED\x10\x00\x12\x10\n\x0cNEVER_EXPIRE\x10\x01\"P\n\nTouchEvent\x12\x31\n\x07touches\x18\x01 \x03(\x0b\x32 .android.emulation.control.Touch\x12\x0f\n\x07\x64isplay\x18\x02 \x01(\x05\"D\n\nMouseEvent\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\x0f\n\x07\x62uttons\x18\x03 \x01(\x05\x12\x0f\n\x07\x64isplay\x18\x04 \x01(\x05\"\xc1\x02\n\rKeyboardEvent\x12\x46\n\x08\x63odeType\x18\x01 \x01(\x0e\x32\x34.android.emulation.control.KeyboardEvent.KeyCodeType\x12H\n\teventType\x18\x02 \x01(\x0e\x32\x35.android.emulation.control.KeyboardEvent.KeyEventType\x12\x0f\n\x07keyCode\x18\x03 \x01(\x05\x12\x0b\n\x03key\x18\x04 \x01(\t\x12\x0c\n\x04text\x18\x05 \x01(\t\"<\n\x0bKeyCodeType\x12\x07\n\x03Usb\x10\x00\x12\t\n\x05\x45vdev\x10\x01\x12\x07\n\x03XKB\x10\x02\x12\x07\n\x03Win\x10\x03\x12\x07\n\x03Mac\x10\x04\"4\n\x0cKeyEventType\x12\x0b\n\x07keydown\x10\x00\x12\t\n\x05keyup\x10\x01\x12\x0c\n\x08keypress\x10\x02\"2\n\x0b\x46ingerprint\x12\x12\n\nisTouching\x18\x01 \x01(\x08\x12\x0f\n\x07touchId\x18\x02 \x01(\x05\"\x8c\x01\n\x08GpsState\x12\x15\n\rpassiveUpdate\x18\x01 \x01(\x08\x12\x10\n\x08latitude\x18\x02 \x01(\x01\x12\x11\n\tlongitude\x18\x03 \x01(\x01\x12\r\n\x05speed\x18\x04 \x01(\x01\x12\x0f\n\x07\x62\x65\x61ring\x18\x05 \x01(\x01\x12\x10\n\x08\x61ltitude\x18\x06 \x01(\x01\x12\x12\n\nsatellites\x18\x07 \x01(\x05\"\x87\x04\n\x0c\x42\x61tteryState\x12\x12\n\nhasBattery\x18\x01 \x01(\x08\x12\x11\n\tisPresent\x18\x02 \x01(\x08\x12G\n\x07\x63harger\x18\x03 \x01(\x0e\x32\x36.android.emulation.control.BatteryState.BatteryCharger\x12\x13\n\x0b\x63hargeLevel\x18\x04 \x01(\x05\x12\x45\n\x06health\x18\x05 \x01(\x0e\x32\x35.android.emulation.control.BatteryState.BatteryHealth\x12\x45\n\x06status\x18\x06 \x01(\x0e\x32\x35.android.emulation.control.BatteryState.BatteryStatus\"W\n\rBatteryStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08\x43HARGING\x10\x01\x12\x0f\n\x0b\x44ISCHARGING\x10\x02\x12\x10\n\x0cNOT_CHARGING\x10\x03\x12\x08\n\x04\x46ULL\x10\x04\"9\n\x0e\x42\x61tteryCharger\x12\x08\n\x04NONE\x10\x00\x12\x06\n\x02\x41\x43\x10\x01\x12\x07\n\x03USB\x10\x02\x12\x0c\n\x08WIRELESS\x10\x03\"P\n\rBatteryHealth\x12\x08\n\x04GOOD\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01\x12\x08\n\x04\x44\x45\x41\x44\x10\x02\x12\x0f\n\x0bOVERVOLTAGE\x10\x03\x12\x0e\n\nOVERHEATED\x10\x04\"\xae\x01\n\x0eImageTransport\x12K\n\x07\x63hannel\x18\x01 \x01(\x0e\x32:.android.emulation.control.ImageTransport.TransportChannel\x12\x0e\n\x06handle\x18\x02 \x01(\t\"?\n\x10TransportChannel\x12!\n\x1dTRANSPORT_CHANNEL_UNSPECIFIED\x10\x00\x12\x08\n\x04MMAP\x10\x01\"P\n\rFoldedDisplay\x12\r\n\x05width\x18\x01 \x01(\r\x12\x0e\n\x06height\x18\x02 \x01(\r\x12\x0f\n\x07xOffset\x18\x03 \x01(\r\x12\x0f\n\x07yOffset\x18\x04 \x01(\r\"\xe5\x02\n\x0bImageFormat\x12@\n\x06\x66ormat\x18\x01 \x01(\x0e\x32\x30.android.emulation.control.ImageFormat.ImgFormat\x12\x35\n\x08rotation\x18\x02 \x01(\x0b\x32#.android.emulation.control.Rotation\x12\r\n\x05width\x18\x03 \x01(\r\x12\x0e\n\x06height\x18\x04 \x01(\r\x12\x0f\n\x07\x64isplay\x18\x05 \x01(\r\x12<\n\ttransport\x18\x06 \x01(\x0b\x32).android.emulation.control.ImageTransport\x12?\n\rfoldedDisplay\x18\x07 \x01(\x0b\x32(.android.emulation.control.FoldedDisplay\".\n\tImgFormat\x12\x07\n\x03PNG\x10\x00\x12\x0c\n\x08RGBA8888\x10\x01\x12\n\n\x06RGB888\x10\x02\"\x97\x01\n\x05Image\x12\x36\n\x06\x66ormat\x18\x01 \x01(\x0b\x32&.android.emulation.control.ImageFormat\x12\x11\n\x05width\x18\x02 \x01(\rB\x02\x18\x01\x12\x12\n\x06height\x18\x03 \x01(\rB\x02\x18\x01\x12\r\n\x05image\x18\x04 \x01(\x0c\x12\x0b\n\x03seq\x18\x05 \x01(\r\x12\x13\n\x0btimestampUs\x18\x06 \x01(\x04\"\xd5\x01\n\x08Rotation\x12\x42\n\x08rotation\x18\x01 \x01(\x0e\x32\x30.android.emulation.control.Rotation.SkinRotation\x12\r\n\x05xAxis\x18\x02 \x01(\x01\x12\r\n\x05yAxis\x18\x03 \x01(\x01\x12\r\n\x05zAxis\x18\x04 \x01(\x01\"X\n\x0cSkinRotation\x12\x0c\n\x08PORTRAIT\x10\x00\x12\r\n\tLANDSCAPE\x10\x01\x12\x14\n\x10REVERSE_PORTRAIT\x10\x02\x12\x15\n\x11REVERSE_LANDSCAPE\x10\x03\"\xf4\x01\n\tPhoneCall\x12\x41\n\toperation\x18\x01 \x01(\x0e\x32..android.emulation.control.PhoneCall.Operation\x12\x0e\n\x06number\x18\x02 \x01(\t\"\x93\x01\n\tOperation\x12\x0c\n\x08InitCall\x10\x00\x12\x0e\n\nAcceptCall\x10\x01\x12\x16\n\x12RejectCallExplicit\x10\x02\x12\x12\n\x0eRejectCallBusy\x10\x03\x12\x12\n\x0e\x44isconnectCall\x10\x04\x12\x13\n\x0fPlaceCallOnHold\x10\x05\x12\x13\n\x0fTakeCallOffHold\x10\x06\"\xbc\x01\n\rPhoneResponse\x12\x43\n\x08response\x18\x01 \x01(\x0e\x32\x31.android.emulation.control.PhoneResponse.Response\"f\n\x08Response\x12\x06\n\x02OK\x10\x00\x12\x10\n\x0c\x42\x61\x64Operation\x10\x01\x12\r\n\tBadNumber\x10\x02\x12\x11\n\rInvalidAction\x10\x03\x12\x10\n\x0c\x41\x63tionFailed\x10\x04\x12\x0c\n\x08RadioOff\x10\x05\"#\n\x05\x45ntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"<\n\tEntryList\x12/\n\x05\x65ntry\x18\x01 \x03(\x0b\x32 .android.emulation.control.Entry\"\xbd\x01\n\x0e\x45mulatorStatus\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x0e\n\x06uptime\x18\x02 \x01(\x04\x12\x0e\n\x06\x62ooted\x18\x03 \x01(\x08\x12<\n\x08vmConfig\x18\x04 \x01(\x0b\x32*.android.emulation.control.VmConfiguration\x12<\n\x0ehardwareConfig\x18\x05 \x01(\x0b\x32$.android.emulation.control.EntryList\"\xfe\x01\n\x0b\x41udioFormat\x12\x14\n\x0csamplingRate\x18\x01 \x01(\x04\x12\x41\n\x08\x63hannels\x18\x02 \x01(\x0e\x32/.android.emulation.control.AudioFormat.Channels\x12\x43\n\x06\x66ormat\x18\x03 \x01(\x0e\x32\x33.android.emulation.control.AudioFormat.SampleFormat\"/\n\x0cSampleFormat\x12\x0e\n\nAUD_FMT_U8\x10\x00\x12\x0f\n\x0b\x41UD_FMT_S16\x10\x01\" \n\x08\x43hannels\x12\x08\n\x04Mono\x10\x00\x12\n\n\x06Stereo\x10\x01\"g\n\x0b\x41udioPacket\x12\x36\n\x06\x66ormat\x18\x01 \x01(\x0b\x32&.android.emulation.control.AudioFormat\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12\r\n\x05\x61udio\x18\x03 \x01(\x0c\".\n\nSmsMessage\x12\x12\n\nsrcAddress\x18\x01 \x01(\t\x12\x0c\n\x04text\x18\x02 \x01(\t\"\xcb\x02\n\x14\x44isplayConfiguration\x12\r\n\x05width\x18\x01 \x01(\r\x12\x0e\n\x06height\x18\x02 \x01(\r\x12\x0b\n\x03\x64pi\x18\x03 \x01(\r\x12\r\n\x05\x66lags\x18\x04 \x01(\r\x12\x0f\n\x07\x64isplay\x18\x05 \x01(\r\"\xe6\x01\n\x0c\x44isplayFlags\x12\x1c\n\x18\x44ISPLAYFLAGS_UNSPECIFIED\x10\x00\x12\x1f\n\x1bVIRTUAL_DISPLAY_FLAG_PUBLIC\x10\x01\x12%\n!VIRTUAL_DISPLAY_FLAG_PRESENTATION\x10\x02\x12\x1f\n\x1bVIRTUAL_DISPLAY_FLAG_SECURE\x10\x04\x12)\n%VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY\x10\x08\x12$\n VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR\x10\x10\"Z\n\x15\x44isplayConfigurations\x12\x41\n\x08\x64isplays\x18\x01 \x03(\x0b\x32/.android.emulation.control.DisplayConfiguration\"\xc8\x01\n\x0cNotification\x12@\n\x05\x65vent\x18\x01 \x01(\x0e\x32\x31.android.emulation.control.Notification.EventType\"v\n\tEventType\x12!\n\x1dVIRTUAL_SCENE_CAMERA_INACTIVE\x10\x00\x12\x1f\n\x1bVIRTUAL_SCENE_CAMERA_ACTIVE\x10\x01\x12%\n!DISPLAY_CONFIGURATIONS_CHANGED_UI\x10\x02\"1\n\x0eRotationRadian\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\"+\n\x08Velocity\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\"\xe8\x01\n\x07Posture\x12>\n\x05value\x18\x03 \x01(\x0e\x32/.android.emulation.control.Posture.PostureValue\"\x9c\x01\n\x0cPostureValue\x12\x13\n\x0fPOSTURE_UNKNOWN\x10\x00\x12\x12\n\x0ePOSTURE_CLOSED\x10\x01\x12\x17\n\x13POSTURE_HALF_OPENED\x10\x02\x12\x12\n\x0ePOSTURE_OPENED\x10\x03\x12\x13\n\x0fPOSTURE_FLIPPED\x10\x04\x12\x10\n\x0cPOSTURE_TENT\x10\x05\x12\x0f\n\x0bPOSTURE_MAX\x10\x06\x32\x8a\x18\n\x12\x45mulatorController\x12\x62\n\x0cstreamSensor\x12&.android.emulation.control.SensorValue\x1a&.android.emulation.control.SensorValue\"\x00\x30\x01\x12]\n\tgetSensor\x12&.android.emulation.control.SensorValue\x1a&.android.emulation.control.SensorValue\"\x00\x12M\n\tsetSensor\x12&.android.emulation.control.SensorValue\x1a\x16.google.protobuf.Empty\"\x00\x12[\n\x10setPhysicalModel\x12-.android.emulation.control.PhysicalModelValue\x1a\x16.google.protobuf.Empty\"\x00\x12r\n\x10getPhysicalModel\x12-.android.emulation.control.PhysicalModelValue\x1a-.android.emulation.control.PhysicalModelValue\"\x00\x12w\n\x13streamPhysicalModel\x12-.android.emulation.control.PhysicalModelValue\x1a-.android.emulation.control.PhysicalModelValue\"\x00\x30\x01\x12M\n\x0csetClipboard\x12#.android.emulation.control.ClipData\x1a\x16.google.protobuf.Empty\"\x00\x12M\n\x0cgetClipboard\x12\x16.google.protobuf.Empty\x1a#.android.emulation.control.ClipData\"\x00\x12R\n\x0fstreamClipboard\x12\x16.google.protobuf.Empty\x1a#.android.emulation.control.ClipData\"\x00\x30\x01\x12O\n\nsetBattery\x12\'.android.emulation.control.BatteryState\x1a\x16.google.protobuf.Empty\"\x00\x12O\n\ngetBattery\x12\x16.google.protobuf.Empty\x1a\'.android.emulation.control.BatteryState\"\x00\x12G\n\x06setGps\x12#.android.emulation.control.GpsState\x1a\x16.google.protobuf.Empty\"\x00\x12G\n\x06getGps\x12\x16.google.protobuf.Empty\x1a#.android.emulation.control.GpsState\"\x00\x12S\n\x0fsendFingerprint\x12&.android.emulation.control.Fingerprint\x1a\x16.google.protobuf.Empty\"\x00\x12M\n\x07sendKey\x12(.android.emulation.control.KeyboardEvent\x1a\x16.google.protobuf.Empty\"\x00\x12L\n\tsendTouch\x12%.android.emulation.control.TouchEvent\x1a\x16.google.protobuf.Empty\"\x00\x12L\n\tsendMouse\x12%.android.emulation.control.MouseEvent\x1a\x16.google.protobuf.Empty\"\x00\x12]\n\tsendPhone\x12$.android.emulation.control.PhoneCall\x1a(.android.emulation.control.PhoneResponse\"\x00\x12\\\n\x07sendSms\x12%.android.emulation.control.SmsMessage\x1a(.android.emulation.control.PhoneResponse\"\x00\x12P\n\tgetStatus\x12\x16.google.protobuf.Empty\x1a).android.emulation.control.EmulatorStatus\"\x00\x12[\n\rgetScreenshot\x12&.android.emulation.control.ImageFormat\x1a .android.emulation.control.Image\"\x00\x12`\n\x10streamScreenshot\x12&.android.emulation.control.ImageFormat\x1a .android.emulation.control.Image\"\x00\x30\x01\x12\x61\n\x0bstreamAudio\x12&.android.emulation.control.AudioFormat\x1a&.android.emulation.control.AudioPacket\"\x00\x30\x01\x12Q\n\x0binjectAudio\x12&.android.emulation.control.AudioPacket\x1a\x16.google.protobuf.Empty\"\x00(\x01\x12[\n\tgetLogcat\x12%.android.emulation.control.LogMessage\x1a%.android.emulation.control.LogMessage\"\x00\x12`\n\x0cstreamLogcat\x12%.android.emulation.control.LogMessage\x1a%.android.emulation.control.LogMessage\"\x00\x30\x01\x12M\n\nsetVmState\x12%.android.emulation.control.VmRunState\x1a\x16.google.protobuf.Empty\"\x00\x12M\n\ngetVmState\x12\x16.google.protobuf.Empty\x1a%.android.emulation.control.VmRunState\"\x00\x12\x80\x01\n\x18setDisplayConfigurations\x12\x30.android.emulation.control.DisplayConfigurations\x1a\x30.android.emulation.control.DisplayConfigurations\"\x00\x12\x66\n\x18getDisplayConfigurations\x12\x16.google.protobuf.Empty\x1a\x30.android.emulation.control.DisplayConfigurations\"\x00\x12Y\n\x12streamNotification\x12\x16.google.protobuf.Empty\x1a\'.android.emulation.control.Notification\"\x00\x30\x01\x12_\n\x18rotateVirtualSceneCamera\x12).android.emulation.control.RotationRadian\x1a\x16.google.protobuf.Empty\"\x00\x12^\n\x1dsetVirtualSceneCameraVelocity\x12#.android.emulation.control.Velocity\x1a\x16.google.protobuf.Empty\"\x00\x12J\n\nsetPosture\x12\".android.emulation.control.Posture\x1a\x16.google.protobuf.Empty\"\x00\x42&\n\x1c\x63om.android.emulator.controlP\x01\xa2\x02\x03\x41\x45\x43\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.emulator_controller_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n\034com.android.emulator.controlP\001\242\002\003AEC'
+  _globals['_PARAMETERVALUE'].fields_by_name['data']._loaded_options = None
+  _globals['_PARAMETERVALUE'].fields_by_name['data']._serialized_options = b'\020\001'
+  _globals['_IMAGE'].fields_by_name['width']._loaded_options = None
+  _globals['_IMAGE'].fields_by_name['width']._serialized_options = b'\030\001'
+  _globals['_IMAGE'].fields_by_name['height']._loaded_options = None
+  _globals['_IMAGE'].fields_by_name['height']._serialized_options = b'\030\001'
+  _globals['_VMRUNSTATE']._serialized_start=104
+  _globals['_VMRUNSTATE']._serialized_end=319
+  _globals['_VMRUNSTATE_RUNSTATE']._serialized_start=182
+  _globals['_VMRUNSTATE_RUNSTATE']._serialized_end=319
+  _globals['_PARAMETERVALUE']._serialized_start=321
+  _globals['_PARAMETERVALUE']._serialized_end=355
+  _globals['_PHYSICALMODELVALUE']._serialized_start=358
+  _globals['_PHYSICALMODELVALUE']._serialized_end=937
+  _globals['_PHYSICALMODELVALUE_STATE']._serialized_start=583
+  _globals['_PHYSICALMODELVALUE_STATE']._serialized_end=668
+  _globals['_PHYSICALMODELVALUE_PHYSICALTYPE']._serialized_start=671
+  _globals['_PHYSICALMODELVALUE_PHYSICALTYPE']._serialized_end=937
+  _globals['_SENSORVALUE']._serialized_start=940
+  _globals['_SENSORVALUE']._serialized_end=1444
+  _globals['_SENSORVALUE_STATE']._serialized_start=583
+  _globals['_SENSORVALUE_STATE']._serialized_end=668
+  _globals['_SENSORVALUE_SENSORTYPE']._serialized_start=1230
+  _globals['_SENSORVALUE_SENSORTYPE']._serialized_end=1444
+  _globals['_LOGMESSAGE']._serialized_start=1447
+  _globals['_LOGMESSAGE']._serialized_end=1657
+  _globals['_LOGMESSAGE_LOGTYPE']._serialized_start=1626
+  _globals['_LOGMESSAGE_LOGTYPE']._serialized_end=1657
+  _globals['_LOGCATENTRY']._serialized_start=1660
+  _globals['_LOGCATENTRY']._serialized_end=1922
+  _globals['_LOGCATENTRY_LOGLEVEL']._serialized_start=1810
+  _globals['_LOGCATENTRY_LOGLEVEL']._serialized_end=1922
+  _globals['_VMCONFIGURATION']._serialized_start=1925
+  _globals['_VMCONFIGURATION']._serialized_end=2165
+  _globals['_VMCONFIGURATION_VMHYPERVISORTYPE']._serialized_start=2077
+  _globals['_VMCONFIGURATION_VMHYPERVISORTYPE']._serialized_end=2165
+  _globals['_CLIPDATA']._serialized_start=2167
+  _globals['_CLIPDATA']._serialized_end=2191
+  _globals['_TOUCH']._serialized_start=2194
+  _globals['_TOUCH']._serialized_end=2444
+  _globals['_TOUCH_EVENTEXPIRATION']._serialized_start=2375
+  _globals['_TOUCH_EVENTEXPIRATION']._serialized_end=2444
+  _globals['_TOUCHEVENT']._serialized_start=2446
+  _globals['_TOUCHEVENT']._serialized_end=2526
+  _globals['_MOUSEEVENT']._serialized_start=2528
+  _globals['_MOUSEEVENT']._serialized_end=2596
+  _globals['_KEYBOARDEVENT']._serialized_start=2599
+  _globals['_KEYBOARDEVENT']._serialized_end=2920
+  _globals['_KEYBOARDEVENT_KEYCODETYPE']._serialized_start=2806
+  _globals['_KEYBOARDEVENT_KEYCODETYPE']._serialized_end=2866
+  _globals['_KEYBOARDEVENT_KEYEVENTTYPE']._serialized_start=2868
+  _globals['_KEYBOARDEVENT_KEYEVENTTYPE']._serialized_end=2920
+  _globals['_FINGERPRINT']._serialized_start=2922
+  _globals['_FINGERPRINT']._serialized_end=2972
+  _globals['_GPSSTATE']._serialized_start=2975
+  _globals['_GPSSTATE']._serialized_end=3115
+  _globals['_BATTERYSTATE']._serialized_start=3118
+  _globals['_BATTERYSTATE']._serialized_end=3637
+  _globals['_BATTERYSTATE_BATTERYSTATUS']._serialized_start=3409
+  _globals['_BATTERYSTATE_BATTERYSTATUS']._serialized_end=3496
+  _globals['_BATTERYSTATE_BATTERYCHARGER']._serialized_start=3498
+  _globals['_BATTERYSTATE_BATTERYCHARGER']._serialized_end=3555
+  _globals['_BATTERYSTATE_BATTERYHEALTH']._serialized_start=3557
+  _globals['_BATTERYSTATE_BATTERYHEALTH']._serialized_end=3637
+  _globals['_IMAGETRANSPORT']._serialized_start=3640
+  _globals['_IMAGETRANSPORT']._serialized_end=3814
+  _globals['_IMAGETRANSPORT_TRANSPORTCHANNEL']._serialized_start=3751
+  _globals['_IMAGETRANSPORT_TRANSPORTCHANNEL']._serialized_end=3814
+  _globals['_FOLDEDDISPLAY']._serialized_start=3816
+  _globals['_FOLDEDDISPLAY']._serialized_end=3896
+  _globals['_IMAGEFORMAT']._serialized_start=3899
+  _globals['_IMAGEFORMAT']._serialized_end=4256
+  _globals['_IMAGEFORMAT_IMGFORMAT']._serialized_start=4210
+  _globals['_IMAGEFORMAT_IMGFORMAT']._serialized_end=4256
+  _globals['_IMAGE']._serialized_start=4259
+  _globals['_IMAGE']._serialized_end=4410
+  _globals['_ROTATION']._serialized_start=4413
+  _globals['_ROTATION']._serialized_end=4626
+  _globals['_ROTATION_SKINROTATION']._serialized_start=4538
+  _globals['_ROTATION_SKINROTATION']._serialized_end=4626
+  _globals['_PHONECALL']._serialized_start=4629
+  _globals['_PHONECALL']._serialized_end=4873
+  _globals['_PHONECALL_OPERATION']._serialized_start=4726
+  _globals['_PHONECALL_OPERATION']._serialized_end=4873
+  _globals['_PHONERESPONSE']._serialized_start=4876
+  _globals['_PHONERESPONSE']._serialized_end=5064
+  _globals['_PHONERESPONSE_RESPONSE']._serialized_start=4962
+  _globals['_PHONERESPONSE_RESPONSE']._serialized_end=5064
+  _globals['_ENTRY']._serialized_start=5066
+  _globals['_ENTRY']._serialized_end=5101
+  _globals['_ENTRYLIST']._serialized_start=5103
+  _globals['_ENTRYLIST']._serialized_end=5163
+  _globals['_EMULATORSTATUS']._serialized_start=5166
+  _globals['_EMULATORSTATUS']._serialized_end=5355
+  _globals['_AUDIOFORMAT']._serialized_start=5358
+  _globals['_AUDIOFORMAT']._serialized_end=5612
+  _globals['_AUDIOFORMAT_SAMPLEFORMAT']._serialized_start=5531
+  _globals['_AUDIOFORMAT_SAMPLEFORMAT']._serialized_end=5578
+  _globals['_AUDIOFORMAT_CHANNELS']._serialized_start=5580
+  _globals['_AUDIOFORMAT_CHANNELS']._serialized_end=5612
+  _globals['_AUDIOPACKET']._serialized_start=5614
+  _globals['_AUDIOPACKET']._serialized_end=5717
+  _globals['_SMSMESSAGE']._serialized_start=5719
+  _globals['_SMSMESSAGE']._serialized_end=5765
+  _globals['_DISPLAYCONFIGURATION']._serialized_start=5768
+  _globals['_DISPLAYCONFIGURATION']._serialized_end=6099
+  _globals['_DISPLAYCONFIGURATION_DISPLAYFLAGS']._serialized_start=5869
+  _globals['_DISPLAYCONFIGURATION_DISPLAYFLAGS']._serialized_end=6099
+  _globals['_DISPLAYCONFIGURATIONS']._serialized_start=6101
+  _globals['_DISPLAYCONFIGURATIONS']._serialized_end=6191
+  _globals['_NOTIFICATION']._serialized_start=6194
+  _globals['_NOTIFICATION']._serialized_end=6394
+  _globals['_NOTIFICATION_EVENTTYPE']._serialized_start=6276
+  _globals['_NOTIFICATION_EVENTTYPE']._serialized_end=6394
+  _globals['_ROTATIONRADIAN']._serialized_start=6396
+  _globals['_ROTATIONRADIAN']._serialized_end=6445
+  _globals['_VELOCITY']._serialized_start=6447
+  _globals['_VELOCITY']._serialized_end=6490
+  _globals['_POSTURE']._serialized_start=6493
+  _globals['_POSTURE']._serialized_end=6725
+  _globals['_POSTURE_POSTUREVALUE']._serialized_start=6569
+  _globals['_POSTURE_POSTUREVALUE']._serialized_end=6725
+  _globals['_EMULATORCONTROLLER']._serialized_start=6728
+  _globals['_EMULATORCONTROLLER']._serialized_end=9810
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/emulator_controller_pb2.pyi b/android_env/proto/emulator_controller_pb2.pyi
new file mode 100644
index 0000000..ef23653
--- /dev/null
+++ b/android_env/proto/emulator_controller_pb2.pyi
@@ -0,0 +1,673 @@
+from google.protobuf import empty_pb2 as _empty_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class VmRunState(_message.Message):
+    __slots__ = ("state",)
+    class RunState(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN: _ClassVar[VmRunState.RunState]
+        RUNNING: _ClassVar[VmRunState.RunState]
+        RESTORE_VM: _ClassVar[VmRunState.RunState]
+        PAUSED: _ClassVar[VmRunState.RunState]
+        SAVE_VM: _ClassVar[VmRunState.RunState]
+        SHUTDOWN: _ClassVar[VmRunState.RunState]
+        TERMINATE: _ClassVar[VmRunState.RunState]
+        RESET: _ClassVar[VmRunState.RunState]
+        INTERNAL_ERROR: _ClassVar[VmRunState.RunState]
+    UNKNOWN: VmRunState.RunState
+    RUNNING: VmRunState.RunState
+    RESTORE_VM: VmRunState.RunState
+    PAUSED: VmRunState.RunState
+    SAVE_VM: VmRunState.RunState
+    SHUTDOWN: VmRunState.RunState
+    TERMINATE: VmRunState.RunState
+    RESET: VmRunState.RunState
+    INTERNAL_ERROR: VmRunState.RunState
+    STATE_FIELD_NUMBER: _ClassVar[int]
+    state: VmRunState.RunState
+    def __init__(self, state: _Optional[_Union[VmRunState.RunState, str]] = ...) -> None: ...
+
+class ParameterValue(_message.Message):
+    __slots__ = ("data",)
+    DATA_FIELD_NUMBER: _ClassVar[int]
+    data: _containers.RepeatedScalarFieldContainer[float]
+    def __init__(self, data: _Optional[_Iterable[float]] = ...) -> None: ...
+
+class PhysicalModelValue(_message.Message):
+    __slots__ = ("target", "status", "value")
+    class State(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        OK: _ClassVar[PhysicalModelValue.State]
+        NO_SERVICE: _ClassVar[PhysicalModelValue.State]
+        DISABLED: _ClassVar[PhysicalModelValue.State]
+        UNKNOWN: _ClassVar[PhysicalModelValue.State]
+    OK: PhysicalModelValue.State
+    NO_SERVICE: PhysicalModelValue.State
+    DISABLED: PhysicalModelValue.State
+    UNKNOWN: PhysicalModelValue.State
+    class PhysicalType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        POSITION: _ClassVar[PhysicalModelValue.PhysicalType]
+        ROTATION: _ClassVar[PhysicalModelValue.PhysicalType]
+        MAGNETIC_FIELD: _ClassVar[PhysicalModelValue.PhysicalType]
+        TEMPERATURE: _ClassVar[PhysicalModelValue.PhysicalType]
+        PROXIMITY: _ClassVar[PhysicalModelValue.PhysicalType]
+        LIGHT: _ClassVar[PhysicalModelValue.PhysicalType]
+        PRESSURE: _ClassVar[PhysicalModelValue.PhysicalType]
+        HUMIDITY: _ClassVar[PhysicalModelValue.PhysicalType]
+        VELOCITY: _ClassVar[PhysicalModelValue.PhysicalType]
+        AMBIENT_MOTION: _ClassVar[PhysicalModelValue.PhysicalType]
+        HINGE_ANGLE0: _ClassVar[PhysicalModelValue.PhysicalType]
+        HINGE_ANGLE1: _ClassVar[PhysicalModelValue.PhysicalType]
+        HINGE_ANGLE2: _ClassVar[PhysicalModelValue.PhysicalType]
+        ROLLABLE0: _ClassVar[PhysicalModelValue.PhysicalType]
+        ROLLABLE1: _ClassVar[PhysicalModelValue.PhysicalType]
+        ROLLABLE2: _ClassVar[PhysicalModelValue.PhysicalType]
+    POSITION: PhysicalModelValue.PhysicalType
+    ROTATION: PhysicalModelValue.PhysicalType
+    MAGNETIC_FIELD: PhysicalModelValue.PhysicalType
+    TEMPERATURE: PhysicalModelValue.PhysicalType
+    PROXIMITY: PhysicalModelValue.PhysicalType
+    LIGHT: PhysicalModelValue.PhysicalType
+    PRESSURE: PhysicalModelValue.PhysicalType
+    HUMIDITY: PhysicalModelValue.PhysicalType
+    VELOCITY: PhysicalModelValue.PhysicalType
+    AMBIENT_MOTION: PhysicalModelValue.PhysicalType
+    HINGE_ANGLE0: PhysicalModelValue.PhysicalType
+    HINGE_ANGLE1: PhysicalModelValue.PhysicalType
+    HINGE_ANGLE2: PhysicalModelValue.PhysicalType
+    ROLLABLE0: PhysicalModelValue.PhysicalType
+    ROLLABLE1: PhysicalModelValue.PhysicalType
+    ROLLABLE2: PhysicalModelValue.PhysicalType
+    TARGET_FIELD_NUMBER: _ClassVar[int]
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    VALUE_FIELD_NUMBER: _ClassVar[int]
+    target: PhysicalModelValue.PhysicalType
+    status: PhysicalModelValue.State
+    value: ParameterValue
+    def __init__(self, target: _Optional[_Union[PhysicalModelValue.PhysicalType, str]] = ..., status: _Optional[_Union[PhysicalModelValue.State, str]] = ..., value: _Optional[_Union[ParameterValue, _Mapping]] = ...) -> None: ...
+
+class SensorValue(_message.Message):
+    __slots__ = ("target", "status", "value")
+    class State(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        OK: _ClassVar[SensorValue.State]
+        NO_SERVICE: _ClassVar[SensorValue.State]
+        DISABLED: _ClassVar[SensorValue.State]
+        UNKNOWN: _ClassVar[SensorValue.State]
+    OK: SensorValue.State
+    NO_SERVICE: SensorValue.State
+    DISABLED: SensorValue.State
+    UNKNOWN: SensorValue.State
+    class SensorType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        ACCELERATION: _ClassVar[SensorValue.SensorType]
+        GYROSCOPE: _ClassVar[SensorValue.SensorType]
+        MAGNETIC_FIELD: _ClassVar[SensorValue.SensorType]
+        ORIENTATION: _ClassVar[SensorValue.SensorType]
+        TEMPERATURE: _ClassVar[SensorValue.SensorType]
+        PROXIMITY: _ClassVar[SensorValue.SensorType]
+        LIGHT: _ClassVar[SensorValue.SensorType]
+        PRESSURE: _ClassVar[SensorValue.SensorType]
+        HUMIDITY: _ClassVar[SensorValue.SensorType]
+        MAGNETIC_FIELD_UNCALIBRATED: _ClassVar[SensorValue.SensorType]
+        GYROSCOPE_UNCALIBRATED: _ClassVar[SensorValue.SensorType]
+    ACCELERATION: SensorValue.SensorType
+    GYROSCOPE: SensorValue.SensorType
+    MAGNETIC_FIELD: SensorValue.SensorType
+    ORIENTATION: SensorValue.SensorType
+    TEMPERATURE: SensorValue.SensorType
+    PROXIMITY: SensorValue.SensorType
+    LIGHT: SensorValue.SensorType
+    PRESSURE: SensorValue.SensorType
+    HUMIDITY: SensorValue.SensorType
+    MAGNETIC_FIELD_UNCALIBRATED: SensorValue.SensorType
+    GYROSCOPE_UNCALIBRATED: SensorValue.SensorType
+    TARGET_FIELD_NUMBER: _ClassVar[int]
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    VALUE_FIELD_NUMBER: _ClassVar[int]
+    target: SensorValue.SensorType
+    status: SensorValue.State
+    value: ParameterValue
+    def __init__(self, target: _Optional[_Union[SensorValue.SensorType, str]] = ..., status: _Optional[_Union[SensorValue.State, str]] = ..., value: _Optional[_Union[ParameterValue, _Mapping]] = ...) -> None: ...
+
+class LogMessage(_message.Message):
+    __slots__ = ("contents", "start", "next", "sort", "entries")
+    class LogType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        Text: _ClassVar[LogMessage.LogType]
+        Parsed: _ClassVar[LogMessage.LogType]
+    Text: LogMessage.LogType
+    Parsed: LogMessage.LogType
+    CONTENTS_FIELD_NUMBER: _ClassVar[int]
+    START_FIELD_NUMBER: _ClassVar[int]
+    NEXT_FIELD_NUMBER: _ClassVar[int]
+    SORT_FIELD_NUMBER: _ClassVar[int]
+    ENTRIES_FIELD_NUMBER: _ClassVar[int]
+    contents: str
+    start: int
+    next: int
+    sort: LogMessage.LogType
+    entries: _containers.RepeatedCompositeFieldContainer[LogcatEntry]
+    def __init__(self, contents: _Optional[str] = ..., start: _Optional[int] = ..., next: _Optional[int] = ..., sort: _Optional[_Union[LogMessage.LogType, str]] = ..., entries: _Optional[_Iterable[_Union[LogcatEntry, _Mapping]]] = ...) -> None: ...
+
+class LogcatEntry(_message.Message):
+    __slots__ = ("timestamp", "pid", "tid", "level", "tag", "msg")
+    class LogLevel(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN: _ClassVar[LogcatEntry.LogLevel]
+        DEFAULT: _ClassVar[LogcatEntry.LogLevel]
+        VERBOSE: _ClassVar[LogcatEntry.LogLevel]
+        DEBUG: _ClassVar[LogcatEntry.LogLevel]
+        INFO: _ClassVar[LogcatEntry.LogLevel]
+        WARN: _ClassVar[LogcatEntry.LogLevel]
+        ERR: _ClassVar[LogcatEntry.LogLevel]
+        FATAL: _ClassVar[LogcatEntry.LogLevel]
+        SILENT: _ClassVar[LogcatEntry.LogLevel]
+    UNKNOWN: LogcatEntry.LogLevel
+    DEFAULT: LogcatEntry.LogLevel
+    VERBOSE: LogcatEntry.LogLevel
+    DEBUG: LogcatEntry.LogLevel
+    INFO: LogcatEntry.LogLevel
+    WARN: LogcatEntry.LogLevel
+    ERR: LogcatEntry.LogLevel
+    FATAL: LogcatEntry.LogLevel
+    SILENT: LogcatEntry.LogLevel
+    TIMESTAMP_FIELD_NUMBER: _ClassVar[int]
+    PID_FIELD_NUMBER: _ClassVar[int]
+    TID_FIELD_NUMBER: _ClassVar[int]
+    LEVEL_FIELD_NUMBER: _ClassVar[int]
+    TAG_FIELD_NUMBER: _ClassVar[int]
+    MSG_FIELD_NUMBER: _ClassVar[int]
+    timestamp: int
+    pid: int
+    tid: int
+    level: LogcatEntry.LogLevel
+    tag: str
+    msg: str
+    def __init__(self, timestamp: _Optional[int] = ..., pid: _Optional[int] = ..., tid: _Optional[int] = ..., level: _Optional[_Union[LogcatEntry.LogLevel, str]] = ..., tag: _Optional[str] = ..., msg: _Optional[str] = ...) -> None: ...
+
+class VmConfiguration(_message.Message):
+    __slots__ = ("hypervisorType", "numberOfCpuCores", "ramSizeBytes")
+    class VmHypervisorType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN: _ClassVar[VmConfiguration.VmHypervisorType]
+        NONE: _ClassVar[VmConfiguration.VmHypervisorType]
+        KVM: _ClassVar[VmConfiguration.VmHypervisorType]
+        HAXM: _ClassVar[VmConfiguration.VmHypervisorType]
+        HVF: _ClassVar[VmConfiguration.VmHypervisorType]
+        WHPX: _ClassVar[VmConfiguration.VmHypervisorType]
+        GVM: _ClassVar[VmConfiguration.VmHypervisorType]
+    UNKNOWN: VmConfiguration.VmHypervisorType
+    NONE: VmConfiguration.VmHypervisorType
+    KVM: VmConfiguration.VmHypervisorType
+    HAXM: VmConfiguration.VmHypervisorType
+    HVF: VmConfiguration.VmHypervisorType
+    WHPX: VmConfiguration.VmHypervisorType
+    GVM: VmConfiguration.VmHypervisorType
+    HYPERVISORTYPE_FIELD_NUMBER: _ClassVar[int]
+    NUMBEROFCPUCORES_FIELD_NUMBER: _ClassVar[int]
+    RAMSIZEBYTES_FIELD_NUMBER: _ClassVar[int]
+    hypervisorType: VmConfiguration.VmHypervisorType
+    numberOfCpuCores: int
+    ramSizeBytes: int
+    def __init__(self, hypervisorType: _Optional[_Union[VmConfiguration.VmHypervisorType, str]] = ..., numberOfCpuCores: _Optional[int] = ..., ramSizeBytes: _Optional[int] = ...) -> None: ...
+
+class ClipData(_message.Message):
+    __slots__ = ("text",)
+    TEXT_FIELD_NUMBER: _ClassVar[int]
+    text: str
+    def __init__(self, text: _Optional[str] = ...) -> None: ...
+
+class Touch(_message.Message):
+    __slots__ = ("x", "y", "identifier", "pressure", "touch_major", "touch_minor", "expiration")
+    class EventExpiration(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        EVENT_EXPIRATION_UNSPECIFIED: _ClassVar[Touch.EventExpiration]
+        NEVER_EXPIRE: _ClassVar[Touch.EventExpiration]
+    EVENT_EXPIRATION_UNSPECIFIED: Touch.EventExpiration
+    NEVER_EXPIRE: Touch.EventExpiration
+    X_FIELD_NUMBER: _ClassVar[int]
+    Y_FIELD_NUMBER: _ClassVar[int]
+    IDENTIFIER_FIELD_NUMBER: _ClassVar[int]
+    PRESSURE_FIELD_NUMBER: _ClassVar[int]
+    TOUCH_MAJOR_FIELD_NUMBER: _ClassVar[int]
+    TOUCH_MINOR_FIELD_NUMBER: _ClassVar[int]
+    EXPIRATION_FIELD_NUMBER: _ClassVar[int]
+    x: int
+    y: int
+    identifier: int
+    pressure: int
+    touch_major: int
+    touch_minor: int
+    expiration: Touch.EventExpiration
+    def __init__(self, x: _Optional[int] = ..., y: _Optional[int] = ..., identifier: _Optional[int] = ..., pressure: _Optional[int] = ..., touch_major: _Optional[int] = ..., touch_minor: _Optional[int] = ..., expiration: _Optional[_Union[Touch.EventExpiration, str]] = ...) -> None: ...
+
+class TouchEvent(_message.Message):
+    __slots__ = ("touches", "display")
+    TOUCHES_FIELD_NUMBER: _ClassVar[int]
+    DISPLAY_FIELD_NUMBER: _ClassVar[int]
+    touches: _containers.RepeatedCompositeFieldContainer[Touch]
+    display: int
+    def __init__(self, touches: _Optional[_Iterable[_Union[Touch, _Mapping]]] = ..., display: _Optional[int] = ...) -> None: ...
+
+class MouseEvent(_message.Message):
+    __slots__ = ("x", "y", "buttons", "display")
+    X_FIELD_NUMBER: _ClassVar[int]
+    Y_FIELD_NUMBER: _ClassVar[int]
+    BUTTONS_FIELD_NUMBER: _ClassVar[int]
+    DISPLAY_FIELD_NUMBER: _ClassVar[int]
+    x: int
+    y: int
+    buttons: int
+    display: int
+    def __init__(self, x: _Optional[int] = ..., y: _Optional[int] = ..., buttons: _Optional[int] = ..., display: _Optional[int] = ...) -> None: ...
+
+class KeyboardEvent(_message.Message):
+    __slots__ = ("codeType", "eventType", "keyCode", "key", "text")
+    class KeyCodeType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        Usb: _ClassVar[KeyboardEvent.KeyCodeType]
+        Evdev: _ClassVar[KeyboardEvent.KeyCodeType]
+        XKB: _ClassVar[KeyboardEvent.KeyCodeType]
+        Win: _ClassVar[KeyboardEvent.KeyCodeType]
+        Mac: _ClassVar[KeyboardEvent.KeyCodeType]
+    Usb: KeyboardEvent.KeyCodeType
+    Evdev: KeyboardEvent.KeyCodeType
+    XKB: KeyboardEvent.KeyCodeType
+    Win: KeyboardEvent.KeyCodeType
+    Mac: KeyboardEvent.KeyCodeType
+    class KeyEventType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        keydown: _ClassVar[KeyboardEvent.KeyEventType]
+        keyup: _ClassVar[KeyboardEvent.KeyEventType]
+        keypress: _ClassVar[KeyboardEvent.KeyEventType]
+    keydown: KeyboardEvent.KeyEventType
+    keyup: KeyboardEvent.KeyEventType
+    keypress: KeyboardEvent.KeyEventType
+    CODETYPE_FIELD_NUMBER: _ClassVar[int]
+    EVENTTYPE_FIELD_NUMBER: _ClassVar[int]
+    KEYCODE_FIELD_NUMBER: _ClassVar[int]
+    KEY_FIELD_NUMBER: _ClassVar[int]
+    TEXT_FIELD_NUMBER: _ClassVar[int]
+    codeType: KeyboardEvent.KeyCodeType
+    eventType: KeyboardEvent.KeyEventType
+    keyCode: int
+    key: str
+    text: str
+    def __init__(self, codeType: _Optional[_Union[KeyboardEvent.KeyCodeType, str]] = ..., eventType: _Optional[_Union[KeyboardEvent.KeyEventType, str]] = ..., keyCode: _Optional[int] = ..., key: _Optional[str] = ..., text: _Optional[str] = ...) -> None: ...
+
+class Fingerprint(_message.Message):
+    __slots__ = ("isTouching", "touchId")
+    ISTOUCHING_FIELD_NUMBER: _ClassVar[int]
+    TOUCHID_FIELD_NUMBER: _ClassVar[int]
+    isTouching: bool
+    touchId: int
+    def __init__(self, isTouching: bool = ..., touchId: _Optional[int] = ...) -> None: ...
+
+class GpsState(_message.Message):
+    __slots__ = ("passiveUpdate", "latitude", "longitude", "speed", "bearing", "altitude", "satellites")
+    PASSIVEUPDATE_FIELD_NUMBER: _ClassVar[int]
+    LATITUDE_FIELD_NUMBER: _ClassVar[int]
+    LONGITUDE_FIELD_NUMBER: _ClassVar[int]
+    SPEED_FIELD_NUMBER: _ClassVar[int]
+    BEARING_FIELD_NUMBER: _ClassVar[int]
+    ALTITUDE_FIELD_NUMBER: _ClassVar[int]
+    SATELLITES_FIELD_NUMBER: _ClassVar[int]
+    passiveUpdate: bool
+    latitude: float
+    longitude: float
+    speed: float
+    bearing: float
+    altitude: float
+    satellites: int
+    def __init__(self, passiveUpdate: bool = ..., latitude: _Optional[float] = ..., longitude: _Optional[float] = ..., speed: _Optional[float] = ..., bearing: _Optional[float] = ..., altitude: _Optional[float] = ..., satellites: _Optional[int] = ...) -> None: ...
+
+class BatteryState(_message.Message):
+    __slots__ = ("hasBattery", "isPresent", "charger", "chargeLevel", "health", "status")
+    class BatteryStatus(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNKNOWN: _ClassVar[BatteryState.BatteryStatus]
+        CHARGING: _ClassVar[BatteryState.BatteryStatus]
+        DISCHARGING: _ClassVar[BatteryState.BatteryStatus]
+        NOT_CHARGING: _ClassVar[BatteryState.BatteryStatus]
+        FULL: _ClassVar[BatteryState.BatteryStatus]
+    UNKNOWN: BatteryState.BatteryStatus
+    CHARGING: BatteryState.BatteryStatus
+    DISCHARGING: BatteryState.BatteryStatus
+    NOT_CHARGING: BatteryState.BatteryStatus
+    FULL: BatteryState.BatteryStatus
+    class BatteryCharger(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        NONE: _ClassVar[BatteryState.BatteryCharger]
+        AC: _ClassVar[BatteryState.BatteryCharger]
+        USB: _ClassVar[BatteryState.BatteryCharger]
+        WIRELESS: _ClassVar[BatteryState.BatteryCharger]
+    NONE: BatteryState.BatteryCharger
+    AC: BatteryState.BatteryCharger
+    USB: BatteryState.BatteryCharger
+    WIRELESS: BatteryState.BatteryCharger
+    class BatteryHealth(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        GOOD: _ClassVar[BatteryState.BatteryHealth]
+        FAILED: _ClassVar[BatteryState.BatteryHealth]
+        DEAD: _ClassVar[BatteryState.BatteryHealth]
+        OVERVOLTAGE: _ClassVar[BatteryState.BatteryHealth]
+        OVERHEATED: _ClassVar[BatteryState.BatteryHealth]
+    GOOD: BatteryState.BatteryHealth
+    FAILED: BatteryState.BatteryHealth
+    DEAD: BatteryState.BatteryHealth
+    OVERVOLTAGE: BatteryState.BatteryHealth
+    OVERHEATED: BatteryState.BatteryHealth
+    HASBATTERY_FIELD_NUMBER: _ClassVar[int]
+    ISPRESENT_FIELD_NUMBER: _ClassVar[int]
+    CHARGER_FIELD_NUMBER: _ClassVar[int]
+    CHARGELEVEL_FIELD_NUMBER: _ClassVar[int]
+    HEALTH_FIELD_NUMBER: _ClassVar[int]
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    hasBattery: bool
+    isPresent: bool
+    charger: BatteryState.BatteryCharger
+    chargeLevel: int
+    health: BatteryState.BatteryHealth
+    status: BatteryState.BatteryStatus
+    def __init__(self, hasBattery: bool = ..., isPresent: bool = ..., charger: _Optional[_Union[BatteryState.BatteryCharger, str]] = ..., chargeLevel: _Optional[int] = ..., health: _Optional[_Union[BatteryState.BatteryHealth, str]] = ..., status: _Optional[_Union[BatteryState.BatteryStatus, str]] = ...) -> None: ...
+
+class ImageTransport(_message.Message):
+    __slots__ = ("channel", "handle")
+    class TransportChannel(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        TRANSPORT_CHANNEL_UNSPECIFIED: _ClassVar[ImageTransport.TransportChannel]
+        MMAP: _ClassVar[ImageTransport.TransportChannel]
+    TRANSPORT_CHANNEL_UNSPECIFIED: ImageTransport.TransportChannel
+    MMAP: ImageTransport.TransportChannel
+    CHANNEL_FIELD_NUMBER: _ClassVar[int]
+    HANDLE_FIELD_NUMBER: _ClassVar[int]
+    channel: ImageTransport.TransportChannel
+    handle: str
+    def __init__(self, channel: _Optional[_Union[ImageTransport.TransportChannel, str]] = ..., handle: _Optional[str] = ...) -> None: ...
+
+class FoldedDisplay(_message.Message):
+    __slots__ = ("width", "height", "xOffset", "yOffset")
+    WIDTH_FIELD_NUMBER: _ClassVar[int]
+    HEIGHT_FIELD_NUMBER: _ClassVar[int]
+    XOFFSET_FIELD_NUMBER: _ClassVar[int]
+    YOFFSET_FIELD_NUMBER: _ClassVar[int]
+    width: int
+    height: int
+    xOffset: int
+    yOffset: int
+    def __init__(self, width: _Optional[int] = ..., height: _Optional[int] = ..., xOffset: _Optional[int] = ..., yOffset: _Optional[int] = ...) -> None: ...
+
+class ImageFormat(_message.Message):
+    __slots__ = ("format", "rotation", "width", "height", "display", "transport", "foldedDisplay")
+    class ImgFormat(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        PNG: _ClassVar[ImageFormat.ImgFormat]
+        RGBA8888: _ClassVar[ImageFormat.ImgFormat]
+        RGB888: _ClassVar[ImageFormat.ImgFormat]
+    PNG: ImageFormat.ImgFormat
+    RGBA8888: ImageFormat.ImgFormat
+    RGB888: ImageFormat.ImgFormat
+    FORMAT_FIELD_NUMBER: _ClassVar[int]
+    ROTATION_FIELD_NUMBER: _ClassVar[int]
+    WIDTH_FIELD_NUMBER: _ClassVar[int]
+    HEIGHT_FIELD_NUMBER: _ClassVar[int]
+    DISPLAY_FIELD_NUMBER: _ClassVar[int]
+    TRANSPORT_FIELD_NUMBER: _ClassVar[int]
+    FOLDEDDISPLAY_FIELD_NUMBER: _ClassVar[int]
+    format: ImageFormat.ImgFormat
+    rotation: Rotation
+    width: int
+    height: int
+    display: int
+    transport: ImageTransport
+    foldedDisplay: FoldedDisplay
+    def __init__(self, format: _Optional[_Union[ImageFormat.ImgFormat, str]] = ..., rotation: _Optional[_Union[Rotation, _Mapping]] = ..., width: _Optional[int] = ..., height: _Optional[int] = ..., display: _Optional[int] = ..., transport: _Optional[_Union[ImageTransport, _Mapping]] = ..., foldedDisplay: _Optional[_Union[FoldedDisplay, _Mapping]] = ...) -> None: ...
+
+class Image(_message.Message):
+    __slots__ = ("format", "width", "height", "image", "seq", "timestampUs")
+    FORMAT_FIELD_NUMBER: _ClassVar[int]
+    WIDTH_FIELD_NUMBER: _ClassVar[int]
+    HEIGHT_FIELD_NUMBER: _ClassVar[int]
+    IMAGE_FIELD_NUMBER: _ClassVar[int]
+    SEQ_FIELD_NUMBER: _ClassVar[int]
+    TIMESTAMPUS_FIELD_NUMBER: _ClassVar[int]
+    format: ImageFormat
+    width: int
+    height: int
+    image: bytes
+    seq: int
+    timestampUs: int
+    def __init__(self, format: _Optional[_Union[ImageFormat, _Mapping]] = ..., width: _Optional[int] = ..., height: _Optional[int] = ..., image: _Optional[bytes] = ..., seq: _Optional[int] = ..., timestampUs: _Optional[int] = ...) -> None: ...
+
+class Rotation(_message.Message):
+    __slots__ = ("rotation", "xAxis", "yAxis", "zAxis")
+    class SkinRotation(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        PORTRAIT: _ClassVar[Rotation.SkinRotation]
+        LANDSCAPE: _ClassVar[Rotation.SkinRotation]
+        REVERSE_PORTRAIT: _ClassVar[Rotation.SkinRotation]
+        REVERSE_LANDSCAPE: _ClassVar[Rotation.SkinRotation]
+    PORTRAIT: Rotation.SkinRotation
+    LANDSCAPE: Rotation.SkinRotation
+    REVERSE_PORTRAIT: Rotation.SkinRotation
+    REVERSE_LANDSCAPE: Rotation.SkinRotation
+    ROTATION_FIELD_NUMBER: _ClassVar[int]
+    XAXIS_FIELD_NUMBER: _ClassVar[int]
+    YAXIS_FIELD_NUMBER: _ClassVar[int]
+    ZAXIS_FIELD_NUMBER: _ClassVar[int]
+    rotation: Rotation.SkinRotation
+    xAxis: float
+    yAxis: float
+    zAxis: float
+    def __init__(self, rotation: _Optional[_Union[Rotation.SkinRotation, str]] = ..., xAxis: _Optional[float] = ..., yAxis: _Optional[float] = ..., zAxis: _Optional[float] = ...) -> None: ...
+
+class PhoneCall(_message.Message):
+    __slots__ = ("operation", "number")
+    class Operation(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        InitCall: _ClassVar[PhoneCall.Operation]
+        AcceptCall: _ClassVar[PhoneCall.Operation]
+        RejectCallExplicit: _ClassVar[PhoneCall.Operation]
+        RejectCallBusy: _ClassVar[PhoneCall.Operation]
+        DisconnectCall: _ClassVar[PhoneCall.Operation]
+        PlaceCallOnHold: _ClassVar[PhoneCall.Operation]
+        TakeCallOffHold: _ClassVar[PhoneCall.Operation]
+    InitCall: PhoneCall.Operation
+    AcceptCall: PhoneCall.Operation
+    RejectCallExplicit: PhoneCall.Operation
+    RejectCallBusy: PhoneCall.Operation
+    DisconnectCall: PhoneCall.Operation
+    PlaceCallOnHold: PhoneCall.Operation
+    TakeCallOffHold: PhoneCall.Operation
+    OPERATION_FIELD_NUMBER: _ClassVar[int]
+    NUMBER_FIELD_NUMBER: _ClassVar[int]
+    operation: PhoneCall.Operation
+    number: str
+    def __init__(self, operation: _Optional[_Union[PhoneCall.Operation, str]] = ..., number: _Optional[str] = ...) -> None: ...
+
+class PhoneResponse(_message.Message):
+    __slots__ = ("response",)
+    class Response(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        OK: _ClassVar[PhoneResponse.Response]
+        BadOperation: _ClassVar[PhoneResponse.Response]
+        BadNumber: _ClassVar[PhoneResponse.Response]
+        InvalidAction: _ClassVar[PhoneResponse.Response]
+        ActionFailed: _ClassVar[PhoneResponse.Response]
+        RadioOff: _ClassVar[PhoneResponse.Response]
+    OK: PhoneResponse.Response
+    BadOperation: PhoneResponse.Response
+    BadNumber: PhoneResponse.Response
+    InvalidAction: PhoneResponse.Response
+    ActionFailed: PhoneResponse.Response
+    RadioOff: PhoneResponse.Response
+    RESPONSE_FIELD_NUMBER: _ClassVar[int]
+    response: PhoneResponse.Response
+    def __init__(self, response: _Optional[_Union[PhoneResponse.Response, str]] = ...) -> None: ...
+
+class Entry(_message.Message):
+    __slots__ = ("key", "value")
+    KEY_FIELD_NUMBER: _ClassVar[int]
+    VALUE_FIELD_NUMBER: _ClassVar[int]
+    key: str
+    value: str
+    def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+
+class EntryList(_message.Message):
+    __slots__ = ("entry",)
+    ENTRY_FIELD_NUMBER: _ClassVar[int]
+    entry: _containers.RepeatedCompositeFieldContainer[Entry]
+    def __init__(self, entry: _Optional[_Iterable[_Union[Entry, _Mapping]]] = ...) -> None: ...
+
+class EmulatorStatus(_message.Message):
+    __slots__ = ("version", "uptime", "booted", "vmConfig", "hardwareConfig")
+    VERSION_FIELD_NUMBER: _ClassVar[int]
+    UPTIME_FIELD_NUMBER: _ClassVar[int]
+    BOOTED_FIELD_NUMBER: _ClassVar[int]
+    VMCONFIG_FIELD_NUMBER: _ClassVar[int]
+    HARDWARECONFIG_FIELD_NUMBER: _ClassVar[int]
+    version: str
+    uptime: int
+    booted: bool
+    vmConfig: VmConfiguration
+    hardwareConfig: EntryList
+    def __init__(self, version: _Optional[str] = ..., uptime: _Optional[int] = ..., booted: bool = ..., vmConfig: _Optional[_Union[VmConfiguration, _Mapping]] = ..., hardwareConfig: _Optional[_Union[EntryList, _Mapping]] = ...) -> None: ...
+
+class AudioFormat(_message.Message):
+    __slots__ = ("samplingRate", "channels", "format")
+    class SampleFormat(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        AUD_FMT_U8: _ClassVar[AudioFormat.SampleFormat]
+        AUD_FMT_S16: _ClassVar[AudioFormat.SampleFormat]
+    AUD_FMT_U8: AudioFormat.SampleFormat
+    AUD_FMT_S16: AudioFormat.SampleFormat
+    class Channels(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        Mono: _ClassVar[AudioFormat.Channels]
+        Stereo: _ClassVar[AudioFormat.Channels]
+    Mono: AudioFormat.Channels
+    Stereo: AudioFormat.Channels
+    SAMPLINGRATE_FIELD_NUMBER: _ClassVar[int]
+    CHANNELS_FIELD_NUMBER: _ClassVar[int]
+    FORMAT_FIELD_NUMBER: _ClassVar[int]
+    samplingRate: int
+    channels: AudioFormat.Channels
+    format: AudioFormat.SampleFormat
+    def __init__(self, samplingRate: _Optional[int] = ..., channels: _Optional[_Union[AudioFormat.Channels, str]] = ..., format: _Optional[_Union[AudioFormat.SampleFormat, str]] = ...) -> None: ...
+
+class AudioPacket(_message.Message):
+    __slots__ = ("format", "timestamp", "audio")
+    FORMAT_FIELD_NUMBER: _ClassVar[int]
+    TIMESTAMP_FIELD_NUMBER: _ClassVar[int]
+    AUDIO_FIELD_NUMBER: _ClassVar[int]
+    format: AudioFormat
+    timestamp: int
+    audio: bytes
+    def __init__(self, format: _Optional[_Union[AudioFormat, _Mapping]] = ..., timestamp: _Optional[int] = ..., audio: _Optional[bytes] = ...) -> None: ...
+
+class SmsMessage(_message.Message):
+    __slots__ = ("srcAddress", "text")
+    SRCADDRESS_FIELD_NUMBER: _ClassVar[int]
+    TEXT_FIELD_NUMBER: _ClassVar[int]
+    srcAddress: str
+    text: str
+    def __init__(self, srcAddress: _Optional[str] = ..., text: _Optional[str] = ...) -> None: ...
+
+class DisplayConfiguration(_message.Message):
+    __slots__ = ("width", "height", "dpi", "flags", "display")
+    class DisplayFlags(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        DISPLAYFLAGS_UNSPECIFIED: _ClassVar[DisplayConfiguration.DisplayFlags]
+        VIRTUAL_DISPLAY_FLAG_PUBLIC: _ClassVar[DisplayConfiguration.DisplayFlags]
+        VIRTUAL_DISPLAY_FLAG_PRESENTATION: _ClassVar[DisplayConfiguration.DisplayFlags]
+        VIRTUAL_DISPLAY_FLAG_SECURE: _ClassVar[DisplayConfiguration.DisplayFlags]
+        VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY: _ClassVar[DisplayConfiguration.DisplayFlags]
+        VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR: _ClassVar[DisplayConfiguration.DisplayFlags]
+    DISPLAYFLAGS_UNSPECIFIED: DisplayConfiguration.DisplayFlags
+    VIRTUAL_DISPLAY_FLAG_PUBLIC: DisplayConfiguration.DisplayFlags
+    VIRTUAL_DISPLAY_FLAG_PRESENTATION: DisplayConfiguration.DisplayFlags
+    VIRTUAL_DISPLAY_FLAG_SECURE: DisplayConfiguration.DisplayFlags
+    VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY: DisplayConfiguration.DisplayFlags
+    VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR: DisplayConfiguration.DisplayFlags
+    WIDTH_FIELD_NUMBER: _ClassVar[int]
+    HEIGHT_FIELD_NUMBER: _ClassVar[int]
+    DPI_FIELD_NUMBER: _ClassVar[int]
+    FLAGS_FIELD_NUMBER: _ClassVar[int]
+    DISPLAY_FIELD_NUMBER: _ClassVar[int]
+    width: int
+    height: int
+    dpi: int
+    flags: int
+    display: int
+    def __init__(self, width: _Optional[int] = ..., height: _Optional[int] = ..., dpi: _Optional[int] = ..., flags: _Optional[int] = ..., display: _Optional[int] = ...) -> None: ...
+
+class DisplayConfigurations(_message.Message):
+    __slots__ = ("displays",)
+    DISPLAYS_FIELD_NUMBER: _ClassVar[int]
+    displays: _containers.RepeatedCompositeFieldContainer[DisplayConfiguration]
+    def __init__(self, displays: _Optional[_Iterable[_Union[DisplayConfiguration, _Mapping]]] = ...) -> None: ...
+
+class Notification(_message.Message):
+    __slots__ = ("event",)
+    class EventType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        VIRTUAL_SCENE_CAMERA_INACTIVE: _ClassVar[Notification.EventType]
+        VIRTUAL_SCENE_CAMERA_ACTIVE: _ClassVar[Notification.EventType]
+        DISPLAY_CONFIGURATIONS_CHANGED_UI: _ClassVar[Notification.EventType]
+    VIRTUAL_SCENE_CAMERA_INACTIVE: Notification.EventType
+    VIRTUAL_SCENE_CAMERA_ACTIVE: Notification.EventType
+    DISPLAY_CONFIGURATIONS_CHANGED_UI: Notification.EventType
+    EVENT_FIELD_NUMBER: _ClassVar[int]
+    event: Notification.EventType
+    def __init__(self, event: _Optional[_Union[Notification.EventType, str]] = ...) -> None: ...
+
+class RotationRadian(_message.Message):
+    __slots__ = ("x", "y", "z")
+    X_FIELD_NUMBER: _ClassVar[int]
+    Y_FIELD_NUMBER: _ClassVar[int]
+    Z_FIELD_NUMBER: _ClassVar[int]
+    x: float
+    y: float
+    z: float
+    def __init__(self, x: _Optional[float] = ..., y: _Optional[float] = ..., z: _Optional[float] = ...) -> None: ...
+
+class Velocity(_message.Message):
+    __slots__ = ("x", "y", "z")
+    X_FIELD_NUMBER: _ClassVar[int]
+    Y_FIELD_NUMBER: _ClassVar[int]
+    Z_FIELD_NUMBER: _ClassVar[int]
+    x: float
+    y: float
+    z: float
+    def __init__(self, x: _Optional[float] = ..., y: _Optional[float] = ..., z: _Optional[float] = ...) -> None: ...
+
+class Posture(_message.Message):
+    __slots__ = ("value",)
+    class PostureValue(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        POSTURE_UNKNOWN: _ClassVar[Posture.PostureValue]
+        POSTURE_CLOSED: _ClassVar[Posture.PostureValue]
+        POSTURE_HALF_OPENED: _ClassVar[Posture.PostureValue]
+        POSTURE_OPENED: _ClassVar[Posture.PostureValue]
+        POSTURE_FLIPPED: _ClassVar[Posture.PostureValue]
+        POSTURE_TENT: _ClassVar[Posture.PostureValue]
+        POSTURE_MAX: _ClassVar[Posture.PostureValue]
+    POSTURE_UNKNOWN: Posture.PostureValue
+    POSTURE_CLOSED: Posture.PostureValue
+    POSTURE_HALF_OPENED: Posture.PostureValue
+    POSTURE_OPENED: Posture.PostureValue
+    POSTURE_FLIPPED: Posture.PostureValue
+    POSTURE_TENT: Posture.PostureValue
+    POSTURE_MAX: Posture.PostureValue
+    VALUE_FIELD_NUMBER: _ClassVar[int]
+    value: Posture.PostureValue
+    def __init__(self, value: _Optional[_Union[Posture.PostureValue, str]] = ...) -> None: ...
diff --git a/android_env/proto/emulator_controller_pb2_grpc.py b/android_env/proto/emulator_controller_pb2_grpc.py
new file mode 100644
index 0000000..d062ccd
--- /dev/null
+++ b/android_env/proto/emulator_controller_pb2_grpc.py
@@ -0,0 +1,1677 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+from android_env.proto import emulator_controller_pb2 as android__env_dot_proto_dot_emulator__controller__pb2
+from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/emulator_controller_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
+
+
+class EmulatorControllerStub(object):
+    """An EmulatorController service lets you control the emulator.
+    Note that this is currently an experimental feature, and that the
+    service definition might change without notice. Use at your own risk!
+
+    We use the following rough conventions:
+
+    streamXXX --> streams values XXX (usually for emulator lifetime). Values
+    are updated as soon as they become available.
+    getXXX    --> gets a single value XXX
+    setXXX    --> sets a single value XXX, does not returning state, these
+    usually have an observable lasting side effect.
+    sendXXX   --> send a single event XXX, possibly returning state information.
+    android usually responds to these events.
+    """
+
+    def __init__(self, channel):
+        """Constructor.
+
+        Args:
+            channel: A grpc.Channel.
+        """
+        self.streamSensor = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamSensor',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+                _registered_method=True)
+        self.getSensor = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getSensor',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+                _registered_method=True)
+        self.setSensor = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setSensor',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.setPhysicalModel = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setPhysicalModel',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getPhysicalModel = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getPhysicalModel',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+                _registered_method=True)
+        self.streamPhysicalModel = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamPhysicalModel',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+                _registered_method=True)
+        self.setClipboard = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setClipboard',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getClipboard = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getClipboard',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.FromString,
+                _registered_method=True)
+        self.streamClipboard = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamClipboard',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.FromString,
+                _registered_method=True)
+        self.setBattery = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setBattery',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getBattery = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getBattery',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.FromString,
+                _registered_method=True)
+        self.setGps = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setGps',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.GpsState.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getGps = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getGps',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.GpsState.FromString,
+                _registered_method=True)
+        self.sendFingerprint = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendFingerprint',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Fingerprint.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.sendKey = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendKey',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.KeyboardEvent.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.sendTouch = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendTouch',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.TouchEvent.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.sendMouse = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendMouse',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.MouseEvent.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.sendPhone = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendPhone',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneCall.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.FromString,
+                _registered_method=True)
+        self.sendSms = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/sendSms',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SmsMessage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.FromString,
+                _registered_method=True)
+        self.getStatus = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getStatus',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.EmulatorStatus.FromString,
+                _registered_method=True)
+        self.getScreenshot = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getScreenshot',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Image.FromString,
+                _registered_method=True)
+        self.streamScreenshot = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamScreenshot',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Image.FromString,
+                _registered_method=True)
+        self.streamAudio = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamAudio',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioFormat.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.FromString,
+                _registered_method=True)
+        self.injectAudio = channel.stream_unary(
+                '/android.emulation.control.EmulatorController/injectAudio',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getLogcat = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getLogcat',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+                _registered_method=True)
+        self.streamLogcat = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamLogcat',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+                _registered_method=True)
+        self.setVmState = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setVmState',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.getVmState = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getVmState',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.FromString,
+                _registered_method=True)
+        self.setDisplayConfigurations = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setDisplayConfigurations',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.FromString,
+                _registered_method=True)
+        self.getDisplayConfigurations = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/getDisplayConfigurations',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.FromString,
+                _registered_method=True)
+        self.streamNotification = channel.unary_stream(
+                '/android.emulation.control.EmulatorController/streamNotification',
+                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Notification.FromString,
+                _registered_method=True)
+        self.rotateVirtualSceneCamera = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/rotateVirtualSceneCamera',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.RotationRadian.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.setVirtualSceneCameraVelocity = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setVirtualSceneCameraVelocity',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Velocity.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+        self.setPosture = channel.unary_unary(
+                '/android.emulation.control.EmulatorController/setPosture',
+                request_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Posture.SerializeToString,
+                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                _registered_method=True)
+
+
+class EmulatorControllerServicer(object):
+    """An EmulatorController service lets you control the emulator.
+    Note that this is currently an experimental feature, and that the
+    service definition might change without notice. Use at your own risk!
+
+    We use the following rough conventions:
+
+    streamXXX --> streams values XXX (usually for emulator lifetime). Values
+    are updated as soon as they become available.
+    getXXX    --> gets a single value XXX
+    setXXX    --> sets a single value XXX, does not returning state, these
+    usually have an observable lasting side effect.
+    sendXXX   --> send a single event XXX, possibly returning state information.
+    android usually responds to these events.
+    """
+
+    def streamSensor(self, request, context):
+        """Set the sensor data
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getSensor(self, request, context):
+        """Get the sensor data
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setSensor(self, request, context):
+        """Stream the sensor data
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setPhysicalModel(self, request, context):
+        """Set the physical model, this is likely the one you are
+        looking for when you wish to modify the device state.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getPhysicalModel(self, request, context):
+        """Get the physical model
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamPhysicalModel(self, request, context):
+        """Stream the physical model
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setClipboard(self, request, context):
+        """Atomically set the current primary clipboard data.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getClipboard(self, request, context):
+        """Atomically get the current primary clipboard data.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamClipboard(self, request, context):
+        """Streams the current data on the clipboard. This will immediately produce
+        a result with the current state of the clipboard after which the stream
+        will block and wait until a new clip event is available from the guest.
+        Calling the setClipboard method above will not result in generating a clip
+        event. It is possible to lose clipboard events if the clipboard updates
+        very rapidly.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setBattery(self, request, context):
+        """Set the battery to the given state.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getBattery(self, request, context):
+        """Get the battery to the given state.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setGps(self, request, context):
+        """Set the state of the gps, gps support will only work
+        properly if:
+
+        - no location ui is active. That is the emulator
+        is launched in headless mode (-no-window) or the location
+        ui is disabled (-no-location-ui).
+        - the passiveUpdate is set to false. Setting this to false
+        will disable/break the LocationUI.
+
+        Keep in mind that android usually only samples the gps at 1 hz.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getGps(self, request, context):
+        """Gets the latest gps state as delivered by the setGps call, or location ui
+        if active.
+
+        Note: this is not necessarily the actual gps coordinate visible at the
+        time, due to gps sample frequency (usually 1hz).
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendFingerprint(self, request, context):
+        """Simulate a touch event on the finger print sensor.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendKey(self, request, context):
+        """Send a keyboard event. Translating the event.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendTouch(self, request, context):
+        """Send touch events. Note that mouse events can be simulated by touch events.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendMouse(self, request, context):
+        """Send mouse events.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendPhone(self, request, context):
+        """Make a phone call.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def sendSms(self, request, context):
+        """Sends an sms message to the emulator.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getStatus(self, request, context):
+        """Retrieve the status of the emulator. This will contain general
+        hardware information, and whether the device has booted or not.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getScreenshot(self, request, context):
+        """Gets an individual screenshot in the desired format.
+
+        The image will be scaled to the desired ImageFormat, while maintaining
+        the aspect ratio. The returned image will never exceed the provided width
+        and height. Not setting the width or height (i.e. they are 0) will result
+        in using the device width and height.
+
+        The resulting image will be properly oriented and can be displayed
+        directly without post processing. For example, if the device has a
+        1080x1920 screen and is in landscape mode and called with no width or
+        height parameter, it will return an 1920x1080 image.
+
+        This method will return an empty image if the display is not visible.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamScreenshot(self, request, context):
+        """Streams a series of screenshots in the desired format.
+        A new frame will be delivered whenever the device produces a new frame.
+        (Beware that this can produce a significant amount of data, and that
+        certain translations are (png transform) can be costly).
+
+        If the requested display is not visible it will send a single empty image
+        and wait start producing images once the display becomes active, again
+        producing a single empty image when the display becomes inactive.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamAudio(self, request, context):
+        """Streams a series of audio packets in the desired format.
+        A new frame will be delivered whenever the emulated device
+        produces a new audio frame. You can expect packets to be
+        delivered in intervals of 20-30ms.
+
+        Be aware that this can block when the emulator does not
+        produce any audio whatsoever!
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def injectAudio(self, request_iterator, context):
+        """Injects a series of audio packets to the android microphone.
+        A new frame will be delivered whenever the emulated device
+        requests a new audio frame. Audio is usually delivered at a rate
+        that the emulator is requesting frames. Audio will be stored in a
+        temporary buffer that can hold 500ms of audio.
+
+        Note: Currently the emulator will downsample to 16khz.
+
+        -  INVALID_ARGUMENT (code 3) The sampling rate was too high
+        -  INVALID_ARGUMENT (code 3) The audio packet was too large to handle.
+        -  FAILED_PRECONDITION (code 9) If there was a microphone registered
+        already.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getLogcat(self, request, context):
+        """Returns the last 128Kb of logcat output from the emulator
+        Note that parsed logcat messages are only available after L (Api >23).
+        it is possible that the logcat buffer gets overwritten, or falls behind.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamLogcat(self, request, context):
+        """Streams the logcat output from the emulator. The first call
+        can retrieve up to 128Kb. This call will not return.
+        Note that parsed logcat messages are only available after L (Api >23)
+        it is possible that the logcat buffer gets overwritten, or falls behind.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setVmState(self, request, context):
+        """Transition the virtual machine to the desired state. Note that
+        some states are only observable. For example you cannot transition
+        to the error state.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getVmState(self, request, context):
+        """Gets the state of the virtual machine.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setDisplayConfigurations(self, request, context):
+        """Atomically changes the current multi-display configuration.
+        After this call the given display configurations will be activated. You
+        can only update secondary displays. Displays with id 0 will be ignored.
+
+        This call can result in the removal or addition of secondary displays, the
+        final display state can be observed by the returned configuration.
+
+        The following gRPC error codes can be returned:
+        -  FAILED_PRECONDITION (code 9) if the AVD does not support a configurable
+        secondary display.
+        -  INVALID_ARGUMENT (code 3) if:
+        - The same display id is defined multiple times.
+        - The display configurations are outside valid ranges
+        (see DisplayConfiguration)
+        -  INTERNAL (code 13) if there was an internal emulator failure.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def getDisplayConfigurations(self, request, context):
+        """Returns all currently valid logical displays.
+        The gRPC error code FAILED_PRECONDITION (code 9) is returned if the AVD
+        does not support a configurable secondary display.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def streamNotification(self, request, context):
+        """Notifies client of the following changes:
+
+        - Virtual scene camera status change.
+        - Display configuration changes from extended ui. This will only be fired
+        if the user makes modifications the extended displays through the
+        extended control tab.
+
+        Note that this method will send the initial virtual scene state
+        immediately.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def rotateVirtualSceneCamera(self, request, context):
+        """RotationRadian is relative to the camera's current orientation.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setVirtualSceneCameraVelocity(self, request, context):
+        """Velocity is absolute
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def setPosture(self, request, context):
+        """Set foldable posture
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+
+def add_EmulatorControllerServicer_to_server(servicer, server):
+    rpc_method_handlers = {
+            'streamSensor': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamSensor,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+            ),
+            'getSensor': grpc.unary_unary_rpc_method_handler(
+                    servicer.getSensor,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+            ),
+            'setSensor': grpc.unary_unary_rpc_method_handler(
+                    servicer.setSensor,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'setPhysicalModel': grpc.unary_unary_rpc_method_handler(
+                    servicer.setPhysicalModel,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getPhysicalModel': grpc.unary_unary_rpc_method_handler(
+                    servicer.getPhysicalModel,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+            ),
+            'streamPhysicalModel': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamPhysicalModel,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+            ),
+            'setClipboard': grpc.unary_unary_rpc_method_handler(
+                    servicer.setClipboard,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getClipboard': grpc.unary_unary_rpc_method_handler(
+                    servicer.getClipboard,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.SerializeToString,
+            ),
+            'streamClipboard': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamClipboard,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.ClipData.SerializeToString,
+            ),
+            'setBattery': grpc.unary_unary_rpc_method_handler(
+                    servicer.setBattery,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getBattery': grpc.unary_unary_rpc_method_handler(
+                    servicer.getBattery,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.SerializeToString,
+            ),
+            'setGps': grpc.unary_unary_rpc_method_handler(
+                    servicer.setGps,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.GpsState.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getGps': grpc.unary_unary_rpc_method_handler(
+                    servicer.getGps,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.GpsState.SerializeToString,
+            ),
+            'sendFingerprint': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendFingerprint,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Fingerprint.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'sendKey': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendKey,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.KeyboardEvent.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'sendTouch': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendTouch,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.TouchEvent.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'sendMouse': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendMouse,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.MouseEvent.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'sendPhone': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendPhone,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneCall.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.SerializeToString,
+            ),
+            'sendSms': grpc.unary_unary_rpc_method_handler(
+                    servicer.sendSms,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.SmsMessage.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.SerializeToString,
+            ),
+            'getStatus': grpc.unary_unary_rpc_method_handler(
+                    servicer.getStatus,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.EmulatorStatus.SerializeToString,
+            ),
+            'getScreenshot': grpc.unary_unary_rpc_method_handler(
+                    servicer.getScreenshot,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Image.SerializeToString,
+            ),
+            'streamScreenshot': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamScreenshot,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Image.SerializeToString,
+            ),
+            'streamAudio': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamAudio,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioFormat.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.SerializeToString,
+            ),
+            'injectAudio': grpc.stream_unary_rpc_method_handler(
+                    servicer.injectAudio,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getLogcat': grpc.unary_unary_rpc_method_handler(
+                    servicer.getLogcat,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+            ),
+            'streamLogcat': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamLogcat,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+            ),
+            'setVmState': grpc.unary_unary_rpc_method_handler(
+                    servicer.setVmState,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'getVmState': grpc.unary_unary_rpc_method_handler(
+                    servicer.getVmState,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.SerializeToString,
+            ),
+            'setDisplayConfigurations': grpc.unary_unary_rpc_method_handler(
+                    servicer.setDisplayConfigurations,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.SerializeToString,
+            ),
+            'getDisplayConfigurations': grpc.unary_unary_rpc_method_handler(
+                    servicer.getDisplayConfigurations,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.SerializeToString,
+            ),
+            'streamNotification': grpc.unary_stream_rpc_method_handler(
+                    servicer.streamNotification,
+                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+                    response_serializer=android__env_dot_proto_dot_emulator__controller__pb2.Notification.SerializeToString,
+            ),
+            'rotateVirtualSceneCamera': grpc.unary_unary_rpc_method_handler(
+                    servicer.rotateVirtualSceneCamera,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.RotationRadian.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'setVirtualSceneCameraVelocity': grpc.unary_unary_rpc_method_handler(
+                    servicer.setVirtualSceneCameraVelocity,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Velocity.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+            'setPosture': grpc.unary_unary_rpc_method_handler(
+                    servicer.setPosture,
+                    request_deserializer=android__env_dot_proto_dot_emulator__controller__pb2.Posture.FromString,
+                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            ),
+    }
+    generic_handler = grpc.method_handlers_generic_handler(
+            'android.emulation.control.EmulatorController', rpc_method_handlers)
+    server.add_generic_rpc_handlers((generic_handler,))
+    server.add_registered_method_handlers('android.emulation.control.EmulatorController', rpc_method_handlers)
+
+
+ # This class is part of an EXPERIMENTAL API.
+class EmulatorController(object):
+    """An EmulatorController service lets you control the emulator.
+    Note that this is currently an experimental feature, and that the
+    service definition might change without notice. Use at your own risk!
+
+    We use the following rough conventions:
+
+    streamXXX --> streams values XXX (usually for emulator lifetime). Values
+    are updated as soon as they become available.
+    getXXX    --> gets a single value XXX
+    setXXX    --> sets a single value XXX, does not returning state, these
+    usually have an observable lasting side effect.
+    sendXXX   --> send a single event XXX, possibly returning state information.
+    android usually responds to these events.
+    """
+
+    @staticmethod
+    def streamSensor(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamSensor',
+            android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getSensor(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getSensor',
+            android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setSensor(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setSensor',
+            android__env_dot_proto_dot_emulator__controller__pb2.SensorValue.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setPhysicalModel(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setPhysicalModel',
+            android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getPhysicalModel(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getPhysicalModel',
+            android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamPhysicalModel(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamPhysicalModel',
+            android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.PhysicalModelValue.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setClipboard(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setClipboard',
+            android__env_dot_proto_dot_emulator__controller__pb2.ClipData.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getClipboard(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getClipboard',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.ClipData.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamClipboard(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamClipboard',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.ClipData.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setBattery(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setBattery',
+            android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getBattery(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getBattery',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.BatteryState.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setGps(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setGps',
+            android__env_dot_proto_dot_emulator__controller__pb2.GpsState.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getGps(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getGps',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.GpsState.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendFingerprint(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendFingerprint',
+            android__env_dot_proto_dot_emulator__controller__pb2.Fingerprint.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendKey(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendKey',
+            android__env_dot_proto_dot_emulator__controller__pb2.KeyboardEvent.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendTouch(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendTouch',
+            android__env_dot_proto_dot_emulator__controller__pb2.TouchEvent.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendMouse(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendMouse',
+            android__env_dot_proto_dot_emulator__controller__pb2.MouseEvent.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendPhone(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendPhone',
+            android__env_dot_proto_dot_emulator__controller__pb2.PhoneCall.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def sendSms(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/sendSms',
+            android__env_dot_proto_dot_emulator__controller__pb2.SmsMessage.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.PhoneResponse.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getStatus(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getStatus',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.EmulatorStatus.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getScreenshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getScreenshot',
+            android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.Image.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamScreenshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamScreenshot',
+            android__env_dot_proto_dot_emulator__controller__pb2.ImageFormat.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.Image.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamAudio(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamAudio',
+            android__env_dot_proto_dot_emulator__controller__pb2.AudioFormat.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def injectAudio(request_iterator,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.stream_unary(
+            request_iterator,
+            target,
+            '/android.emulation.control.EmulatorController/injectAudio',
+            android__env_dot_proto_dot_emulator__controller__pb2.AudioPacket.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getLogcat(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getLogcat',
+            android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamLogcat(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamLogcat',
+            android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.LogMessage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setVmState(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setVmState',
+            android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getVmState(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getVmState',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.VmRunState.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setDisplayConfigurations(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setDisplayConfigurations',
+            android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def getDisplayConfigurations(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/getDisplayConfigurations',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.DisplayConfigurations.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def streamNotification(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/streamNotification',
+            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
+            android__env_dot_proto_dot_emulator__controller__pb2.Notification.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def rotateVirtualSceneCamera(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/rotateVirtualSceneCamera',
+            android__env_dot_proto_dot_emulator__controller__pb2.RotationRadian.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setVirtualSceneCameraVelocity(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setVirtualSceneCameraVelocity',
+            android__env_dot_proto_dot_emulator__controller__pb2.Velocity.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def setPosture(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.EmulatorController/setPosture',
+            android__env_dot_proto_dot_emulator__controller__pb2.Posture.SerializeToString,
+            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
diff --git a/android_env/proto/snapshot_pb2.py b/android_env/proto/snapshot_pb2.py
new file mode 100644
index 0000000..63afc86
--- /dev/null
+++ b/android_env/proto/snapshot_pb2.py
@@ -0,0 +1,47 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/snapshot.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/snapshot.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n android_env/proto/snapshot.proto\x12\x11\x65mulator_snapshot\"\xaf\x03\n\x05Image\x12+\n\x04type\x18\x01 \x01(\x0e\x32\x1d.emulator_snapshot.Image.Type\x12\x0c\n\x04path\x18\x02 \x01(\t\x12\x0f\n\x07present\x18\x03 \x01(\x08\x12\x0c\n\x04size\x18\x04 \x01(\x03\x12\x19\n\x11modification_time\x18\x05 \x01(\x03\"\xb0\x02\n\x04Type\x12\x16\n\x12IMAGE_TYPE_UNKNOWN\x10\x00\x12\x15\n\x11IMAGE_TYPE_KERNEL\x10\x01\x12\x1c\n\x18IMAGE_TYPE_KERNEL_RANCHU\x10\x02\x12\x15\n\x11IMAGE_TYPE_SYSTEM\x10\x03\x12\x1a\n\x16IMAGE_TYPE_SYSTEM_COPY\x10\x04\x12\x13\n\x0fIMAGE_TYPE_DATA\x10\x05\x12\x18\n\x14IMAGE_TYPE_DATA_COPY\x10\x06\x12\x16\n\x12IMAGE_TYPE_RAMDISK\x10\x07\x12\x15\n\x11IMAGE_TYPE_SDCARD\x10\x08\x12\x14\n\x10IMAGE_TYPE_CACHE\x10\t\x12\x15\n\x11IMAGE_TYPE_VENDOR\x10\n\x12\x1d\n\x19IMAGE_TYPE_ENCRYPTION_KEY\x10\x0b\".\n\x04Host\x12\x12\n\ngpu_driver\x18\x04 \x01(\t\x12\x12\n\nhypervisor\x18\x05 \x01(\x05\"m\n\x06\x43onfig\x12\x18\n\x10\x65nabled_features\x18\x01 \x03(\x05\x12\x19\n\x11selected_renderer\x18\x02 \x01(\x05\x12\x16\n\x0e\x63pu_core_count\x18\x03 \x01(\x05\x12\x16\n\x0eram_size_bytes\x18\x04 \x01(\x03\"M\n\tSaveStats\x12\x13\n\x0bincremental\x18\x01 \x01(\r\x12\x10\n\x08\x64uration\x18\x02 \x01(\x04\x12\x19\n\x11ram_changed_bytes\x18\x03 \x01(\x04\"\x8d\x04\n\x08Snapshot\x12\x0f\n\x07version\x18\x01 \x01(\x05\x12\x15\n\rcreation_time\x18\x02 \x01(\x03\x12(\n\x06images\x18\x03 \x03(\x0b\x32\x18.emulator_snapshot.Image\x12%\n\x04host\x18\x04 \x01(\x0b\x32\x17.emulator_snapshot.Host\x12)\n\x06\x63onfig\x18\x05 \x01(\x0b\x32\x19.emulator_snapshot.Config\x12\"\n\x1a\x66\x61iled_to_load_reason_code\x18\x07 \x01(\x03\x12$\n\x1cguest_data_partition_mounted\x18\x08 \x01(\x08\x12\x10\n\x08rotation\x18\t \x01(\x05\x12\x15\n\rinvalid_loads\x18\n \x01(\x05\x12\x18\n\x10successful_loads\x18\x0b \x01(\x05\x12\x14\n\x0clogical_name\x18\x0c \x01(\t\x12\x0e\n\x06parent\x18\r \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x0e \x01(\t\x12\x30\n\nsave_stats\x18\x0f \x03(\x0b\x32\x1c.emulator_snapshot.SaveStats\x12\x0e\n\x06\x66olded\x18\x10 \x01(\x08\x12\x19\n\x11launch_parameters\x18\x11 \x03(\t\x12\x19\n\x11\x65mulator_build_id\x18\x12 \x01(\t\x12\x1d\n\x15system_image_build_id\x18\x13 \x01(\tB\x1f\n\x1d\x63om.android.emulator.snapshot')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.snapshot_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n\035com.android.emulator.snapshot'
+  _globals['_IMAGE']._serialized_start=56
+  _globals['_IMAGE']._serialized_end=487
+  _globals['_IMAGE_TYPE']._serialized_start=183
+  _globals['_IMAGE_TYPE']._serialized_end=487
+  _globals['_HOST']._serialized_start=489
+  _globals['_HOST']._serialized_end=535
+  _globals['_CONFIG']._serialized_start=537
+  _globals['_CONFIG']._serialized_end=646
+  _globals['_SAVESTATS']._serialized_start=648
+  _globals['_SAVESTATS']._serialized_end=725
+  _globals['_SNAPSHOT']._serialized_start=728
+  _globals['_SNAPSHOT']._serialized_end=1253
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/snapshot_pb2.pyi b/android_env/proto/snapshot_pb2.pyi
new file mode 100644
index 0000000..c429012
--- /dev/null
+++ b/android_env/proto/snapshot_pb2.pyi
@@ -0,0 +1,118 @@
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class Image(_message.Message):
+    __slots__ = ("type", "path", "present", "size", "modification_time")
+    class Type(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        IMAGE_TYPE_UNKNOWN: _ClassVar[Image.Type]
+        IMAGE_TYPE_KERNEL: _ClassVar[Image.Type]
+        IMAGE_TYPE_KERNEL_RANCHU: _ClassVar[Image.Type]
+        IMAGE_TYPE_SYSTEM: _ClassVar[Image.Type]
+        IMAGE_TYPE_SYSTEM_COPY: _ClassVar[Image.Type]
+        IMAGE_TYPE_DATA: _ClassVar[Image.Type]
+        IMAGE_TYPE_DATA_COPY: _ClassVar[Image.Type]
+        IMAGE_TYPE_RAMDISK: _ClassVar[Image.Type]
+        IMAGE_TYPE_SDCARD: _ClassVar[Image.Type]
+        IMAGE_TYPE_CACHE: _ClassVar[Image.Type]
+        IMAGE_TYPE_VENDOR: _ClassVar[Image.Type]
+        IMAGE_TYPE_ENCRYPTION_KEY: _ClassVar[Image.Type]
+    IMAGE_TYPE_UNKNOWN: Image.Type
+    IMAGE_TYPE_KERNEL: Image.Type
+    IMAGE_TYPE_KERNEL_RANCHU: Image.Type
+    IMAGE_TYPE_SYSTEM: Image.Type
+    IMAGE_TYPE_SYSTEM_COPY: Image.Type
+    IMAGE_TYPE_DATA: Image.Type
+    IMAGE_TYPE_DATA_COPY: Image.Type
+    IMAGE_TYPE_RAMDISK: Image.Type
+    IMAGE_TYPE_SDCARD: Image.Type
+    IMAGE_TYPE_CACHE: Image.Type
+    IMAGE_TYPE_VENDOR: Image.Type
+    IMAGE_TYPE_ENCRYPTION_KEY: Image.Type
+    TYPE_FIELD_NUMBER: _ClassVar[int]
+    PATH_FIELD_NUMBER: _ClassVar[int]
+    PRESENT_FIELD_NUMBER: _ClassVar[int]
+    SIZE_FIELD_NUMBER: _ClassVar[int]
+    MODIFICATION_TIME_FIELD_NUMBER: _ClassVar[int]
+    type: Image.Type
+    path: str
+    present: bool
+    size: int
+    modification_time: int
+    def __init__(self, type: _Optional[_Union[Image.Type, str]] = ..., path: _Optional[str] = ..., present: bool = ..., size: _Optional[int] = ..., modification_time: _Optional[int] = ...) -> None: ...
+
+class Host(_message.Message):
+    __slots__ = ("gpu_driver", "hypervisor")
+    GPU_DRIVER_FIELD_NUMBER: _ClassVar[int]
+    HYPERVISOR_FIELD_NUMBER: _ClassVar[int]
+    gpu_driver: str
+    hypervisor: int
+    def __init__(self, gpu_driver: _Optional[str] = ..., hypervisor: _Optional[int] = ...) -> None: ...
+
+class Config(_message.Message):
+    __slots__ = ("enabled_features", "selected_renderer", "cpu_core_count", "ram_size_bytes")
+    ENABLED_FEATURES_FIELD_NUMBER: _ClassVar[int]
+    SELECTED_RENDERER_FIELD_NUMBER: _ClassVar[int]
+    CPU_CORE_COUNT_FIELD_NUMBER: _ClassVar[int]
+    RAM_SIZE_BYTES_FIELD_NUMBER: _ClassVar[int]
+    enabled_features: _containers.RepeatedScalarFieldContainer[int]
+    selected_renderer: int
+    cpu_core_count: int
+    ram_size_bytes: int
+    def __init__(self, enabled_features: _Optional[_Iterable[int]] = ..., selected_renderer: _Optional[int] = ..., cpu_core_count: _Optional[int] = ..., ram_size_bytes: _Optional[int] = ...) -> None: ...
+
+class SaveStats(_message.Message):
+    __slots__ = ("incremental", "duration", "ram_changed_bytes")
+    INCREMENTAL_FIELD_NUMBER: _ClassVar[int]
+    DURATION_FIELD_NUMBER: _ClassVar[int]
+    RAM_CHANGED_BYTES_FIELD_NUMBER: _ClassVar[int]
+    incremental: int
+    duration: int
+    ram_changed_bytes: int
+    def __init__(self, incremental: _Optional[int] = ..., duration: _Optional[int] = ..., ram_changed_bytes: _Optional[int] = ...) -> None: ...
+
+class Snapshot(_message.Message):
+    __slots__ = ("version", "creation_time", "images", "host", "config", "failed_to_load_reason_code", "guest_data_partition_mounted", "rotation", "invalid_loads", "successful_loads", "logical_name", "parent", "description", "save_stats", "folded", "launch_parameters", "emulator_build_id", "system_image_build_id")
+    VERSION_FIELD_NUMBER: _ClassVar[int]
+    CREATION_TIME_FIELD_NUMBER: _ClassVar[int]
+    IMAGES_FIELD_NUMBER: _ClassVar[int]
+    HOST_FIELD_NUMBER: _ClassVar[int]
+    CONFIG_FIELD_NUMBER: _ClassVar[int]
+    FAILED_TO_LOAD_REASON_CODE_FIELD_NUMBER: _ClassVar[int]
+    GUEST_DATA_PARTITION_MOUNTED_FIELD_NUMBER: _ClassVar[int]
+    ROTATION_FIELD_NUMBER: _ClassVar[int]
+    INVALID_LOADS_FIELD_NUMBER: _ClassVar[int]
+    SUCCESSFUL_LOADS_FIELD_NUMBER: _ClassVar[int]
+    LOGICAL_NAME_FIELD_NUMBER: _ClassVar[int]
+    PARENT_FIELD_NUMBER: _ClassVar[int]
+    DESCRIPTION_FIELD_NUMBER: _ClassVar[int]
+    SAVE_STATS_FIELD_NUMBER: _ClassVar[int]
+    FOLDED_FIELD_NUMBER: _ClassVar[int]
+    LAUNCH_PARAMETERS_FIELD_NUMBER: _ClassVar[int]
+    EMULATOR_BUILD_ID_FIELD_NUMBER: _ClassVar[int]
+    SYSTEM_IMAGE_BUILD_ID_FIELD_NUMBER: _ClassVar[int]
+    version: int
+    creation_time: int
+    images: _containers.RepeatedCompositeFieldContainer[Image]
+    host: Host
+    config: Config
+    failed_to_load_reason_code: int
+    guest_data_partition_mounted: bool
+    rotation: int
+    invalid_loads: int
+    successful_loads: int
+    logical_name: str
+    parent: str
+    description: str
+    save_stats: _containers.RepeatedCompositeFieldContainer[SaveStats]
+    folded: bool
+    launch_parameters: _containers.RepeatedScalarFieldContainer[str]
+    emulator_build_id: str
+    system_image_build_id: str
+    def __init__(self, version: _Optional[int] = ..., creation_time: _Optional[int] = ..., images: _Optional[_Iterable[_Union[Image, _Mapping]]] = ..., host: _Optional[_Union[Host, _Mapping]] = ..., config: _Optional[_Union[Config, _Mapping]] = ..., failed_to_load_reason_code: _Optional[int] = ..., guest_data_partition_mounted: bool = ..., rotation: _Optional[int] = ..., invalid_loads: _Optional[int] = ..., successful_loads: _Optional[int] = ..., logical_name: _Optional[str] = ..., parent: _Optional[str] = ..., description: _Optional[str] = ..., save_stats: _Optional[_Iterable[_Union[SaveStats, _Mapping]]] = ..., folded: bool = ..., launch_parameters: _Optional[_Iterable[str]] = ..., emulator_build_id: _Optional[str] = ..., system_image_build_id: _Optional[str] = ...) -> None: ...
diff --git a/android_env/proto/snapshot_pb2_grpc.py b/android_env/proto/snapshot_pb2_grpc.py
new file mode 100644
index 0000000..f0df812
--- /dev/null
+++ b/android_env/proto/snapshot_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/snapshot_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/snapshot_service_pb2.py b/android_env/proto/snapshot_service_pb2.py
new file mode 100644
index 0000000..7109918
--- /dev/null
+++ b/android_env/proto/snapshot_service_pb2.py
@@ -0,0 +1,54 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/snapshot_service.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/snapshot_service.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto import snapshot_pb2 as android__env_dot_proto_dot_snapshot__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(android_env/proto/snapshot_service.proto\x12\x19\x61ndroid.emulation.control\x1a android_env/proto/snapshot.proto\"\xd3\x01\n\x0fSnapshotPackage\x12\x13\n\x0bsnapshot_id\x18\x01 \x01(\t\x12\x0f\n\x07payload\x18\x02 \x01(\x0c\x12\x0f\n\x07success\x18\x03 \x01(\x08\x12\x0b\n\x03\x65rr\x18\x04 \x01(\x0c\x12\x41\n\x06\x66ormat\x18\x05 \x01(\x0e\x32\x31.android.emulation.control.SnapshotPackage.Format\x12\x0c\n\x04path\x18\x06 \x01(\t\"+\n\x06\x46ormat\x12\t\n\x05TARGZ\x10\x00\x12\x07\n\x03TAR\x10\x01\x12\r\n\tDIRECTORY\x10\x02\"\x87\x01\n\x0eSnapshotFilter\x12J\n\x0cstatusFilter\x18\x01 \x01(\x0e\x32\x34.android.emulation.control.SnapshotFilter.LoadStatus\")\n\nLoadStatus\x12\x12\n\x0e\x43ompatibleOnly\x10\x00\x12\x07\n\x03\x41ll\x10\x01\"\xe5\x01\n\x0fSnapshotDetails\x12\x13\n\x0bsnapshot_id\x18\x01 \x01(\t\x12,\n\x07\x64\x65tails\x18\x02 \x01(\x0b\x32\x1b.emulator_snapshot.Snapshot\x12\x45\n\x06status\x18\x03 \x01(\x0e\x32\x35.android.emulation.control.SnapshotDetails.LoadStatus\x12\x0c\n\x04size\x18\x04 \x01(\x04\":\n\nLoadStatus\x12\x0e\n\nCompatible\x10\x00\x12\x10\n\x0cIncompatible\x10\x01\x12\n\n\x06Loaded\x10\x02\"M\n\x0cSnapshotList\x12=\n\tsnapshots\x18\x01 \x03(\x0b\x32*.android.emulation.control.SnapshotDetails\"\x80\x01\n\x0cIceboxTarget\x12\x0b\n\x03pid\x18\x01 \x01(\x03\x12\x14\n\x0cpackage_name\x18\x02 \x01(\t\x12\x13\n\x0bsnapshot_id\x18\x03 \x01(\t\x12\x0e\n\x06\x66\x61iled\x18\x04 \x01(\x08\x12\x0b\n\x03\x65rr\x18\x05 \x01(\t\x12\x1b\n\x13max_snapshot_number\x18\x06 \x01(\x05\x32\xf4\x05\n\x0fSnapshotService\x12\x65\n\rListSnapshots\x12).android.emulation.control.SnapshotFilter\x1a\'.android.emulation.control.SnapshotList\"\x00\x12j\n\x0cPullSnapshot\x12*.android.emulation.control.SnapshotPackage\x1a*.android.emulation.control.SnapshotPackage\"\x00\x30\x01\x12j\n\x0cPushSnapshot\x12*.android.emulation.control.SnapshotPackage\x1a*.android.emulation.control.SnapshotPackage\"\x00(\x01\x12h\n\x0cLoadSnapshot\x12*.android.emulation.control.SnapshotPackage\x1a*.android.emulation.control.SnapshotPackage\"\x00\x12h\n\x0cSaveSnapshot\x12*.android.emulation.control.SnapshotPackage\x1a*.android.emulation.control.SnapshotPackage\"\x00\x12j\n\x0e\x44\x65leteSnapshot\x12*.android.emulation.control.SnapshotPackage\x1a*.android.emulation.control.SnapshotPackage\"\x00\x12\x62\n\x0cTrackProcess\x12\'.android.emulation.control.IceboxTarget\x1a\'.android.emulation.control.IceboxTarget\"\x00\x42&\n\x1c\x63om.android.emulator.controlP\x01\xa2\x02\x03\x41\x45\x43\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.snapshot_service_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'\n\034com.android.emulator.controlP\001\242\002\003AEC'
+  _globals['_SNAPSHOTPACKAGE']._serialized_start=106
+  _globals['_SNAPSHOTPACKAGE']._serialized_end=317
+  _globals['_SNAPSHOTPACKAGE_FORMAT']._serialized_start=274
+  _globals['_SNAPSHOTPACKAGE_FORMAT']._serialized_end=317
+  _globals['_SNAPSHOTFILTER']._serialized_start=320
+  _globals['_SNAPSHOTFILTER']._serialized_end=455
+  _globals['_SNAPSHOTFILTER_LOADSTATUS']._serialized_start=414
+  _globals['_SNAPSHOTFILTER_LOADSTATUS']._serialized_end=455
+  _globals['_SNAPSHOTDETAILS']._serialized_start=458
+  _globals['_SNAPSHOTDETAILS']._serialized_end=687
+  _globals['_SNAPSHOTDETAILS_LOADSTATUS']._serialized_start=629
+  _globals['_SNAPSHOTDETAILS_LOADSTATUS']._serialized_end=687
+  _globals['_SNAPSHOTLIST']._serialized_start=689
+  _globals['_SNAPSHOTLIST']._serialized_end=766
+  _globals['_ICEBOXTARGET']._serialized_start=769
+  _globals['_ICEBOXTARGET']._serialized_end=897
+  _globals['_SNAPSHOTSERVICE']._serialized_start=900
+  _globals['_SNAPSHOTSERVICE']._serialized_end=1656
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/snapshot_service_pb2.pyi b/android_env/proto/snapshot_service_pb2.pyi
new file mode 100644
index 0000000..62781af
--- /dev/null
+++ b/android_env/proto/snapshot_service_pb2.pyi
@@ -0,0 +1,87 @@
+from android_env.proto import snapshot_pb2 as _snapshot_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class SnapshotPackage(_message.Message):
+    __slots__ = ("snapshot_id", "payload", "success", "err", "format", "path")
+    class Format(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        TARGZ: _ClassVar[SnapshotPackage.Format]
+        TAR: _ClassVar[SnapshotPackage.Format]
+        DIRECTORY: _ClassVar[SnapshotPackage.Format]
+    TARGZ: SnapshotPackage.Format
+    TAR: SnapshotPackage.Format
+    DIRECTORY: SnapshotPackage.Format
+    SNAPSHOT_ID_FIELD_NUMBER: _ClassVar[int]
+    PAYLOAD_FIELD_NUMBER: _ClassVar[int]
+    SUCCESS_FIELD_NUMBER: _ClassVar[int]
+    ERR_FIELD_NUMBER: _ClassVar[int]
+    FORMAT_FIELD_NUMBER: _ClassVar[int]
+    PATH_FIELD_NUMBER: _ClassVar[int]
+    snapshot_id: str
+    payload: bytes
+    success: bool
+    err: bytes
+    format: SnapshotPackage.Format
+    path: str
+    def __init__(self, snapshot_id: _Optional[str] = ..., payload: _Optional[bytes] = ..., success: bool = ..., err: _Optional[bytes] = ..., format: _Optional[_Union[SnapshotPackage.Format, str]] = ..., path: _Optional[str] = ...) -> None: ...
+
+class SnapshotFilter(_message.Message):
+    __slots__ = ("statusFilter",)
+    class LoadStatus(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        CompatibleOnly: _ClassVar[SnapshotFilter.LoadStatus]
+        All: _ClassVar[SnapshotFilter.LoadStatus]
+    CompatibleOnly: SnapshotFilter.LoadStatus
+    All: SnapshotFilter.LoadStatus
+    STATUSFILTER_FIELD_NUMBER: _ClassVar[int]
+    statusFilter: SnapshotFilter.LoadStatus
+    def __init__(self, statusFilter: _Optional[_Union[SnapshotFilter.LoadStatus, str]] = ...) -> None: ...
+
+class SnapshotDetails(_message.Message):
+    __slots__ = ("snapshot_id", "details", "status", "size")
+    class LoadStatus(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        Compatible: _ClassVar[SnapshotDetails.LoadStatus]
+        Incompatible: _ClassVar[SnapshotDetails.LoadStatus]
+        Loaded: _ClassVar[SnapshotDetails.LoadStatus]
+    Compatible: SnapshotDetails.LoadStatus
+    Incompatible: SnapshotDetails.LoadStatus
+    Loaded: SnapshotDetails.LoadStatus
+    SNAPSHOT_ID_FIELD_NUMBER: _ClassVar[int]
+    DETAILS_FIELD_NUMBER: _ClassVar[int]
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    SIZE_FIELD_NUMBER: _ClassVar[int]
+    snapshot_id: str
+    details: _snapshot_pb2.Snapshot
+    status: SnapshotDetails.LoadStatus
+    size: int
+    def __init__(self, snapshot_id: _Optional[str] = ..., details: _Optional[_Union[_snapshot_pb2.Snapshot, _Mapping]] = ..., status: _Optional[_Union[SnapshotDetails.LoadStatus, str]] = ..., size: _Optional[int] = ...) -> None: ...
+
+class SnapshotList(_message.Message):
+    __slots__ = ("snapshots",)
+    SNAPSHOTS_FIELD_NUMBER: _ClassVar[int]
+    snapshots: _containers.RepeatedCompositeFieldContainer[SnapshotDetails]
+    def __init__(self, snapshots: _Optional[_Iterable[_Union[SnapshotDetails, _Mapping]]] = ...) -> None: ...
+
+class IceboxTarget(_message.Message):
+    __slots__ = ("pid", "package_name", "snapshot_id", "failed", "err", "max_snapshot_number")
+    PID_FIELD_NUMBER: _ClassVar[int]
+    PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+    SNAPSHOT_ID_FIELD_NUMBER: _ClassVar[int]
+    FAILED_FIELD_NUMBER: _ClassVar[int]
+    ERR_FIELD_NUMBER: _ClassVar[int]
+    MAX_SNAPSHOT_NUMBER_FIELD_NUMBER: _ClassVar[int]
+    pid: int
+    package_name: str
+    snapshot_id: str
+    failed: bool
+    err: str
+    max_snapshot_number: int
+    def __init__(self, pid: _Optional[int] = ..., package_name: _Optional[str] = ..., snapshot_id: _Optional[str] = ..., failed: bool = ..., err: _Optional[str] = ..., max_snapshot_number: _Optional[int] = ...) -> None: ...
diff --git a/android_env/proto/snapshot_service_pb2_grpc.py b/android_env/proto/snapshot_service_pb2_grpc.py
new file mode 100644
index 0000000..9d49f82
--- /dev/null
+++ b/android_env/proto/snapshot_service_pb2_grpc.py
@@ -0,0 +1,487 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+from android_env.proto import snapshot_service_pb2 as android__env_dot_proto_dot_snapshot__service__pb2
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/snapshot_service_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
+
+
+class SnapshotServiceStub(object):
+    """The SnapshotService enables you to list, insert, store, and retrieve
+    snapshots.
+
+    Currently there are two types of snapshots:
+
+    - Local (default): These are snapshots that are created locally. They are
+    stored internally inside qcow2 files and are very efficient. These are
+    the snapshots usually created by interacting with the UI.
+
+    - Remote: These are snapshots that have been exported at a certain point.
+    an exported snapshot is normalized (completely self contained) and
+    can be imported into an emulator with a similar hardware configuration.
+
+    Currently the emulator has limited support for importing snapshots:
+    - Once an imported snapshot has been loaded into an emulator it is no longer
+    possible to create new snapshots.
+    - The hardware configuration of the emulator your are pushing a snapshot to
+    must match (or be very similar) to the one you pulled the snapshot from.
+
+    For example do not expect to be able to restore a snapshot on created on an
+    Intel cpu on an AMD cpu.
+    """
+
+    def __init__(self, channel):
+        """Constructor.
+
+        Args:
+            channel: A grpc.Channel.
+        """
+        self.ListSnapshots = channel.unary_unary(
+                '/android.emulation.control.SnapshotService/ListSnapshots',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotFilter.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotList.FromString,
+                _registered_method=True)
+        self.PullSnapshot = channel.unary_stream(
+                '/android.emulation.control.SnapshotService/PullSnapshot',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                _registered_method=True)
+        self.PushSnapshot = channel.stream_unary(
+                '/android.emulation.control.SnapshotService/PushSnapshot',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                _registered_method=True)
+        self.LoadSnapshot = channel.unary_unary(
+                '/android.emulation.control.SnapshotService/LoadSnapshot',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                _registered_method=True)
+        self.SaveSnapshot = channel.unary_unary(
+                '/android.emulation.control.SnapshotService/SaveSnapshot',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                _registered_method=True)
+        self.DeleteSnapshot = channel.unary_unary(
+                '/android.emulation.control.SnapshotService/DeleteSnapshot',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                _registered_method=True)
+        self.TrackProcess = channel.unary_unary(
+                '/android.emulation.control.SnapshotService/TrackProcess',
+                request_serializer=android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.SerializeToString,
+                response_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.FromString,
+                _registered_method=True)
+
+
+class SnapshotServiceServicer(object):
+    """The SnapshotService enables you to list, insert, store, and retrieve
+    snapshots.
+
+    Currently there are two types of snapshots:
+
+    - Local (default): These are snapshots that are created locally. They are
+    stored internally inside qcow2 files and are very efficient. These are
+    the snapshots usually created by interacting with the UI.
+
+    - Remote: These are snapshots that have been exported at a certain point.
+    an exported snapshot is normalized (completely self contained) and
+    can be imported into an emulator with a similar hardware configuration.
+
+    Currently the emulator has limited support for importing snapshots:
+    - Once an imported snapshot has been loaded into an emulator it is no longer
+    possible to create new snapshots.
+    - The hardware configuration of the emulator your are pushing a snapshot to
+    must match (or be very similar) to the one you pulled the snapshot from.
+
+    For example do not expect to be able to restore a snapshot on created on an
+    Intel cpu on an AMD cpu.
+    """
+
+    def ListSnapshots(self, request, context):
+        """Lists all the snapshots, filtered by the given query, that are stored
+        locally for the currently running avd. This includes all the snapshots that
+        were imported (pushed) into this emulator.
+
+        Returns a list of snapshot_id's and associated details that describes
+        the hardware configuration, logical name, etc of the snapshot.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def PullSnapshot(self, request, context):
+        """Pulls down the snapshot stored inside the AVD as a tar.gz/tar stream
+        This will normalize the snapshot, all relevant data to push a snapshot
+        into a similar emulator will be placed inside the tar file.
+
+        Pulling  down a snapshot will pause the emulator until the snapshots
+        are rebased and ready for exporting. Once the snapshot is rebased
+        the emulator will continue and downloading should commence.
+
+        Note that pulling .gz stream is slow.
+
+        You must provide the snapshot_id and (desired) format.
+
+        If SnapshotPackage.path is set, the gRPC service will directly write the
+        exported snapshot to SnapshotPackage.path without streaming, which is
+        usually significantly faster. It would require emulator to have direct
+        access to SnapshotPackage.path, which usually means it can only be used
+        when pulling from a local emulator.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def PushSnapshot(self, request_iterator, context):
+        """Push a tar.gz stream contain the snapshot. The tar file should
+        be a snapshot that was exported through the PullSnapshot in the past.
+        The emulator will try to import the snapshot. The hardware configuration
+        of the current emulator should match the one used for pulling.
+
+        A detailed description of the snapshot (emulator_snapshot.Snapshot)
+        is stored in the snapshot.pb file inside the tar.
+
+        You must provide the snapshot_id and format in the first message.
+        Will return success and a possible error message when a failure occurs.
+
+        If SnapshotPackage.path is set, the gRPC service will directly unzip the
+        exported snapshot from SnapshotPackage.path without streaming, which is
+        usually significantly faster. It would require emulator to have direct
+        access to SnapshotPackage.path, which usually means it can only be used
+        when pushing to a local emulator.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def LoadSnapshot(self, request, context):
+        """Loads the given snapshot inside the emulator and activates it.
+        The device will be in the state as it was when the snapshot was created.
+
+        You will no longer be able to call Save if this was an imported
+        snapshot that was pushed into this emulator.
+
+        You must provide the snapshot_id to indicate which snapshot to load
+        Will return success and a possible error message when a failure occurs.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def SaveSnapshot(self, request, context):
+        """Creates as a snapshot of the current state of the emulator.
+        You can only save a snapshot if you never activated (Load) an imported
+        snapshot (Push).
+
+        For example:
+        - PushSnapshot("some_snap.tar.gz");
+        - LoadSnapshot("some_snap");
+        - SaveSnapshot("same_newer_snap"); // <--- Will currently fail.
+
+        You can provide the snapshot_id to indicate the name used for storing.
+        Will return success and a possible error message when a failure occurs.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def DeleteSnapshot(self, request, context):
+        """Deletes the snapshot with the given snapshot_id from the avd.
+
+        You must provide the snapshot_id to indicate which snapshot to delete.
+        Will return success and a possible error message when a failure occurs.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+    def TrackProcess(self, request, context):
+        """Tracks the given process for automated snapshot creation in case of
+        assert failures.
+
+        Will return success and a possible error message when a failure occurs.
+        The snapshot_id field will contain the name of the snapshot that
+        will be created. The pid field will contain the process id that is
+        being tracked.
+        """
+        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
+        context.set_details('Method not implemented!')
+        raise NotImplementedError('Method not implemented!')
+
+
+def add_SnapshotServiceServicer_to_server(servicer, server):
+    rpc_method_handlers = {
+            'ListSnapshots': grpc.unary_unary_rpc_method_handler(
+                    servicer.ListSnapshots,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotFilter.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotList.SerializeToString,
+            ),
+            'PullSnapshot': grpc.unary_stream_rpc_method_handler(
+                    servicer.PullSnapshot,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            ),
+            'PushSnapshot': grpc.stream_unary_rpc_method_handler(
+                    servicer.PushSnapshot,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            ),
+            'LoadSnapshot': grpc.unary_unary_rpc_method_handler(
+                    servicer.LoadSnapshot,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            ),
+            'SaveSnapshot': grpc.unary_unary_rpc_method_handler(
+                    servicer.SaveSnapshot,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            ),
+            'DeleteSnapshot': grpc.unary_unary_rpc_method_handler(
+                    servicer.DeleteSnapshot,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            ),
+            'TrackProcess': grpc.unary_unary_rpc_method_handler(
+                    servicer.TrackProcess,
+                    request_deserializer=android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.FromString,
+                    response_serializer=android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.SerializeToString,
+            ),
+    }
+    generic_handler = grpc.method_handlers_generic_handler(
+            'android.emulation.control.SnapshotService', rpc_method_handlers)
+    server.add_generic_rpc_handlers((generic_handler,))
+    server.add_registered_method_handlers('android.emulation.control.SnapshotService', rpc_method_handlers)
+
+
+ # This class is part of an EXPERIMENTAL API.
+class SnapshotService(object):
+    """The SnapshotService enables you to list, insert, store, and retrieve
+    snapshots.
+
+    Currently there are two types of snapshots:
+
+    - Local (default): These are snapshots that are created locally. They are
+    stored internally inside qcow2 files and are very efficient. These are
+    the snapshots usually created by interacting with the UI.
+
+    - Remote: These are snapshots that have been exported at a certain point.
+    an exported snapshot is normalized (completely self contained) and
+    can be imported into an emulator with a similar hardware configuration.
+
+    Currently the emulator has limited support for importing snapshots:
+    - Once an imported snapshot has been loaded into an emulator it is no longer
+    possible to create new snapshots.
+    - The hardware configuration of the emulator your are pushing a snapshot to
+    must match (or be very similar) to the one you pulled the snapshot from.
+
+    For example do not expect to be able to restore a snapshot on created on an
+    Intel cpu on an AMD cpu.
+    """
+
+    @staticmethod
+    def ListSnapshots(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/ListSnapshots',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotFilter.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotList.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def PullSnapshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_stream(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/PullSnapshot',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def PushSnapshot(request_iterator,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.stream_unary(
+            request_iterator,
+            target,
+            '/android.emulation.control.SnapshotService/PushSnapshot',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def LoadSnapshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/LoadSnapshot',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def SaveSnapshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/SaveSnapshot',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def DeleteSnapshot(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/DeleteSnapshot',
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.SnapshotPackage.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
+
+    @staticmethod
+    def TrackProcess(request,
+            target,
+            options=(),
+            channel_credentials=None,
+            call_credentials=None,
+            insecure=False,
+            compression=None,
+            wait_for_ready=None,
+            timeout=None,
+            metadata=None):
+        return grpc.experimental.unary_unary(
+            request,
+            target,
+            '/android.emulation.control.SnapshotService/TrackProcess',
+            android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.SerializeToString,
+            android__env_dot_proto_dot_snapshot__service__pb2.IceboxTarget.FromString,
+            options,
+            channel_credentials,
+            insecure,
+            call_credentials,
+            compression,
+            wait_for_ready,
+            timeout,
+            metadata,
+            _registered_method=True)
diff --git a/android_env/proto/state_pb2.py b/android_env/proto/state_pb2.py
new file mode 100644
index 0000000..e9bea19
--- /dev/null
+++ b/android_env/proto/state_pb2.py
@@ -0,0 +1,63 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/state.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/state.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1d\x61ndroid_env/proto/state.proto\x12\x0b\x61ndroid_env\"v\n\x10SaveStateRequest\x12\x35\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\'.android_env.SaveStateRequest.ArgsEntry\x1a+\n\tArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"v\n\x10LoadStateRequest\x12\x35\n\x04\x61rgs\x18\x01 \x03(\x0b\x32\'.android_env.LoadStateRequest.ArgsEntry\x1a+\n\tArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x91\x02\n\x11SaveStateResponse\x12\x35\n\x06status\x18\x01 \x01(\x0e\x32%.android_env.SaveStateResponse.Status\x12\x15\n\rerror_message\x18\x02 \x01(\t\x12K\n\x0f\x61\x64\x64itional_info\x18\x03 \x03(\x0b\x32\x32.android_env.SaveStateResponse.AdditionalInfoEntry\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"*\n\x06Status\x12\r\n\tUNDEFINED\x10\x00\x12\x06\n\x02OK\x10\x01\x12\t\n\x05\x45RROR\x10\x02\"\xa0\x02\n\x11LoadStateResponse\x12\x35\n\x06status\x18\x01 \x01(\x0e\x32%.android_env.LoadStateResponse.Status\x12\x15\n\rerror_message\x18\x02 \x01(\t\x12K\n\x0f\x61\x64\x64itional_info\x18\x03 \x03(\x0b\x32\x32.android_env.LoadStateResponse.AdditionalInfoEntry\x1a\x35\n\x13\x41\x64\x64itionalInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"9\n\x06Status\x12\r\n\tUNDEFINED\x10\x00\x12\x06\n\x02OK\x10\x01\x12\r\n\tNOT_FOUND\x10\x02\x12\t\n\x05\x45RROR\x10\x03\x42\x02P\x01\x62\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.state_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  _globals['DESCRIPTOR']._loaded_options = None
+  _globals['DESCRIPTOR']._serialized_options = b'P\001'
+  _globals['_SAVESTATEREQUEST_ARGSENTRY']._loaded_options = None
+  _globals['_SAVESTATEREQUEST_ARGSENTRY']._serialized_options = b'8\001'
+  _globals['_LOADSTATEREQUEST_ARGSENTRY']._loaded_options = None
+  _globals['_LOADSTATEREQUEST_ARGSENTRY']._serialized_options = b'8\001'
+  _globals['_SAVESTATERESPONSE_ADDITIONALINFOENTRY']._loaded_options = None
+  _globals['_SAVESTATERESPONSE_ADDITIONALINFOENTRY']._serialized_options = b'8\001'
+  _globals['_LOADSTATERESPONSE_ADDITIONALINFOENTRY']._loaded_options = None
+  _globals['_LOADSTATERESPONSE_ADDITIONALINFOENTRY']._serialized_options = b'8\001'
+  _globals['_SAVESTATEREQUEST']._serialized_start=46
+  _globals['_SAVESTATEREQUEST']._serialized_end=164
+  _globals['_SAVESTATEREQUEST_ARGSENTRY']._serialized_start=121
+  _globals['_SAVESTATEREQUEST_ARGSENTRY']._serialized_end=164
+  _globals['_LOADSTATEREQUEST']._serialized_start=166
+  _globals['_LOADSTATEREQUEST']._serialized_end=284
+  _globals['_LOADSTATEREQUEST_ARGSENTRY']._serialized_start=121
+  _globals['_LOADSTATEREQUEST_ARGSENTRY']._serialized_end=164
+  _globals['_SAVESTATERESPONSE']._serialized_start=287
+  _globals['_SAVESTATERESPONSE']._serialized_end=560
+  _globals['_SAVESTATERESPONSE_ADDITIONALINFOENTRY']._serialized_start=463
+  _globals['_SAVESTATERESPONSE_ADDITIONALINFOENTRY']._serialized_end=516
+  _globals['_SAVESTATERESPONSE_STATUS']._serialized_start=518
+  _globals['_SAVESTATERESPONSE_STATUS']._serialized_end=560
+  _globals['_LOADSTATERESPONSE']._serialized_start=563
+  _globals['_LOADSTATERESPONSE']._serialized_end=851
+  _globals['_LOADSTATERESPONSE_ADDITIONALINFOENTRY']._serialized_start=463
+  _globals['_LOADSTATERESPONSE_ADDITIONALINFOENTRY']._serialized_end=516
+  _globals['_LOADSTATERESPONSE_STATUS']._serialized_start=794
+  _globals['_LOADSTATERESPONSE_STATUS']._serialized_end=851
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/state_pb2.pyi b/android_env/proto/state_pb2.pyi
new file mode 100644
index 0000000..f76e232
--- /dev/null
+++ b/android_env/proto/state_pb2.pyi
@@ -0,0 +1,86 @@
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class SaveStateRequest(_message.Message):
+    __slots__ = ("args",)
+    class ArgsEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: str
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+    ARGS_FIELD_NUMBER: _ClassVar[int]
+    args: _containers.ScalarMap[str, str]
+    def __init__(self, args: _Optional[_Mapping[str, str]] = ...) -> None: ...
+
+class LoadStateRequest(_message.Message):
+    __slots__ = ("args",)
+    class ArgsEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: str
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+    ARGS_FIELD_NUMBER: _ClassVar[int]
+    args: _containers.ScalarMap[str, str]
+    def __init__(self, args: _Optional[_Mapping[str, str]] = ...) -> None: ...
+
+class SaveStateResponse(_message.Message):
+    __slots__ = ("status", "error_message", "additional_info")
+    class Status(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNDEFINED: _ClassVar[SaveStateResponse.Status]
+        OK: _ClassVar[SaveStateResponse.Status]
+        ERROR: _ClassVar[SaveStateResponse.Status]
+    UNDEFINED: SaveStateResponse.Status
+    OK: SaveStateResponse.Status
+    ERROR: SaveStateResponse.Status
+    class AdditionalInfoEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: str
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    ERROR_MESSAGE_FIELD_NUMBER: _ClassVar[int]
+    ADDITIONAL_INFO_FIELD_NUMBER: _ClassVar[int]
+    status: SaveStateResponse.Status
+    error_message: str
+    additional_info: _containers.ScalarMap[str, str]
+    def __init__(self, status: _Optional[_Union[SaveStateResponse.Status, str]] = ..., error_message: _Optional[str] = ..., additional_info: _Optional[_Mapping[str, str]] = ...) -> None: ...
+
+class LoadStateResponse(_message.Message):
+    __slots__ = ("status", "error_message", "additional_info")
+    class Status(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        UNDEFINED: _ClassVar[LoadStateResponse.Status]
+        OK: _ClassVar[LoadStateResponse.Status]
+        NOT_FOUND: _ClassVar[LoadStateResponse.Status]
+        ERROR: _ClassVar[LoadStateResponse.Status]
+    UNDEFINED: LoadStateResponse.Status
+    OK: LoadStateResponse.Status
+    NOT_FOUND: LoadStateResponse.Status
+    ERROR: LoadStateResponse.Status
+    class AdditionalInfoEntry(_message.Message):
+        __slots__ = ("key", "value")
+        KEY_FIELD_NUMBER: _ClassVar[int]
+        VALUE_FIELD_NUMBER: _ClassVar[int]
+        key: str
+        value: str
+        def __init__(self, key: _Optional[str] = ..., value: _Optional[str] = ...) -> None: ...
+    STATUS_FIELD_NUMBER: _ClassVar[int]
+    ERROR_MESSAGE_FIELD_NUMBER: _ClassVar[int]
+    ADDITIONAL_INFO_FIELD_NUMBER: _ClassVar[int]
+    status: LoadStateResponse.Status
+    error_message: str
+    additional_info: _containers.ScalarMap[str, str]
+    def __init__(self, status: _Optional[_Union[LoadStateResponse.Status, str]] = ..., error_message: _Optional[str] = ..., additional_info: _Optional[_Mapping[str, str]] = ...) -> None: ...
diff --git a/android_env/proto/state_pb2_grpc.py b/android_env/proto/state_pb2_grpc.py
new file mode 100644
index 0000000..7716b1b
--- /dev/null
+++ b/android_env/proto/state_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/state_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/proto/task_pb2.py b/android_env/proto/task_pb2.py
new file mode 100644
index 0000000..7a708e8
--- /dev/null
+++ b/android_env/proto/task_pb2.py
@@ -0,0 +1,59 @@
+# -*- coding: utf-8 -*-
+# Generated by the protocol buffer compiler.  DO NOT EDIT!
+# NO CHECKED-IN PROTOBUF GENCODE
+# source: android_env/proto/task.proto
+# Protobuf Python Version: 6.31.0
+"""Generated protocol buffer code."""
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import descriptor_pool as _descriptor_pool
+from google.protobuf import runtime_version as _runtime_version
+from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
+_runtime_version.ValidateProtobufRuntimeVersion(
+    _runtime_version.Domain.PUBLIC,
+    6,
+    31,
+    0,
+    '',
+    'android_env/proto/task.proto'
+)
+# @@protoc_insertion_point(imports)
+
+_sym_db = _symbol_database.Default()
+
+
+from android_env.proto import adb_pb2 as android__env_dot_proto_dot_adb__pb2
+
+
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1c\x61ndroid_env/proto/task.proto\x12\x0b\x61ndroid_env\x1a\x1b\x61ndroid_env/proto/adb.proto\":\n\tAppScreen\x12\x10\n\x08\x61\x63tivity\x18\x01 \x01(\t\x12\x1b\n\x13view_hierarchy_path\x18\x02 \x03(\t\"S\n\x10WaitForAppScreen\x12*\n\napp_screen\x18\x01 \x01(\x0b\x32\x16.android_env.AppScreen\x12\x13\n\x0btimeout_sec\x18\x02 \x01(\x02\"9\n\x0c\x43heckInstall\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x13\n\x0btimeout_sec\x18\x02 \x01(\x02\"\x19\n\x05Sleep\x12\x10\n\x08time_sec\x18\x01 \x01(\x02\"\xa2\x01\n\x10SuccessCondition\x12\x13\n\x0bnum_retries\x18\x01 \x01(\x05\x12<\n\x13wait_for_app_screen\x18\x02 \x01(\x0b\x32\x1d.android_env.WaitForAppScreenH\x00\x12\x32\n\rcheck_install\x18\x03 \x01(\x0b\x32\x19.android_env.CheckInstallH\x00\x42\x07\n\x05\x63heck\"\xa2\x01\n\tSetupStep\x12\x38\n\x11success_condition\x18\x01 \x01(\x0b\x32\x1d.android_env.SuccessCondition\x12.\n\x0b\x61\x64\x62_request\x18\x02 \x01(\x0b\x32\x17.android_env.AdbRequestH\x00\x12#\n\x05sleep\x18\x03 \x01(\x0b\x32\x12.android_env.SleepH\x00\x42\x06\n\x04step\"\xcf\x02\n\tArraySpec\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05shape\x18\x02 \x03(\x05\x12.\n\x05\x64type\x18\x03 \x01(\x0e\x32\x1f.android_env.ArraySpec.DataType\"\xf4\x01\n\x08\x44\x61taType\x12\x15\n\x11INVALID_DATA_TYPE\x10\x00\x12\t\n\x05\x46LOAT\x10\x01\x12\n\n\x06\x44OUBLE\x10\x02\x12\x08\n\x04INT8\x10\x03\x12\t\n\x05INT16\x10\x04\x12\t\n\x05INT32\x10\x05\x12\t\n\x05INT64\x10\x06\x12\t\n\x05UINT8\x10\x07\x12\n\n\x06UINT16\x10\x08\x12\n\n\x06UINT32\x10\t\x12\n\n\x06UINT64\x10\n\x12\x08\n\x04\x42OOL\x10\x0b\x12\r\n\tSTRING_U1\x10\x0c\x12\x0e\n\nSTRING_U16\x10\r\x12\x0e\n\nSTRING_U25\x10\x0e\x12\x0f\n\x0bSTRING_U250\x10\x0f\x12\n\n\x06STRING\x10\x10\x12\n\n\x06OBJECT\x10\x11\"\xc2\x02\n\x10LogParsingConfig\x12\x0f\n\x07\x66ilters\x18\x01 \x03(\t\x12=\n\x0blog_regexps\x18\x02 \x01(\x0b\x32(.android_env.LogParsingConfig.LogRegexps\x1a\xdd\x01\n\nLogRegexps\x12\r\n\x05score\x18\x01 \x01(\t\x12\x0e\n\x06reward\x18\x02 \x03(\t\x12\x13\n\x0b\x65pisode_end\x18\x03 \x03(\t\x12\r\n\x05\x65xtra\x18\x04 \x03(\t\x12\x12\n\njson_extra\x18\x05 \x03(\t\x12J\n\x0creward_event\x18\x06 \x03(\x0b\x32\x34.android_env.LogParsingConfig.LogRegexps.RewardEvent\x1a,\n\x0bRewardEvent\x12\r\n\x05\x65vent\x18\x01 \x01(\t\x12\x0e\n\x06reward\x18\x02 \x01(\x02\"\xe0\x02\n\x04Task\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x12+\n\x0bsetup_steps\x18\x04 \x03(\x0b\x32\x16.android_env.SetupStep\x12+\n\x0breset_steps\x18\x05 \x03(\x0b\x32\x16.android_env.SetupStep\x12\x33\n\x13\x65xpected_app_screen\x18\x06 \x01(\x0b\x32\x16.android_env.AppScreen\x12\x17\n\x0fmax_episode_sec\x18\x07 \x01(\x02\x12\x19\n\x11max_episode_steps\x18\x08 \x01(\x05\x12\x39\n\x12log_parsing_config\x18\t \x01(\x0b\x32\x1d.android_env.LogParsingConfig\x12+\n\x0b\x65xtras_spec\x18\n \x03(\x0b\x32\x16.android_env.ArraySpecb\x06proto3')
+
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'android_env.proto.task_pb2', _globals)
+if not _descriptor._USE_C_DESCRIPTORS:
+  DESCRIPTOR._loaded_options = None
+  _globals['_APPSCREEN']._serialized_start=74
+  _globals['_APPSCREEN']._serialized_end=132
+  _globals['_WAITFORAPPSCREEN']._serialized_start=134
+  _globals['_WAITFORAPPSCREEN']._serialized_end=217
+  _globals['_CHECKINSTALL']._serialized_start=219
+  _globals['_CHECKINSTALL']._serialized_end=276
+  _globals['_SLEEP']._serialized_start=278
+  _globals['_SLEEP']._serialized_end=303
+  _globals['_SUCCESSCONDITION']._serialized_start=306
+  _globals['_SUCCESSCONDITION']._serialized_end=468
+  _globals['_SETUPSTEP']._serialized_start=471
+  _globals['_SETUPSTEP']._serialized_end=633
+  _globals['_ARRAYSPEC']._serialized_start=636
+  _globals['_ARRAYSPEC']._serialized_end=971
+  _globals['_ARRAYSPEC_DATATYPE']._serialized_start=727
+  _globals['_ARRAYSPEC_DATATYPE']._serialized_end=971
+  _globals['_LOGPARSINGCONFIG']._serialized_start=974
+  _globals['_LOGPARSINGCONFIG']._serialized_end=1296
+  _globals['_LOGPARSINGCONFIG_LOGREGEXPS']._serialized_start=1075
+  _globals['_LOGPARSINGCONFIG_LOGREGEXPS']._serialized_end=1296
+  _globals['_LOGPARSINGCONFIG_LOGREGEXPS_REWARDEVENT']._serialized_start=1252
+  _globals['_LOGPARSINGCONFIG_LOGREGEXPS_REWARDEVENT']._serialized_end=1296
+  _globals['_TASK']._serialized_start=1299
+  _globals['_TASK']._serialized_end=1651
+# @@protoc_insertion_point(module_scope)
diff --git a/android_env/proto/task_pb2.pyi b/android_env/proto/task_pb2.pyi
new file mode 100644
index 0000000..7c6eaa9
--- /dev/null
+++ b/android_env/proto/task_pb2.pyi
@@ -0,0 +1,161 @@
+from android_env.proto import adb_pb2 as _adb_pb2
+from google.protobuf.internal import containers as _containers
+from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
+from google.protobuf import descriptor as _descriptor
+from google.protobuf import message as _message
+from collections.abc import Iterable as _Iterable, Mapping as _Mapping
+from typing import ClassVar as _ClassVar, Optional as _Optional, Union as _Union
+
+DESCRIPTOR: _descriptor.FileDescriptor
+
+class AppScreen(_message.Message):
+    __slots__ = ("activity", "view_hierarchy_path")
+    ACTIVITY_FIELD_NUMBER: _ClassVar[int]
+    VIEW_HIERARCHY_PATH_FIELD_NUMBER: _ClassVar[int]
+    activity: str
+    view_hierarchy_path: _containers.RepeatedScalarFieldContainer[str]
+    def __init__(self, activity: _Optional[str] = ..., view_hierarchy_path: _Optional[_Iterable[str]] = ...) -> None: ...
+
+class WaitForAppScreen(_message.Message):
+    __slots__ = ("app_screen", "timeout_sec")
+    APP_SCREEN_FIELD_NUMBER: _ClassVar[int]
+    TIMEOUT_SEC_FIELD_NUMBER: _ClassVar[int]
+    app_screen: AppScreen
+    timeout_sec: float
+    def __init__(self, app_screen: _Optional[_Union[AppScreen, _Mapping]] = ..., timeout_sec: _Optional[float] = ...) -> None: ...
+
+class CheckInstall(_message.Message):
+    __slots__ = ("package_name", "timeout_sec")
+    PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
+    TIMEOUT_SEC_FIELD_NUMBER: _ClassVar[int]
+    package_name: str
+    timeout_sec: float
+    def __init__(self, package_name: _Optional[str] = ..., timeout_sec: _Optional[float] = ...) -> None: ...
+
+class Sleep(_message.Message):
+    __slots__ = ("time_sec",)
+    TIME_SEC_FIELD_NUMBER: _ClassVar[int]
+    time_sec: float
+    def __init__(self, time_sec: _Optional[float] = ...) -> None: ...
+
+class SuccessCondition(_message.Message):
+    __slots__ = ("num_retries", "wait_for_app_screen", "check_install")
+    NUM_RETRIES_FIELD_NUMBER: _ClassVar[int]
+    WAIT_FOR_APP_SCREEN_FIELD_NUMBER: _ClassVar[int]
+    CHECK_INSTALL_FIELD_NUMBER: _ClassVar[int]
+    num_retries: int
+    wait_for_app_screen: WaitForAppScreen
+    check_install: CheckInstall
+    def __init__(self, num_retries: _Optional[int] = ..., wait_for_app_screen: _Optional[_Union[WaitForAppScreen, _Mapping]] = ..., check_install: _Optional[_Union[CheckInstall, _Mapping]] = ...) -> None: ...
+
+class SetupStep(_message.Message):
+    __slots__ = ("success_condition", "adb_request", "sleep")
+    SUCCESS_CONDITION_FIELD_NUMBER: _ClassVar[int]
+    ADB_REQUEST_FIELD_NUMBER: _ClassVar[int]
+    SLEEP_FIELD_NUMBER: _ClassVar[int]
+    success_condition: SuccessCondition
+    adb_request: _adb_pb2.AdbRequest
+    sleep: Sleep
+    def __init__(self, success_condition: _Optional[_Union[SuccessCondition, _Mapping]] = ..., adb_request: _Optional[_Union[_adb_pb2.AdbRequest, _Mapping]] = ..., sleep: _Optional[_Union[Sleep, _Mapping]] = ...) -> None: ...
+
+class ArraySpec(_message.Message):
+    __slots__ = ("name", "shape", "dtype")
+    class DataType(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
+        __slots__ = ()
+        INVALID_DATA_TYPE: _ClassVar[ArraySpec.DataType]
+        FLOAT: _ClassVar[ArraySpec.DataType]
+        DOUBLE: _ClassVar[ArraySpec.DataType]
+        INT8: _ClassVar[ArraySpec.DataType]
+        INT16: _ClassVar[ArraySpec.DataType]
+        INT32: _ClassVar[ArraySpec.DataType]
+        INT64: _ClassVar[ArraySpec.DataType]
+        UINT8: _ClassVar[ArraySpec.DataType]
+        UINT16: _ClassVar[ArraySpec.DataType]
+        UINT32: _ClassVar[ArraySpec.DataType]
+        UINT64: _ClassVar[ArraySpec.DataType]
+        BOOL: _ClassVar[ArraySpec.DataType]
+        STRING_U1: _ClassVar[ArraySpec.DataType]
+        STRING_U16: _ClassVar[ArraySpec.DataType]
+        STRING_U25: _ClassVar[ArraySpec.DataType]
+        STRING_U250: _ClassVar[ArraySpec.DataType]
+        STRING: _ClassVar[ArraySpec.DataType]
+        OBJECT: _ClassVar[ArraySpec.DataType]
+    INVALID_DATA_TYPE: ArraySpec.DataType
+    FLOAT: ArraySpec.DataType
+    DOUBLE: ArraySpec.DataType
+    INT8: ArraySpec.DataType
+    INT16: ArraySpec.DataType
+    INT32: ArraySpec.DataType
+    INT64: ArraySpec.DataType
+    UINT8: ArraySpec.DataType
+    UINT16: ArraySpec.DataType
+    UINT32: ArraySpec.DataType
+    UINT64: ArraySpec.DataType
+    BOOL: ArraySpec.DataType
+    STRING_U1: ArraySpec.DataType
+    STRING_U16: ArraySpec.DataType
+    STRING_U25: ArraySpec.DataType
+    STRING_U250: ArraySpec.DataType
+    STRING: ArraySpec.DataType
+    OBJECT: ArraySpec.DataType
+    NAME_FIELD_NUMBER: _ClassVar[int]
+    SHAPE_FIELD_NUMBER: _ClassVar[int]
+    DTYPE_FIELD_NUMBER: _ClassVar[int]
+    name: str
+    shape: _containers.RepeatedScalarFieldContainer[int]
+    dtype: ArraySpec.DataType
+    def __init__(self, name: _Optional[str] = ..., shape: _Optional[_Iterable[int]] = ..., dtype: _Optional[_Union[ArraySpec.DataType, str]] = ...) -> None: ...
+
+class LogParsingConfig(_message.Message):
+    __slots__ = ("filters", "log_regexps")
+    class LogRegexps(_message.Message):
+        __slots__ = ("score", "reward", "episode_end", "extra", "json_extra", "reward_event")
+        class RewardEvent(_message.Message):
+            __slots__ = ("event", "reward")
+            EVENT_FIELD_NUMBER: _ClassVar[int]
+            REWARD_FIELD_NUMBER: _ClassVar[int]
+            event: str
+            reward: float
+            def __init__(self, event: _Optional[str] = ..., reward: _Optional[float] = ...) -> None: ...
+        SCORE_FIELD_NUMBER: _ClassVar[int]
+        REWARD_FIELD_NUMBER: _ClassVar[int]
+        EPISODE_END_FIELD_NUMBER: _ClassVar[int]
+        EXTRA_FIELD_NUMBER: _ClassVar[int]
+        JSON_EXTRA_FIELD_NUMBER: _ClassVar[int]
+        REWARD_EVENT_FIELD_NUMBER: _ClassVar[int]
+        score: str
+        reward: _containers.RepeatedScalarFieldContainer[str]
+        episode_end: _containers.RepeatedScalarFieldContainer[str]
+        extra: _containers.RepeatedScalarFieldContainer[str]
+        json_extra: _containers.RepeatedScalarFieldContainer[str]
+        reward_event: _containers.RepeatedCompositeFieldContainer[LogParsingConfig.LogRegexps.RewardEvent]
+        def __init__(self, score: _Optional[str] = ..., reward: _Optional[_Iterable[str]] = ..., episode_end: _Optional[_Iterable[str]] = ..., extra: _Optional[_Iterable[str]] = ..., json_extra: _Optional[_Iterable[str]] = ..., reward_event: _Optional[_Iterable[_Union[LogParsingConfig.LogRegexps.RewardEvent, _Mapping]]] = ...) -> None: ...
+    FILTERS_FIELD_NUMBER: _ClassVar[int]
+    LOG_REGEXPS_FIELD_NUMBER: _ClassVar[int]
+    filters: _containers.RepeatedScalarFieldContainer[str]
+    log_regexps: LogParsingConfig.LogRegexps
+    def __init__(self, filters: _Optional[_Iterable[str]] = ..., log_regexps: _Optional[_Union[LogParsingConfig.LogRegexps, _Mapping]] = ...) -> None: ...
+
+class Task(_message.Message):
+    __slots__ = ("id", "name", "description", "setup_steps", "reset_steps", "expected_app_screen", "max_episode_sec", "max_episode_steps", "log_parsing_config", "extras_spec")
+    ID_FIELD_NUMBER: _ClassVar[int]
+    NAME_FIELD_NUMBER: _ClassVar[int]
+    DESCRIPTION_FIELD_NUMBER: _ClassVar[int]
+    SETUP_STEPS_FIELD_NUMBER: _ClassVar[int]
+    RESET_STEPS_FIELD_NUMBER: _ClassVar[int]
+    EXPECTED_APP_SCREEN_FIELD_NUMBER: _ClassVar[int]
+    MAX_EPISODE_SEC_FIELD_NUMBER: _ClassVar[int]
+    MAX_EPISODE_STEPS_FIELD_NUMBER: _ClassVar[int]
+    LOG_PARSING_CONFIG_FIELD_NUMBER: _ClassVar[int]
+    EXTRAS_SPEC_FIELD_NUMBER: _ClassVar[int]
+    id: str
+    name: str
+    description: str
+    setup_steps: _containers.RepeatedCompositeFieldContainer[SetupStep]
+    reset_steps: _containers.RepeatedCompositeFieldContainer[SetupStep]
+    expected_app_screen: AppScreen
+    max_episode_sec: float
+    max_episode_steps: int
+    log_parsing_config: LogParsingConfig
+    extras_spec: _containers.RepeatedCompositeFieldContainer[ArraySpec]
+    def __init__(self, id: _Optional[str] = ..., name: _Optional[str] = ..., description: _Optional[str] = ..., setup_steps: _Optional[_Iterable[_Union[SetupStep, _Mapping]]] = ..., reset_steps: _Optional[_Iterable[_Union[SetupStep, _Mapping]]] = ..., expected_app_screen: _Optional[_Union[AppScreen, _Mapping]] = ..., max_episode_sec: _Optional[float] = ..., max_episode_steps: _Optional[int] = ..., log_parsing_config: _Optional[_Union[LogParsingConfig, _Mapping]] = ..., extras_spec: _Optional[_Iterable[_Union[ArraySpec, _Mapping]]] = ...) -> None: ...
diff --git a/android_env/proto/task_pb2_grpc.py b/android_env/proto/task_pb2_grpc.py
new file mode 100644
index 0000000..ce66991
--- /dev/null
+++ b/android_env/proto/task_pb2_grpc.py
@@ -0,0 +1,24 @@
+# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
+"""Client and server classes corresponding to protobuf-defined services."""
+import grpc
+import warnings
+
+
+GRPC_GENERATED_VERSION = '1.73.0'
+GRPC_VERSION = grpc.__version__
+_version_not_supported = False
+
+try:
+    from grpc._utilities import first_version_is_lower
+    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
+except ImportError:
+    _version_not_supported = True
+
+if _version_not_supported:
+    raise RuntimeError(
+        f'The grpc package installed is at version {GRPC_VERSION},'
+        + f' but the generated code in android_env/proto/task_pb2_grpc.py depends on'
+        + f' grpcio>={GRPC_GENERATED_VERSION}.'
+        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
+        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
+    )
diff --git a/android_env/wrappers/a11y_grpc_wrapper.py b/android_env/wrappers/a11y_grpc_wrapper.py
index 5b010ad..393541a 100644
--- a/android_env/wrappers/a11y_grpc_wrapper.py
+++ b/android_env/wrappers/a11y_grpc_wrapper.py
@@ -14,7 +14,7 @@
 # limitations under the License.
 
 """Wraps AndroidEnv to retrieve accessibility messages from gRPC."""
-
+import subprocess
 from concurrent import futures
 import time
 from typing import Any
@@ -24,24 +24,29 @@ import urllib
 from absl import logging
 from android_env import env_interface
 from android_env.components import action_type as android_action_type_lib
+from android_env.components.a11y import a11y_events
+from android_env.components.a11y import a11y_forests
+from android_env.components.a11y import a11y_servicer
 from android_env.proto import adb_pb2
 from android_env.proto.a11y import a11y_pb2_grpc
 from android_env.wrappers import base_wrapper
-from android_env.wrappers.a11y import a11y_events
-from android_env.wrappers.a11y import a11y_forests
-from android_env.wrappers.a11y import a11y_servicer
 import dm_env
 import grpc
 import numpy as np
 import portpicker
-
+import os
 
 def _get_accessibility_forwarder_apk() -> bytes:
-  logging.info('Downloading accessibility forwarder apk....')
-  with urllib.request.urlopen(
-      'https://storage.googleapis.com/android_env-tasks/2024.05.13-accessibility_forwarder.apk'
-  ) as response:
-    return response.read()
+  apk_path = '/tmp/2024.05.13-accessibility_forwarder.apk'
+  if os.path.exists(apk_path):
+    with open(apk_path, 'rb') as f:
+      return f.read()
+  else:
+    logging.info('Downloading accessibility forwarder apk....')
+    with urllib.request.urlopen(
+        'https://storage.googleapis.com/android_env-tasks/2024.05.13-accessibility_forwarder.apk'
+    ) as response:
+      return response.read()
 
 
 class EnableNetworkingError(ValueError):
@@ -134,10 +139,11 @@ class A11yGrpcWrapper(base_wrapper.BaseWrapper):
         self._servicer, self._server
     )
     server_credentials = grpc.local_server_credentials()
+    self._ip = subprocess.check_output(['hostname', '-I']).decode('utf-8').strip().split()[0] \
+      if os.environ.get('EMULATOR_HOST') else '10.0.2.2'
     self._port = portpicker.pick_unused_port()
     logging.info('Using port %s', self._port)
-    uri_address = f'[::]:{self._port}'
-    self._server.add_secure_port(uri_address, server_credentials)
+    self._server.add_insecure_port(f'0.0.0.0:{self._port}')
     logging.info('Starting server')
     self._server.start()
     logging.info('Server now running.')
@@ -265,6 +271,24 @@ class A11yGrpcWrapper(base_wrapper.BaseWrapper):
         )
     )
     time.sleep(1.0)
+    self.execute_adb_call(
+        adb_pb2.AdbRequest(
+            generic=adb_pb2.AdbRequest.GenericRequest(
+                args=[
+                    'shell',
+                    'su',
+                    '0',
+                    'cmd',
+                    '-w',
+                    'wifi',
+                    'connect-network',
+                    'AndroidWifi',
+                    'open'
+                ]
+            )
+        )
+    )
+    time.sleep(5)
 
   def _configure_grpc(self) -> None:
     """Configure networking and set the gRPC port in the AVD."""
@@ -283,7 +307,7 @@ class A11yGrpcWrapper(base_wrapper.BaseWrapper):
                       '-p',
                       'tcp',
                       '-d',
-                      '10.0.2.2',
+                      self._ip,
                       '--dport',
                       str(self._port),
                       '-j',
@@ -316,7 +340,7 @@ class A11yGrpcWrapper(base_wrapper.BaseWrapper):
             settings=adb_pb2.AdbRequest.SettingsRequest(
                 name_space=adb_pb2.AdbRequest.SettingsRequest.Namespace.GLOBAL,
                 put=adb_pb2.AdbRequest.SettingsRequest.Put(
-                    key='no_proxy', value=f'10.0.2.2:{self._port}'
+                    key='no_proxy', value=f'{self._ip}:{self._port}'
                 ),
             )
         )
@@ -326,8 +350,9 @@ class A11yGrpcWrapper(base_wrapper.BaseWrapper):
         adb_pb2.AdbRequest(
             send_broadcast=adb_pb2.AdbRequest.SendBroadcast(
                 action=(
-                    'accessibility_forwarder.intent.action.SET_GRPC --ei'
-                    f' "port" {self._port}'
+                    'accessibility_forwarder.intent.action.SET_GRPC'
+                    f' --es "host" "{self._ip}"'
+                    f' --ei "port" {self._port}'
                 ),
                 component=(
                     'com.google.androidenv.accessibilityforwarder/com.google.androidenv.accessibilityforwarder.FlagsBroadcastReceiver'
diff --git a/examples/__init__.py b/examples/__init__.py
index 2f66bf7..5945dc5 100644
--- a/examples/__init__.py
+++ b/examples/__init__.py
@@ -1,5 +1,5 @@
 # coding=utf-8
-# Copyright 2024 DeepMind Technologies Limited.
+# Copyright 2025 DeepMind Technologies Limited.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
diff --git a/examples/run_acme_agent.py b/examples/run_acme_agent.py
index 754a043..29662f1 100644
--- a/examples/run_acme_agent.py
+++ b/examples/run_acme_agent.py
@@ -1,5 +1,5 @@
 # coding=utf-8
-# Copyright 2024 DeepMind Technologies Limited.
+# Copyright 2025 DeepMind Technologies Limited.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
diff --git a/examples/run_human_agent.py b/examples/run_human_agent.py
index 505a729..7fa24e0 100644
--- a/examples/run_human_agent.py
+++ b/examples/run_human_agent.py
@@ -1,5 +1,5 @@
 # coding=utf-8
-# Copyright 2024 DeepMind Technologies Limited.
+# Copyright 2025 DeepMind Technologies Limited.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
diff --git a/examples/run_random_agent.py b/examples/run_random_agent.py
index fc8017b..87aef11 100644
--- a/examples/run_random_agent.py
+++ b/examples/run_random_agent.py
@@ -1,5 +1,5 @@
 # coding=utf-8
-# Copyright 2024 DeepMind Technologies Limited.
+# Copyright 2025 DeepMind Technologies Limited.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
diff --git a/setup.py b/setup.py
index 2c201d0..e0922b7 100644
--- a/setup.py
+++ b/setup.py
@@ -1,4 +1,4 @@
-# Copyright 2024 DeepMind Technologies Limited.
+# Copyright 2025 DeepMind Technologies Limited.
 #
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
